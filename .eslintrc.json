{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "./tsconfig.base.json",
    "sourceType": "module",
    "createDefaultProgram": true
  },
  "ignorePatterns": ["**/*"],
  "plugins": [
    "@nrwl/nx",
    "@typescript-eslint",
    "import",
    "security",
    "prettier",
    "unused-imports",
    "jest",
    "jsx-a11y",
    "react-hooks"
  ],
  "extends": [
    "plugin:@nrwl/nx/typescript",
    "eslint:recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:security/recommended",
    "plugin:prettier/recommended",
    "plugin:jest/recommended",
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:import/typescript",
    "plugin:jest/recommended"
  ],
  "rules": {
    "no-debugger": "error",
    "no-empty": "off",
    "no-eval": "error",
    "no-fallthrough": "error",
    "no-new-wrappers": "error",
    "no-restricted-imports": ["error", "rxjs/Rx"],
    "no-undef-init": "error",
    "no-var": "error",
    "prefer-const": "error",
    "radix": "error",
    "func-names": "off",
    "no-unused-vars": "warn",
    "camelcase": "error",
    "no-undef": "error",
    "valid-jsdoc": "error",
    "no-useless-constructor": "off",
    "no-empty-function": "off",
    "no-underscore-dangle": "off",
    "consistent-return": "off",
    "eqeqeq": ["error", "smart"],
    "security/detect-object-injection": "off",
    "@typescript-eslint/no-this-alias": "warn",
    "no-self-assign": "warn",
    "no-throw-literal": "error",
    "prettier/prettier": "error",
    "no-await-in-loop": "error",
    "no-spaced-func": "error",
    "prefer-arrow-callback": "error",
    "no-promise-executor-return": "error",
    "@typescript-eslint/comma-dangle": "off", // Avoid conflict rule between Eslint and Prettier
    "import/prefer-default-export": "off", // Named export is easier to refactor automatically
    "@typescript-eslint/no-unused-vars": "warn",
    "@typescript-eslint/no-shadow": [
      "warn",
      {
        "hoist": "all"
      }
    ],
    "unused-imports/no-unused-imports": "error",
    "unused-imports/no-unused-vars": ["error", { "argsIgnorePattern": "^_" }],
    "@typescript-eslint/indent": "off",
    "@typescript-eslint/explicit-member-accessibility": "off",
    "@typescript-eslint/explicit-function-return-type": "off",
    "import/extensions": "off",
    "no-duplicate-imports": "error",
    "import/no-unresolved": "warn",
    "import/no-extraneous-dependencies": [
      "warn",
      {
        "devDependencies": false,
        "optionalDependencies": false,
        "peerDependencies": false,
        "packageDir": "./"
      }
    ],
    "import/no-internal-modules": [
      "warn",
      {
        "allow": ["**/src/**"]
      }
    ],
    "import/order": [
      "error",
      {
        "groups": ["builtin", "external", "internal", ["parent", "sibling"], "index"],
        "newlines-between": "always",
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        }
      }
    ],
    "padding-line-between-statements": [
      "error",
      { "blankLine": "always", "prev": "*", "next": "return" },
      {
        "blankLine": "always",
        "prev": ["const", "let", "var"],
        "next": "*"
      },
      {
        "blankLine": "any",
        "prev": ["const", "let", "var"],
        "next": ["const", "let", "var"]
      },
      { "blankLine": "always", "prev": "directive", "next": "*" },
      { "blankLine": "any", "prev": "directive", "next": "directive" }
    ],
    "max-len": [
      "warn",
      {
        "code": 125
      }
    ]
  },
  "overrides": [
    {
      "files": ["*.ts", "*.tsx", "*.js", "*.jsx"],
      "extends": ["plugin:@nrwl/nx/typescript"],
      "rules": {
        "@nrwl/nx/enforce-module-boundaries": [
          "error",
          {
            "enforceBuildableLibDependency": true,
            "allow": [],
            "depConstraints": [
              {
                "sourceTag": "*",
                "onlyDependOnLibsWithTags": ["*"]
              }
            ]
          }
        ]
      }
    },
    {
      "files": ["*.tsx", "*.jsx"],
      "extends": ["plugin:jsx-a11y/recommended", "plugin:react/recommended", "next/core-web-vitals"],
      "rules": {
        "react-hooks/rules-of-hooks": "error",
        "react-hooks/exhaustive-deps": "warn",
        "react/react-in-jsx-scope": "off",
        /**
         * https://eslint.org/docs/rules/curly
         * We want to use brackets
         */
        "curly": "off",

        "@next/next/no-document-import-in-page": "off",

        /** namespaced imports must be able validated */
        "import/namespace": ["error", { "allowComputed": true }],

        /** hrefs in nextjs are usually added to <Link> instead of <a> */
        "jsx-a11y/anchor-is-valid": 0,
        "jsx-a11y/anchor-has-content": 2,

        /** we often export components as both named and default for ez testing */
        "import/no-named-as-default": 0,

        /**
         *  TODO: disable some accessibility rules for now during build phase
         *  https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/click-events-have-key-events.md
         */
        "jsx-a11y/click-events-have-key-events": 0,

        /**
         * TODO: disable some accessibility rules for now during build phase
         * https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-static-element-interactions.md
         */
        "jsx-a11y/no-static-element-interactions": 0,

        /** Due to the way we set up CheckCircle, we don't want nesting check */
        "jsx-a11y/label-has-for": [
          "error",
          {
            "required": {
              "every": ["id"]
            }
          }
        ],

        /** We want to autoFocus our users */
        "jsx-a11y/no-autofocus": 0,

        /**
         * We don't have captions on our videos
         */
        "jsx-a11y/media-has-caption": 0,

        /** We want to enforce uniform handler names */
        "react/jsx-handler-names": [
          "error",
          {
            "eventHandlerPrefix": "handle",
            "eventHandlerPropPrefix": "on"
          }
        ],

        /**
         * TODO: https://eslint.org/docs/rules/prefer-destructuring
         */
        "prefer-destructuring": [
          "off",
          {
            "VariableDeclarator": {
              "array": false,
              "object": true
            },
            "AssignmentExpression": {
              "array": true,
              "object": false
            }
          },
          {
            "enforceForRenamedProperties": true
          }
        ]
      }
    },
    {
      "files": ["*.js", "*.jsx"],
      "extends": ["plugin:@nrwl/nx/javascript"],
      "rules": {}
    },
    {
      "files": "*.json",
      "parser": "jsonc-eslint-parser",
      "rules": {}
    }
  ]
}
