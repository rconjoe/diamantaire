summary: Shopify Webhook Subscriptions
value:
  css:
    listcomponent:
      container:
        class: ''
        style: ''
    tablecomponent:
      container:
        class: ''
        style: ''
      tableBody:
        class: ''
        style: ''
      tableFooter:
        class: ''
        style: ''
      tableHeader:
        class: ''
        style: ''
    textcomponent:
      container:
        class: ''
        style: ''
      text:
        class: ''
        style: ''
  fullscreen: true
  grid:
    - '12':
        id: b
        fixed: false
        h: 1
        w: 8
        x: 2
        y: 0
      '3':
        id: b
        fixed: false
        h: 2
        w: 3
        x: 0
        y: 0
      id: b
      data:
        id: b
        type: textcomponent
        componentInput:
          type: templatev2
          value: 'Hello ${ctx.username}'
          connections: []
          eval: Shopify Events Subscription Manager
          fieldType: template
        configuration:
          copyButton:
            type: static
            value: false
          style:
            type: static
            value: Title
          tooltip:
            type: static
            value: ''
        customCss:
          container:
            class: ''
            style: ''
          text:
            class: ''
            style: ''
        horizontalAlignment: center
        verticalAlignment: center
    - '12':
        id: e
        fixed: false
        h: 1
        w: 12
        x: 0
        y: 1
      '3':
        id: e
        fixed: false
        h: 1
        w: 3
        x: 0
        y: 2
      id: e
      data:
        id: e
        type: horizontaldividercomponent
        configuration:
          color:
            type: static
            value: '#00000060'
          size:
            type: static
            value: 2
        customCss:
          container:
            class: ''
            style: ''
          divider:
            class: ''
            style: ''
            tooltip: >-
              `background-color` and `height` are handled by the component
              configuration
        verticalAlignment: center
    - '12':
        id: d
        fixed: false
        h: 1
        w: 6
        x: 3
        y: 2
      '3':
        id: d
        fixed: false
        h: 1
        w: 1
        x: 1
        y: 3
      id: d
      data:
        id: d
        type: textcomponent
        componentInput:
          type: templatev2
          value: 'Hello ${ctx.username}'
          connections: []
          eval: Active subscriptions
          fieldType: template
        configuration:
          copyButton:
            type: static
            value: false
          style:
            type: static
            value: Subtitle
          tooltip:
            type: static
            value: ''
        customCss:
          container:
            class: ''
            style: ''
          text:
            class: ''
            style: ''
        horizontalAlignment: center
        verticalAlignment: center
    - '12':
        id: a
        fixed: false
        h: 12
        w: 12
        x: 0
        y: 3
      '3':
        id: a
        fixed: false
        h: 10
        w: 3
        x: 0
        y: 4
      id: a
      data:
        id: a
        type: tablecomponent
        actionButtons:
          - id: a_a
            type: buttoncomponent
            componentInput:
              type: runnable
              autoRefresh: false
              fields:
                rs:
                  type: static
                  value: '$res:f/shopify/admin_app_windmill'
                  fieldType: object
                  format: resource-c_shopify_admin
                webhook_id:
                  type: evalv2
                  value: null
                  connections:
                    - id: selectedRow
                      componentId: a
                  expr: a.selectedRow.id
                  fieldType: string
              fieldType: any
              recomputeOnInputChanged: false
              runnable:
                type: runnableByPath
                name: Delete Webhook (shopify)
                path: f/shopify/delete_webhook
                runType: script
                schema:
                  $schema: 'https://json-schema.org/draft/2020-12/schema'
                  type: object
                  properties:
                    rs:
                      type: object
                      description: ''
                      default: null
                      format: resource-c_shopify_admin
                    webhook_id:
                      type: string
                      description: ''
                      default: null
                  required:
                    - rs
                    - webhook_id
            configuration:
              afterIcon:
                type: static
                value: ''
              beforeIcon:
                type: static
                value: ''
              color:
                type: static
                value: red
              disabled:
                type: static
                value: false
              fillContainer:
                type: static
                value: false
              label:
                type: static
                value: delete
              onError:
                type: oneOf
                configuration:
                  close:
                    id:
                      type: static
                      value: ''
                  errorOverlay: {}
                  gotoUrl:
                    newTab:
                      type: static
                      value: true
                    url:
                      type: static
                      value: ''
                  open:
                    id:
                      type: static
                      value: ''
                  sendErrorToast:
                    appendError:
                      type: static
                      value: true
                    message:
                      type: static
                      value: ''
                  setTab:
                    setTab:
                      type: static
                      value: []
                selected: errorOverlay
              onSuccess:
                type: oneOf
                configuration:
                  close:
                    id:
                      type: static
                      value: ''
                  closeModal:
                    modalId:
                      type: static
                      value: ''
                  gotoUrl:
                    newTab:
                      type: static
                      value: true
                    url:
                      type: static
                      value: ''
                  none: {}
                  open:
                    id:
                      type: static
                      value: ''
                  openModal:
                    modalId:
                      type: static
                      value: ''
                  sendToast:
                    message:
                      type: static
                      value: obliterated
                  setTab:
                    setTab:
                      type: static
                      value: []
                selected: sendToast
              size:
                type: static
                value: xs
              triggerOnAppLoad:
                type: static
                value: false
            customCss:
              button:
                class: ''
                style: ''
              container:
                class: ''
                style: ''
            horizontalAlignment: center
            recomputeIds:
              - a
            verticalAlignment: center
        componentInput:
          type: runnable
          value:
            - id: 1
              name: A cell with a long name
              age: 42
            - id: 2
              name: A briefer cell
              age: 84
          autoRefresh: true
          fields:
            rs:
              type: static
              value: '$res:f/shopify/admin_app_windmill'
              fieldType: object
              format: resource-c_shopify_admin
          fieldType: array
          recomputeOnInputChanged: true
          runnable:
            type: runnableByPath
            name: List Webhooks (shopify)
            path: f/shopify/list-webhooks
            runType: script
            schema:
              $schema: 'https://json-schema.org/draft/2020-12/schema'
              type: object
              properties:
                rs:
                  type: object
                  description: ''
                  default: null
                  format: resource-c_shopify_admin
              required:
                - rs
          subFieldType: object
          transformer:
            content: >-
              return result.webhooks.map(({ id, topic, format, fields, address,
              created_at, updated_at }) => {
                return {
                  id,
                  topic,
                  fields,
                  address,
                  created_at,
                  updated_at
                }
              })
            language: frontend
            path: f/apps/shopify_webhook_subscriptions/Transformer
            suggestedRefreshOn: []
        configuration:
          columnDefs:
            type: static
            value:
              - field: id
              - field: name
              - field: age
          downloadButton:
            type: static
            value: true
          initialState:
            type: static
            value: {}
          pagination:
            type: oneOf
            configuration:
              auto:
                pageSize:
                  type: static
                  value: 20
              manual:
                pageCount:
                  type: static
                  value: -1
            selected: auto
          search:
            type: static
            value: Disabled
        customCss:
          container:
            class: ''
            style: ''
          tableBody:
            class: ''
            style: ''
          tableFooter:
            class: ''
            style: ''
          tableHeader:
            class: ''
            style: ''
    - '12':
        id: g
        fixed: false
        h: 1
        w: 12
        x: 0
        y: 15
      '3':
        id: g
        fixed: false
        h: 1
        w: 3
        x: 0
        y: 14
      id: g
      data:
        id: g
        type: horizontaldividercomponent
        configuration:
          color:
            type: static
            value: '#00000060'
          size:
            type: static
            value: 2
        customCss:
          container:
            class: ''
            style: ''
          divider:
            class: ''
            style: ''
            tooltip: >-
              `background-color` and `height` are handled by the component
              configuration
        verticalAlignment: center
    - '12':
        id: f
        fixed: false
        h: 1
        w: 6
        x: 3
        y: 16
      '3':
        id: f
        fixed: false
        h: 1
        w: 1
        x: 1
        y: 15
      id: f
      data:
        id: f
        type: textcomponent
        componentInput:
          type: templatev2
          value: 'Hello ${ctx.username}'
          connections: []
          eval: Create new webhooks
          fieldType: template
        configuration:
          copyButton:
            type: static
            value: false
          style:
            type: static
            value: Subtitle
          tooltip:
            type: static
            value: ''
        customCss:
          container:
            class: ''
            style: ''
          text:
            class: ''
            style: ''
        horizontalAlignment: center
        verticalAlignment: center
    - '12':
        id: c
        fixed: false
        h: 8
        w: 12
        x: 0
        y: 17
      '3':
        id: c
        fixed: false
        h: 8
        w: 3
        x: 0
        y: 16
      id: c
      data:
        id: c
        type: schemaformcomponent
        componentInput:
          type: static
          value:
            order:
              - topic
              - address
              - format
            properties:
              address:
                type: string
                description: 'It should fire a payload to this url:'
                default: ''
                format: uri
              format:
                type: string
                description: 'and the payload should be in the following format:'
                default: json
                enum:
                  - json
                  - xml
              topic:
                type: string
                description: 'When this event happens on shopify:'
                default: ''
                enum:
                  - app/uninstalled
                  - app_subscriptions/update
                  - bulk_operations/finish
                  - carts/create
                  - carts/update
                  - checkouts/create
                  - checkouts/delete
                  - checkouts/update
                  - collection_listings/add
                  - collection_listings/remove
                  - collection_listings/update
                  - collections/create
                  - collections/delete
                  - collections/update
                  - companies/create
                  - companies/delete
                  - companies/update
                  - company_contact_roles/assign
                  - company_contact_roles/revoke
                  - company_contacts/create
                  - company_contacts/delete
                  - company_contacts/update
                  - company_locations/create
                  - company_locations/delete
                  - company_locations/update
                  - customer_groups/create
                  - customer_groups/delete
                  - customer_groups/update
                  - customer_payment_methods/create
                  - customer_payment_methods/revoke
                  - customer_payment_methods/update
                  - customers/create
                  - customers/delete
                  - customers/disable
                  - customers/enable
                  - customers/merge
                  - customers/update
                  - customers_email_marketing_consent/update
                  - customers_marketing_consent/update
                  - disputes/create
                  - disputes/delete
                  - disputes/update
                  - fulfillment_events/create
                  - fulfillment_events/delete
                  - fulfillment_orders/cancellation_request_accepted
                  - fulfillment_orders/cancellation_request_rejected
                  - fulfillment_orders/cancellation_request_submitted
                  - fulfillment_orders/cancelled
                  - fulfillment_orders/fulfillment_request_accepted
                  - fulfillment_orders/fulfillment_request_rejected
                  - fulfillment_orders/fulfillment_request_submitted
                  - fulfillment_orders/fulfillment_service_failed_to_complete
                  - fulfillment_orders/hold_released
                  - fulfillment_orders/line_items_prepared_for_local_delivery
                  - fulfillment_orders/line_items_prepared_for_pickup
                  - fulfillment_orders/moved
                  - fulfillment_orders/order_routing_complete
                  - fulfillment_orders/placed_on_hold
                  - fulfillment_orders/rescheduled
                  - fulfillment_orders/scheduled_fulfillment_order_ready
                  - fulfillments/create
                  - fulfillments/update
                  - inventory_items/create
                  - inventory_items/delete
                  - inventory_items/update
                  - inventory_levels/connect
                  - inventory_levels/disconnect
                  - inventory_levels/update
                  - locales/create
                  - locales/update
                  - locations/activate
                  - locations/create
                  - locations/deactivate
                  - locations/delete
                  - locations/update
                  - markets/create
                  - markets/delete
                  - markets/update
                  - order_transactions/create
                  - orders/cancelled
                  - orders/create
                  - orders/delete
                  - orders/edited
                  - orders/fulfilled
                  - orders/paid
                  - orders/partially_fulfilled
                  - orders/updated
                  - payment_schedules/due
                  - product_feeds/create
                  - product_feeds/full_sync
                  - product_feeds/incremental_sync
                  - product_listings/add
                  - product_listings/remove
                  - product_listings/update
                  - products/create
                  - products/delete
                  - products/update
                  - profiles/create
                  - profiles/delete
                  - profiles/update
                  - refunds/create
                  - scheduled_product_listings/add
                  - scheduled_product_listings/remove
                  - scheduled_product_listings/update
                  - selling_plan_groups/create
                  - selling_plan_groups/delete
                  - selling_plan_groups/update
                  - shop/update
                  - subscription_billing_attempts/challenged
                  - subscription_billing_attempts/failure
                  - subscription_billing_attempts/success
                  - subscription_billing_cycle_edits/create
                  - subscription_billing_cycle_edits/delete
                  - subscription_billing_cycle_edits/update
                  - subscription_contracts/create
                  - subscription_contracts/update
                  - tender_transactions/create
                  - themes/create
                  - themes/delete
                  - themes/publish
                  - themes/update
            required:
              - address
              - topic
              - format
          autoRefresh: true
          connections: []
          expr: ''
          fields: {}
          fieldType: schema
          recomputeOnInputChanged: true
        configuration:
          displayType:
            type: static
            value: false
          largeGap:
            type: static
            value: false
        customCss:
          description:
            class: ''
            style: ''
          container:
            class: ''
            style: ''
          label:
            class: ''
            style: ''
    - '12':
        id: h
        fixed: false
        h: 2
        w: 2
        x: 5
        y: 25
      '3':
        id: h
        fixed: false
        h: 1
        w: 1
        x: 1
        y: 24
      id: h
      data:
        id: h
        type: buttoncomponent
        componentInput:
          type: runnable
          autoRefresh: false
          fields:
            rs:
              type: static
              value: '$res:f/shopify/admin_app_windmill'
              fieldType: object
              format: resource-c_shopify_admin
            webhook:
              type: evalv2
              value: null
              connections:
                - id: values
                  componentId: c
              expr: c.values
              fieldType: object
          fieldType: any
          recomputeOnInputChanged: false
          runnable:
            type: runnableByPath
            name: Create Webhook (shopify)
            path: f/shopify/create_webhook
            runType: script
            schema:
              $schema: 'https://json-schema.org/draft/2020-12/schema'
              type: object
              properties:
                rs:
                  type: object
                  description: ''
                  default: null
                  format: resource-c_shopify_admin
                webhook:
                  type: object
                  description: ''
                  default: null
                  properties:
                    address:
                      type: string
                    format:
                      type: string
                    topic:
                      type: string
              required:
                - rs
                - webhook
        configuration:
          afterIcon:
            type: static
            value: ''
          beforeIcon:
            type: static
            value: ''
          color:
            type: static
            value: green
          disabled:
            type: static
            value: false
          fillContainer:
            type: static
            value: false
          label:
            type: static
            value: Create
          onError:
            type: oneOf
            configuration:
              close:
                id:
                  type: static
                  value: ''
              errorOverlay: {}
              gotoUrl:
                newTab:
                  type: static
                  value: true
                url:
                  type: static
                  value: ''
              open:
                id:
                  type: static
                  value: ''
              sendErrorToast:
                appendError:
                  type: static
                  value: true
                message:
                  type: static
                  value: ''
              setTab:
                setTab:
                  type: static
                  value: []
            selected: errorOverlay
          onSuccess:
            type: oneOf
            configuration:
              close:
                id:
                  type: static
                  value: ''
              closeModal:
                modalId:
                  type: static
                  value: ''
              gotoUrl:
                newTab:
                  type: static
                  value: true
                url:
                  type: static
                  value: ''
              none: {}
              open:
                id:
                  type: static
                  value: ''
              openModal:
                modalId:
                  type: static
                  value: ''
              sendToast:
                message:
                  type: static
                  value: ''
              setTab:
                setTab:
                  type: static
                  value: []
            selected: none
          size:
            type: static
            value: md
          triggerOnAppLoad:
            type: static
            value: false
        customCss:
          button:
            class: ''
            style: ''
          container:
            class: ''
            style: ''
        horizontalAlignment: center
        recomputeIds:
          - a
        verticalAlignment: center
  hiddenInlineScripts: []
  norefreshbar: false
  subgrids: {}
  theme:
    type: path
    path: f/app_themes/theme_0
  unusedInlineScripts: []
policy:
  execution_mode: publisher
  on_behalf_of: u/jcarlton
  on_behalf_of_email: jcarlton@vrai.com
  triggerables:
    'a_a:script/f/shopify/delete_webhook':
      rs: '$res:f/shopify/admin_app_windmill'
    'a:script/f/shopify/list-webhooks':
      rs: '$res:f/shopify/admin_app_windmill'
    'h:script/f/shopify/create_webhook':
      rs: '$res:f/shopify/admin_app_windmill'
