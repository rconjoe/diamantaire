input AccordionItemModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  copy: TextFilter
  ctacopy: StringFilter
  ctaroute: StringFilter
  supportedCountries: LinksFilter
  title: StringFilter
  OR: [AccordionItemModelFilter]
  AND: [AccordionItemModelFilter]
}

enum AccordionItemModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  ctacopy_ASC
  ctacopy_DESC
  ctaroute_ASC
  ctaroute_DESC
  title_ASC
  title_DESC
}

"""Record of type Accordion Item (accordion_item)"""
type AccordionItemRecord implements RecordInterface {
  _allCopyLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allCtacopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  createdAt: DateTime!
  ctacopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  ctaroute: String
  id: ItemId!
  supportedCountries: [CountryRecord!]!
  title(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  updatedAt: DateTime!
}

"""Record of type Account Reminder Form (account_reminder_form)"""
type AccountReminderFormRecord implements RecordInterface {
  _allDateLabelLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDatePlaceholderLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allErrorCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allInstructionsLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allOccasionLabelLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allOccasionOptionsLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [JsonKeyRecordListListNonNullMultiLocaleField!]
  _allOtherOccasionPlaceholderLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allPhonePlaceholderLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allPreferredCommunicationLabelLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allPreferredCommunicationOptionsLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [JsonKeyRecordListListNonNullMultiLocaleField!]
  _allRecipientNameLabelLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allRecipientNamePlaceholderLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allSaveCtaCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  dateLabel(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  datePlaceholder(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  errorCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  id: ItemId!
  instructions(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  occasionLabel(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  occasionOptions(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [JsonKeyRecord!]!
  otherOccasionPlaceholder(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  phonePlaceholder(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  preferredCommunicationLabel(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  preferredCommunicationOptions(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [JsonKeyRecord!]!
  recipientNameLabel(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  recipientNamePlaceholder(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  saveCtaCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  updatedAt: DateTime!
}

"""Record of type Account Reminders List (account_reminders_list)"""
type AccountRemindersListRecord implements RecordInterface {
  _allDateLabelLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDeleteConfirmationCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDeleteConfirmationNoLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDeleteConfirmationYesLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allEditReminderCtaCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allHeaderSubtitleHasRemindersLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allHeaderSubtitleNoRemindersLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allHeaderTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allNewReminderCtaCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allPreferredCommunicationLabelLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allRecipientNameLabelLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allRemoveReminderCtaCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  dateLabel(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  deleteConfirmationCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  deleteConfirmationNo(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  deleteConfirmationYes(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  editReminderCtaCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  headerSubtitleHasReminders(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  headerSubtitleNoReminders(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  headerTitle(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  id: ItemId!
  newReminderCtaCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  preferredCommunicationLabel(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  recipientNameLabel(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  removeReminderCtaCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  updatedAt: DateTime!
}

"""Record of type Account Subscription Form (account_subscription_form)"""
type AccountSubscriptionFormRecord implements RecordInterface {
  _allDateLabelLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDatePlaceholderLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allErrorCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allInstructionsLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allMetalColorLabelLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allMetalColorOptionsLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [JsonKeyRecordListListNonNullMultiLocaleField!]
  _allOccasionLabelLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allOccasionOptionsLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [JsonKeyRecordListListNonNullMultiLocaleField!]
  _allOtherOccasionPlaceholderLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allPhonePlaceholderLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allPreferredCommunicationLabelLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allPreferredCommunicationOptionsLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [JsonKeyRecordListListNonNullMultiLocaleField!]
  _allRecipientNameLabelLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allRecipientNamePlaceholderLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allSaveCtaCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  dateLabel(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  datePlaceholder(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  errorCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  id: ItemId!
  instructions(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  metalColorLabel(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  metalColorOptions(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [JsonKeyRecord!]!
  occasionLabel(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  occasionOptions(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [JsonKeyRecord!]!
  otherOccasionPlaceholder(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  phonePlaceholder(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  preferredCommunicationLabel(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  preferredCommunicationOptions(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [JsonKeyRecord!]!
  recipientNameLabel(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  recipientNamePlaceholder(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  saveCtaCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  updatedAt: DateTime!
}

"""Record of type Account Subscriptions List (account_subscriptions_list)"""
type AccountSubscriptionsListRecord implements RecordInterface {
  _allDateLabelLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDeleteConfirmationCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDeleteConfirmationNoLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDeleteConfirmationYesLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allEditSubscriptionCtaCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allHeaderSubtitleEmptyLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allHeaderSubtitleLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allHeaderTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allNewSubscriptionCtaCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allPreferredCommunicationLabelLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allRecipientNameLabelLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allRemoveSubscriptionCtaCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  dateLabel(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  deleteConfirmationCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  deleteConfirmationNo(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  deleteConfirmationYes(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  editSubscriptionCtaCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  headerSubtitle(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  headerSubtitleEmpty(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  headerTitle(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  id: ItemId!
  newSubscriptionCtaCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  preferredCommunicationLabel(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  recipientNameLabel(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  removeSubscriptionCtaCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  updatedAt: DateTime!
}

input AdditionalInfoModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  image: FileFilter
  text: TextFilter
  title: StringFilter
  OR: [AdditionalInfoModelFilter]
  AND: [AdditionalInfoModelFilter]
}

enum AdditionalInfoModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  title_ASC
  title_DESC
}

"""Record of type Additional info (additional_info)"""
type AdditionalInfoRecord implements RecordInterface {
  _allTextLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  image: FileField
  text(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  title(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  updatedAt: DateTime!
}

input AnnouncementBarInfoModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  _locales: LocalesFilter
  backgroundColor: ColorFilter
  color: ColorFilter
  copy: TextFilter
  endDate: DateTimeFilter
  hide: BooleanFilter
  link: StringFilter
  shouldShowDynamicBookAnAppointment: BooleanFilter
  startDate: DateTimeFilter
  supportedCountries: LinksFilter
  title: StringFilter
  OR: [AnnouncementBarInfoModelFilter]
  AND: [AnnouncementBarInfoModelFilter]
}

enum AnnouncementBarInfoModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  endDate_ASC
  endDate_DESC
  hide_ASC
  hide_DESC
  link_ASC
  link_DESC
  shouldShowDynamicBookAnAppointment_ASC
  shouldShowDynamicBookAnAppointment_DESC
  startDate_ASC
  startDate_DESC
  title_ASC
  title_DESC
}

"""Record of type Announcement Data (announcement_bar_info)"""
type AnnouncementBarInfoRecord implements RecordInterface {
  _allCopyLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allLinkLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allShouldShowDynamicBookAnAppointmentLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [BooleanTypeMultiLocaleField!]
  _allTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  backgroundColor: ColorField
  color: ColorField
  copy(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  createdAt: DateTime!
  endDate: DateTime
  hide: BooleanType
  id: ItemId!
  link(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  shouldShowDynamicBookAnAppointment(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): BooleanType
  startDate: DateTime
  supportedCountries: [CountryRecord!]!
  title(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  updatedAt: DateTime!
}

"""Record of type Announcement Bar (announcement_bar)"""
type AnnouncementBarRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  data: [AnnouncementBarInfoRecord!]!
  id: ItemId!
  updatedAt: DateTime!
}

"""Record of type Annual Gift Form (annual_gift_form)"""
type AnnualGiftFormRecord implements RecordInterface {
  _allCtaCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allPhoneInputPlaceholderLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allRadioLabel1Locales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allRadioLabel2Locales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allRadioOptions1Locales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [MoneyRadioOptionRecordListListNonNullMultiLocaleField!]
  _allRadioOptions2Locales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [JsonKeyRecordListListNonNullMultiLocaleField!]
  _allTextInputLabel1Locales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allTextInputPlaceholder1Locales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  ctaCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  id: ItemId!
  phoneInputPlaceholder(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  radioLabel1(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  radioLabel2(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  radioOptions1(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [MoneyRadioOptionRecord!]!
  radioOptions2(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [JsonKeyRecord!]!
  textInputLabel1(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  textInputPlaceholder1(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  title(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  updatedAt: DateTime!
}

"""Record of type Annual Gifting (annual_gifting)"""
type AnnualGiftingRecord implements RecordInterface {
  _allBudgetLabelLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allBudgetOptionsLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [MoneyRadioOptionRecordListListNonNullMultiLocaleField!]
  _allCtaCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allCustomerEmailLabelLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allCustomerNameLabelLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allCustomerPhoneLabelLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDateLabelLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allMessageLabelLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allMetalColorLabelLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allMetalColorOptionsLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [JsonKeyRecordListListNonNullMultiLocaleField!]
  _allOccasionLabelLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allRecipientAddressLine1LabelLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allRecipientAddressLine2LabelLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allRecipientCityLabelLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allRecipientCountryLabelLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allRecipientFormTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allRecipientNameLabelLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allRecipientPostalCodeLabelLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allRecipientStateLabelLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allSubscriptionFormCopyLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allSubscriptionFormTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  budgetLabel(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  budgetOptions(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [MoneyRadioOptionRecord!]!
  createdAt: DateTime!
  ctaCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  customerEmailLabel(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  customerNameLabel(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  customerPhoneLabel(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  dateLabel(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  id: ItemId!
  messageLabel(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  metalColorLabel(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  metalColorOptions(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [JsonKeyRecord!]!
  occasionLabel(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  recipientAddressLine1Label(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  recipientAddressLine2Label(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  recipientCityLabel(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  recipientCountryLabel(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  recipientFormTitle(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  recipientNameLabel(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  recipientPostalCodeLabel(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  recipientStateLabel(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  subscriptionFormCopy(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  subscriptionFormTitle(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  updatedAt: DateTime!
}

"""Block of type Assembled To Order Product (assembled_to_order_product)"""
type AssembledToOrderProductRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  shippingBusinessDays: IntType
  sku: String
  updatedAt: DateTime!
}

"""Block of type Band Depth Label (band_depth_label)"""
type BandDepthLabelRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy: String
  createdAt: DateTime!
  id: ItemId!
  specName: String
  updatedAt: DateTime!
}

"""Block of type Band Height Label (band_height_label)"""
type BandHeightLabelRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy: String
  createdAt: DateTime!
  id: ItemId!
  specName: String
  updatedAt: DateTime!
}

"""Block of type Band Width Label (band_width_label)"""
type BandWidthLabelRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy: String
  createdAt: DateTime!
  id: ItemId!
  specName: String
  updatedAt: DateTime!
}

"""Block of type Basic Text Label (basic_text_label)"""
type BasicTextLabelRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy: String
  createdAt: DateTime!
  id: ItemId!
  key: String
  updatedAt: DateTime!
}

input BlogCategoryModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  _locales: LocalesFilter
  copy: StringFilter
  key: StringFilter
  route: StringFilter
  seoDescription: StringFilter
  seoTitle: StringFilter
  subcategories: LinksFilter
  OR: [BlogCategoryModelFilter]
  AND: [BlogCategoryModelFilter]
}

enum BlogCategoryModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  copy_ASC
  copy_DESC
  key_ASC
  key_DESC
  route_ASC
  route_DESC
  seoDescription_ASC
  seoDescription_DESC
  seoTitle_ASC
  seoTitle_DESC
}

"""Record of type Blog Category (blog_category)"""
type BlogCategoryRecord implements RecordInterface {
  _allCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allRouteLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allSeoDescriptionLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allSeoTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allSubcategoriesLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [BlogSubcategoryRecordListListNonNullMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  createdAt: DateTime!
  id: ItemId!
  key: String
  route(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  seoDescription(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  seoTitle(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  subcategories(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [BlogSubcategoryRecord!]!
  updatedAt: DateTime!
}

type BlogCategoryRecordListListNonNullMultiLocaleField {
  locale: SiteLocale
  value: [BlogCategoryRecord!]!
}

type BlogCategoryRecordMultiLocaleField {
  locale: SiteLocale
  value: BlogCategoryRecord
}

"""Record of type Blog Configuration (blog_configuration)"""
type BlogConfigurationRecord implements RecordInterface {
  _allBlogHomeSeoDescriptionLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allBlogHomeSeoTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allCategoriesToDisplayLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [BlogCategoryRecordListListNonNullMultiLocaleField!]
  _allHeroPostLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [BlogPostRecordMultiLocaleField!]
  _allLatestStoriesTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  blogHomeSeoDescription(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  blogHomeSeoTitle(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  categoriesToDisplay(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [BlogCategoryRecord!]!
  createdAt: DateTime!
  heroPost(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): BlogPostRecord
  id: ItemId!
  latestStoriesTitle(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  postsPerPage: IntType
  sortMethod: String
  title(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  updatedAt: DateTime!
}

"""Record of type Blog Header (blog_header)"""
type BlogHeaderRecord implements RecordInterface {
  _allLinksLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [NavigationLinkRecordListListNonNullMultiLocaleField!]
  _allTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  links(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [NavigationLinkRecord!]!
  title(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  updatedAt: DateTime!
}

union BlogPostModelContentField = ModularAccordionBlockRecord | ModularBlogListTrioBlockRecord | ModularCarouselBlockRecord | ModularCarouselHoverBlockRecord | ModularCelebrityCarouselBlockRecord | ModularCelebrityReelBlockRecord | ModularCollectionHeroBlockRecord | ModularDuoBlockRecord | ModularEmailSignupBlockRecord | ModularFullWidthBannerBlockRecord | ModularGridCarouselBlockRecord | ModularHalfWidthBannerBlockRecord | ModularHalfWidthQuadBlockRecord | ModularHeroBannerBlockRecord | ModularHorizontalLineBlockRecord | ModularInstagramReelBlockRecord | ModularLeoBlockRecord | ModularListTitleBlockRecord | ModularLogoBannerBlockRecord | ModularMiniBannerBlockRecord | ModularProductSliderBlockRecord | ModularProductSuggestionQuadBlockRecord | ModularQuadBlockRecord | ModularQuadGridRecord | ModularQuadLogoBlockRecord | ModularQuadStatisticsBlockRecord | ModularQuoteBlockRecord | ModularShowroomBlockRecord | ModularSideBySideBlockRecord | ModularSingleVideoBlockRecord | ModularSinglesvgBlockRecord | ModularSkinnyHeroBannerBlockRecord | ModularSlickCarouselBlockRecord | ModularTallHalfWidthBlockRecord | ModularTextOnlyBlockRecord | ModularTrio1x1BlockRecord | ModularTrio9x7BlockRecord | ModularTrioSlide9x7BlockRecord | ModularTrioStaggered9x7BlockRecord | ModularTriosvgBlockRecord | SocialMediaSectionRecord

type BlogPostModelContentFieldListListNonNullMultiLocaleField {
  locale: SiteLocale
  value: [BlogPostModelContentField!]!
}

input BlogPostModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  _locales: LocalesFilter
  author: StringFilter
  category: LinkFilter
  excerpt: TextFilter
  featuredImage: FileFilter
  publishedAt: DateTimeFilter
  seoDescription: StringFilter
  seoTitle: StringFilter
  showBlogHeader: BooleanFilter
  slug: StringFilter
  sortByDate: DateFilter
  subcategories: LinksFilter
  tags: StringFilter
  title: StringFilter
  OR: [BlogPostModelFilter]
  AND: [BlogPostModelFilter]
}

enum BlogPostModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  author_ASC
  author_DESC
  publishedAt_ASC
  publishedAt_DESC
  seoDescription_ASC
  seoDescription_DESC
  seoTitle_ASC
  seoTitle_DESC
  showBlogHeader_ASC
  showBlogHeader_DESC
  slug_ASC
  slug_DESC
  sortByDate_ASC
  sortByDate_DESC
  tags_ASC
  tags_DESC
  title_ASC
  title_DESC
}

"""Record of type Blog Post (blog_post)"""
type BlogPostRecord implements RecordInterface {
  _allCategoryLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [BlogCategoryRecordMultiLocaleField!]
  _allContentLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [BlogPostModelContentFieldListListNonNullMultiLocaleField!]
  _allExcerptLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allSeoDescriptionLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allSeoTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allSummaryLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [ModularTextOnlyBlockRecordListListNonNullMultiLocaleField!]
  _allTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  author: String
  category(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): BlogCategoryRecord
  content(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [BlogPostModelContentField!]!
  createdAt: DateTime!
  excerpt(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  featuredImage: FileField
  id: ItemId!
  publishedAt: DateTime
  seoDescription(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  seoTitle(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  showBlogHeader: BooleanType
  slug: String
  sortByDate: Date
  subcategories: [BlogSubcategoryRecord!]!
  summary(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [ModularTextOnlyBlockRecord!]!
  tags: String
  title(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  updatedAt: DateTime!
}

type BlogPostRecordMultiLocaleField {
  locale: SiteLocale
  value: BlogPostRecord
}

input BlogSubcategoryModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  _locales: LocalesFilter
  copy: StringFilter
  key: StringFilter
  route: StringFilter
  seoDescription: StringFilter
  seoTitle: StringFilter
  OR: [BlogSubcategoryModelFilter]
  AND: [BlogSubcategoryModelFilter]
}

enum BlogSubcategoryModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  copy_ASC
  copy_DESC
  key_ASC
  key_DESC
  route_ASC
  route_DESC
  seoDescription_ASC
  seoDescription_DESC
  seoTitle_ASC
  seoTitle_DESC
}

"""Record of type Blog Subcategory (blog_subcategory)"""
type BlogSubcategoryRecord implements RecordInterface {
  _allCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allKeyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allSeoTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  createdAt: DateTime!
  id: ItemId!
  key(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  route: String
  seoDescription: String
  seoTitle(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  updatedAt: DateTime!
}

type BlogSubcategoryRecordListListNonNullMultiLocaleField {
  locale: SiteLocale
  value: [BlogSubcategoryRecord!]!
}

"""Specifies how to filter Boolean fields"""
input BooleanFilter {
  """Search for records with an exact match"""
  eq: BooleanType
}

"""Represents `true` or `false` values."""
scalar BooleanType

type BooleanTypeMultiLocaleField {
  locale: SiteLocale
  value: BooleanType
}

input BreadcrumbModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  _locales: LocalesFilter
  link: LinkFilter
  name: StringFilter
  OR: [BreadcrumbModelFilter]
  AND: [BreadcrumbModelFilter]
}

union BreadcrumbModelLinkField = AccountRemindersListRecord | BlogCategoryRecord | BlogPostRecord | BlogSubcategoryRecord | CelebrityJewelryRecord | DiamondNotifierPageRecord | DiamondProductRecord | EngagementRingPdpCtaRecord | EngagementRingProductRecord | EngagementRingSummaryPageRecord | EngravingOptionCopyRecord | JeweleryProductSubCategoryRecord | JewelryOmegaProductRecord | JewelryPdpCtaRecord | JewelryProductRecord | ListPageRecord | OmegaProductRecord | OurDiamondRecord | PageSeoRecord | ProductListItemRecord | RingSizeOptionCopyRecord | StandardPageRecord | WeddingBandProductRecord

enum BreadcrumbModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  name_ASC
  name_DESC
}

"""Record of type Breadcrumb (breadcrumb)"""
type BreadcrumbRecord implements RecordInterface {
  _allNameLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  link: BreadcrumbModelLinkField
  name(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  updatedAt: DateTime!
}

"""Block of type Carat Label (carat_label)"""
type CaratLabelRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy: String
  createdAt: DateTime!
  id: ItemId!
  specName: String
  updatedAt: DateTime!
}

input CarouselHoverBlockItemModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  _locales: LocalesFilter
  hover: FileFilter
  image: FileFilter
  itemName: StringFilter
  title: StringFilter
  url: StringFilter
  OR: [CarouselHoverBlockItemModelFilter]
  AND: [CarouselHoverBlockItemModelFilter]
}

enum CarouselHoverBlockItemModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  itemName_ASC
  itemName_DESC
  title_ASC
  title_DESC
  url_ASC
  url_DESC
}

"""Record of type Carousel Hover Block Item (carousel_hover_block_item)"""
type CarouselHoverBlockItemRecord implements RecordInterface {
  _allItemNameLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allUrlLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  hover: FileField
  id: ItemId!
  image: FileField
  itemName(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  title(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  updatedAt: DateTime!
  url(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
}

"""Block of type Cart Certificate (cart_certificate)"""
type CartCertificateRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy: String
  createdAt: DateTime!
  id: ItemId!
  price: String
  title: String
  updatedAt: DateTime!
}

type CartCertificateRecordListListNonNullMultiLocaleField {
  locale: SiteLocale
  value: [CartCertificateRecord!]!
}

"""Block of type Cart Page Copy (cart_page_copy)"""
type CartPageCopyRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  addNoteOptionCopy: String
  addNoteOptionCta: String
  belowCartCopy: String
  buybackProductSubtitleCopy: String
  cartCtaCopy: String
  createdAt: DateTime!
  currentNoteCopy: String
  diamondProductSubtitleCopy: String
  diamondUnavailableErrorLinkCopy: String
  diamondUnavailableErrorMessage: String
  earringPairCaratWeightCopy: String
  emptyCartBelowTitleCopy: String
  emptyCartMainCopy: String
  emptyCartMainCtaCopy: String
  emptyCartMainCtaLink: String
  engagementProductSubtitleCopy: String
  euSubtotalCopy: String
  freeShippingCopy: String
  id: ItemId!
  leftSideCopy: String
  modifyNoteCopy: String
  pairCopy: String
  removeNoteOptionCta: String
  rightSideCopy: String
  shippingCopy: String
  signatureRequiredCopy: String
  signatureRequiredCtaCopy: String
  signatureRequiredCtaLink: String
  signatureRequiredInfoCopy: String
  singleCopy: String
  subtotalCopy: String
  termsAndConditionsCtaCopy: String
  termsAndConditionsCtaLink: String
  title: String
  updateNoteOptionCta: String
  updatedAt: DateTime!
  weddingBandSubtitleCopy: String
}

type CartPageCopyRecordListListNonNullMultiLocaleField {
  locale: SiteLocale
  value: [CartPageCopyRecord!]!
}

"""Record of type Cart (cart)"""
type CartRecord implements RecordInterface {
  _allCertificatesLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [CartCertificateRecordListListNonNullMultiLocaleField!]
  _allDiamondDetailInOrderLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [ModularProductOptionRecordListListNonNullMultiLocaleField!]
  _allPageCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [CartPageCopyRecordListListNonNullMultiLocaleField!]
  _allProductDetailInOrderLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [ModularProductOptionRecordListListNonNullMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  certificates(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [CartCertificateRecord!]!
  createdAt: DateTime!
  diamondDetailInOrder(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [ModularProductOptionRecord!]!
  id: ItemId!
  mappers: [HumanNamesMapperRecord!]!
  pageCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [CartPageCopyRecord!]!
  productDetailInOrder(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [ModularProductOptionRecord!]!
  updatedAt: DateTime!
}

input CelebrityBlockModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  _locales: LocalesFilter
  bottomCarouselCopy: StringFilter
  bottomCarouselImage: FileFilter
  copy: StringFilter
  desktopImage: FileFilter
  internalCmsUse: StringFilter
  jewelry: LinksFilter
  title: StringFilter
  OR: [CelebrityBlockModelFilter]
  AND: [CelebrityBlockModelFilter]
}

enum CelebrityBlockModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  bottomCarouselCopy_ASC
  bottomCarouselCopy_DESC
  copy_ASC
  copy_DESC
  internalCmsUse_ASC
  internalCmsUse_DESC
  title_ASC
  title_DESC
}

"""Record of type Celebrity Block (celebrity_block)"""
type CelebrityBlockRecord implements RecordInterface {
  _allBottomCarouselCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  bottomCarouselCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  bottomCarouselImage: FileField
  copy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  createdAt: DateTime!
  desktopImage: FileField
  id: ItemId!
  internalCmsUse: String
  jewelry: [CelebrityJewelryRecord!]!
  title(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  updatedAt: DateTime!
}

input CelebrityJewelryModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  _locales: LocalesFilter
  ctaCopy: StringFilter
  ctaRoute: StringFilter
  image: FileFilter
  itemName: StringFilter
  OR: [CelebrityJewelryModelFilter]
  AND: [CelebrityJewelryModelFilter]
}

enum CelebrityJewelryModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  ctaCopy_ASC
  ctaCopy_DESC
  ctaRoute_ASC
  ctaRoute_DESC
  itemName_ASC
  itemName_DESC
}

"""Record of type Celebrity Jewelry (celebrity_jewelry)"""
type CelebrityJewelryRecord implements RecordInterface {
  _allCtaCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allCtaRouteLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allItemNameLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  ctaCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  ctaRoute(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  id: ItemId!
  image: FileField
  itemName(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  updatedAt: DateTime!
}

"""Block of type Certificate Label (certificate_label)"""
type CertificateLabelRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy: String
  createdAt: DateTime!
  id: ItemId!
  specName: String
  updatedAt: DateTime!
}

"""Block of type Chain Length Label (chain_length_label)"""
type ChainLengthLabelRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy: String
  createdAt: DateTime!
  id: ItemId!
  specName: String
  updatedAt: DateTime!
}

"""Block of type Chain Width Label (chain_width_label)"""
type ChainWidthLabelRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy: String
  createdAt: DateTime!
  id: ItemId!
  specName: String
  updatedAt: DateTime!
}

"""Block of type Charm Label (charm_label)"""
type CharmLabelRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy: String
  createdAt: DateTime!
  id: ItemId!
  specName: String
  updatedAt: DateTime!
}

"""Block of type Clarity Label (clarity_label)"""
type ClarityLabelRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy: String
  createdAt: DateTime!
  id: ItemId!
  specName: String
  updatedAt: DateTime!
}

"""Block of type Closure Label (closure_label)"""
type ClosureLabelRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy: String
  createdAt: DateTime!
  id: ItemId!
  specName: String
  updatedAt: DateTime!
}

type CollectionMetadata {
  count: IntType!
}

enum ColorBucketType {
  red
  orange
  pink
  cyan
  purple
  blue
  yellow
  green
  brown
  grey
  white
  black
}

type ColorField {
  alpha: IntType!
  blue: IntType!
  cssRgb: String!
  green: IntType!
  hex: String!
  red: IntType!
}

"""Specifies how to filter Color fields"""
input ColorFilter {
  """
  Filter records with the specified field defined (i.e. with any value) or not
  """
  exists: BooleanType
}

"""Block of type Color Label (color_label)"""
type ColorLabelRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy: String
  createdAt: DateTime!
  id: ItemId!
  specName: String
  updatedAt: DateTime!
}

"""Block of type Column (column)"""
type ColumnRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  links: [NavigationLinkRecord!]!
  title: String
  updatedAt: DateTime!
}

type ColumnRecordListListNonNullMultiLocaleField {
  locale: SiteLocale
  value: [ColumnRecord!]!
}

union ConfigurationModelBelowBannerBlocksField = ModularCarouselBlockRecord | ModularCarouselHoverBlockRecord | ModularCelebrityCarouselBlockRecord | ModularCelebrityReelBlockRecord | ModularEmailSignupBlockRecord | ModularFullWidthBannerBlockRecord | ModularGridCarouselBlockRecord | ModularHalfWidthQuadBlockRecord | ModularInstagramReelBlockRecord | ModularMiniBannerBlockRecord | ModularProductSliderBlockRecord | ModularProductSuggestionQuadBlockRecord | ModularQuadBlockRecord | ModularQuadGridRecord | ModularShowroomBlockRecord | ModularSideBySideBlockRecord | ModularSingleVideoBlockRecord | ModularTallHalfWidthBlockRecord | ModularTextOnlyBlockRecord | ModularTrio9x7BlockRecord | ModularTrioSlide9x7BlockRecord | ModularTrioStaggered9x7BlockRecord | SocialMediaSectionRecord

input ConfigurationModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  assetStack: GalleryFilter
  bandWidth: StringFilter
  carat: StringFilter
  caratWeightOverride: StringFilter
  chainLength: StringFilter
  chainWidth: StringFilter
  charm: StringFilter
  clarity: StringFilter
  closure: StringFilter
  color: StringFilter
  configuredProductOptionsInOrder: StringFilter
  cordWidth: StringFilter
  countrySpecificPrices: JsonFilter
  cut: StringFilter
  depth: StringFilter
  diamondCount: IntegerFilter
  diamondDescriptionOverride: TextFilter
  diamondSize: StringFilter
  isWaitlisted: BooleanFilter
  jacketLength: StringFilter
  jewelryProduct: LinkFilter
  metal: StringFilter
  origin: StringFilter
  outerDiameter: StringFilter
  plpImage: FileFilter
  plpImageHover: FileFilter
  plpTitle: StringFilter
  posts: StringFilter
  productIconList: LinkFilter
  productSuggestionQuadBlock: LinkFilter
  ringFace: StringFilter
  setting: StringFilter
  shape: StringFilter
  shownWithCenterStone: StringFilter
  trioBlocks: LinkFilter
  variantId: StringFilter
  OR: [ConfigurationModelFilter]
  AND: [ConfigurationModelFilter]
}

enum ConfigurationModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  bandWidth_ASC
  bandWidth_DESC
  carat_ASC
  carat_DESC
  caratWeightOverride_ASC
  caratWeightOverride_DESC
  chainLength_ASC
  chainLength_DESC
  chainWidth_ASC
  chainWidth_DESC
  charm_ASC
  charm_DESC
  clarity_ASC
  clarity_DESC
  closure_ASC
  closure_DESC
  color_ASC
  color_DESC
  configuredProductOptionsInOrder_ASC
  configuredProductOptionsInOrder_DESC
  cordWidth_ASC
  cordWidth_DESC
  cut_ASC
  cut_DESC
  depth_ASC
  depth_DESC
  diamondCount_ASC
  diamondCount_DESC
  diamondSize_ASC
  diamondSize_DESC
  isWaitlisted_ASC
  isWaitlisted_DESC
  jacketLength_ASC
  jacketLength_DESC
  metal_ASC
  metal_DESC
  origin_ASC
  origin_DESC
  outerDiameter_ASC
  outerDiameter_DESC
  plpTitle_ASC
  plpTitle_DESC
  posts_ASC
  posts_DESC
  ringFace_ASC
  ringFace_DESC
  setting_ASC
  setting_DESC
  shape_ASC
  shape_DESC
  shownWithCenterStone_ASC
  shownWithCenterStone_DESC
  variantId_ASC
  variantId_DESC
}

"""Record of type Configuration (configuration)"""
type ConfigurationRecord implements RecordInterface {
  _allAccordionBlocksLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [ModularAccordionBlockRecordListListNonNullMultiLocaleField!]
  _allBandWidthLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allCaratLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allChainLengthLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allChainWidthLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allCharmLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allClarityLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allClosureLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allColorLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allCordWidthLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allCutLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDepthLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDiamondDescriptionOverrideLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allDiamondSizeLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allJacketLengthLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allMetalLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allOriginLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allOuterDiameterLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allPlpTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allPostsLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allRingFaceLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allSettingLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allShapeLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allShownWithCenterStoneLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  accordionBlocks(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [ModularAccordionBlockRecord!]!
  assetStack: [FileField!]!
  bandWidth(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  belowBannerBlocks: [ConfigurationModelBelowBannerBlocksField!]!
  carat(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  caratWeightOverride: String
  chainLength(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  chainWidth(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  charm(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  clarity(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  closure(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  color(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  configuredProductOptionsInOrder: String
  cordWidth(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  countrySpecificPrices: JsonField
  createdAt: DateTime!
  cut(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  depth(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  diamondCount: IntType
  diamondDescriptionOverride(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  diamondSize(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  id: ItemId!
  isWaitlisted: BooleanType
  jacketLength(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  jewelryProduct: JewelryProductRecord
  metal(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  origin(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  outerDiameter(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  plpImage: FileField
  plpImageHover: FileField
  plpTitle(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  posts(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  productIconList: ProductIconListRecord
  productSuggestionQuadBlock: ProductSuggestionQuadBlockRecord
  ringFace(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  setting(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  shape(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  shownWithCenterStone(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  trioBlocks: TrioBlockRecord
  updatedAt: DateTime!
  variantId: String
}

input ConfiguredProductOptionModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  assetStack: GalleryFilter
  collection: LinkFilter
  configuredProductOptionsInOrder: StringFilter
  plpTitle: StringFilter
  productSuggestionQuadBlock: LinkFilter
  shownWithCenterStone: StringFilter
  variantId: StringFilter
  OR: [ConfiguredProductOptionModelFilter]
  AND: [ConfiguredProductOptionModelFilter]
}

enum ConfiguredProductOptionModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  configuredProductOptionsInOrder_ASC
  configuredProductOptionsInOrder_DESC
  plpTitle_ASC
  plpTitle_DESC
  shownWithCenterStone_ASC
  shownWithCenterStone_DESC
  variantId_ASC
  variantId_DESC
}

"""Record of type Configured Product Option (configured_product_option)"""
type ConfiguredProductOptionRecord implements RecordInterface {
  _allPlpTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allShownWithCenterStoneLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  assetStack: [FileField!]!
  collection: JewelryOmegaProductRecord
  configuredProductOptionsInOrder: String
  createdAt: DateTime!
  id: ItemId!
  plpTitle(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  productSuggestionQuadBlock: ProductSuggestionQuadBlockRecord
  shownWithCenterStone(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  updatedAt: DateTime!
  variantId: String
}

"""Record of type Cookie Banner (cookie_banner)"""
type CookieBannerRecord implements RecordInterface {
  _allAcceptAllCtaTextLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allAcceptSelectionCtaTextLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allCustomerSupportCookiesCategoryNameLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allEssentialCookiesCategoryNameLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allMarketingCookiesCategoryNameLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allStatisticsCookiesCategoryNameLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allTextLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  acceptAllCtaText(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  acceptSelectionCtaText(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  createdAt: DateTime!
  customerSupportCookiesCategoryName(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  essentialCookiesCategoryName(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  id: ItemId!
  marketingCookiesCategoryName(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  statisticsCookiesCategoryName(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  text(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  title(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  updatedAt: DateTime!
}

"""Block of type Copy with CTA (copy_with_cta)"""
type CopyWithCtaRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy: String
  createdAt: DateTime!
  ctaCopy: String
  id: ItemId!
  optInCopy: String
  title: String
  updatedAt: DateTime!
}

type CopyWithCtaRecordListListNonNullMultiLocaleField {
  locale: SiteLocale
  value: [CopyWithCtaRecord!]!
}

"""Block of type Cord Width Label (cord_width_label)"""
type CordWidthLabelRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy: String
  createdAt: DateTime!
  id: ItemId!
  specName: String
  updatedAt: DateTime!
}

input CountryModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  code: StringFilter
  name: StringFilter
  OR: [CountryModelFilter]
  AND: [CountryModelFilter]
}

enum CountryModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  code_ASC
  code_DESC
  name_ASC
  name_DESC
}

"""Block of type Country Picker Column (country_picker_column)"""
type CountryPickerColumnRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  countries: JsonField
  createdAt: DateTime!
  id: ItemId!
  label: String
  updatedAt: DateTime!
}

"""Record of type Country (country)"""
type CountryRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  code: String
  createdAt: DateTime!
  id: ItemId!
  name: String
  updatedAt: DateTime!
}

"""
Block of type Country Specific Date Selector (country_specific_date_selector)
"""
type CountrySpecificDateSelectorRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  countryCode: String
  createdAt: DateTime!
  datetime: DateTime
  id: ItemId!
  updatedAt: DateTime!
}

"""Specifies how to filter by creation datetime"""
input CreatedAtFilter {
  """
  Filter records with a value that's strictly greater than the one specified. Seconds and milliseconds are truncated from the argument.
  """
  gt: DateTime

  """
  Filter records with a value that's less than the one specified. Seconds and milliseconds are truncated from the argument.
  """
  lt: DateTime

  """
  Filter records with a value that's greater than or equal to than the one specified. Seconds and milliseconds are truncated from the argument.
  """
  gte: DateTime

  """
  Filter records with a value that's less or equal than the one specified. Seconds and milliseconds are truncated from the argument.
  """
  lte: DateTime

  """
  Filter records with a value that's within the specified minute range. Seconds and milliseconds are truncated from the argument.
  """
  eq: DateTime

  """
  Filter records with a value that's outside the specified minute range. Seconds and milliseconds are truncated from the argument.
  """
  neq: DateTime

  """
  Filter records with the specified field defined (i.e. with any value) or not
  """
  exists: BooleanType
}

union CreativeBlockModelConfigurationsInOrderField = ConfigurationRecord | OmegaProductRecord

input CreativeBlockModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  _locales: LocalesFilter
  configurationsInOrder: LinksFilter
  ctaCopy: StringFilter
  ctaRoute: StringFilter
  desktopCopy: StringFilter
  desktopImage: FileFilter
  gtmClass: StringFilter
  mobileCopy: StringFilter
  mobileImage: FileFilter
  openInNewTab: BooleanFilter
  supportedCountries: LinksFilter
  title: StringFilter
  OR: [CreativeBlockModelFilter]
  AND: [CreativeBlockModelFilter]
}

enum CreativeBlockModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  ctaCopy_ASC
  ctaCopy_DESC
  ctaRoute_ASC
  ctaRoute_DESC
  desktopCopy_ASC
  desktopCopy_DESC
  gtmClass_ASC
  gtmClass_DESC
  mobileCopy_ASC
  mobileCopy_DESC
  openInNewTab_ASC
  openInNewTab_DESC
  title_ASC
  title_DESC
}

"""Record of type Creative Block (creative_block)"""
type CreativeBlockRecord implements RecordInterface {
  _allCtaCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allCtaRouteLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDarksideButtonsLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [DarksideButtonRecordListListNonNullMultiLocaleField!]
  _allDesktopCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allMobileCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  configurationsInOrder: [CreativeBlockModelConfigurationsInOrderField!]!
  createdAt: DateTime!
  ctaCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  ctaRoute(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  darksideButtons(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [DarksideButtonRecord!]!
  desktopCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  desktopImage: FileField
  gtmClass: String
  id: ItemId!
  mobileCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  mobileImage: FileField
  openInNewTab: BooleanType
  supportedCountries: [CountryRecord!]!
  title(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  updatedAt: DateTime!
}

"""Record of type CTO Diamond Table (cto_diamond_table)"""
type CtoDiamondTableRecord implements RecordInterface {
  _allBlocksLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [ModularBlockWrapperRecordListListNonNullMultiLocaleField!]
  _allCaratChartTooltipLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allCaratDetailsLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allCaratLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allCaratSliderTooltipLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [ModularSingleMediaBlockRecordListListNonNullMultiLocaleField!]
  _allCaratWeightCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allCheckAvailabilityLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allClarityDetailsLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allColorDetailsLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allColorNearcolorlessDetailsLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allCtaCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allCtoDiamondResultCopyLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allCtoDiamondResultFinalSaleNoteLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allCtoDiamondResultFoundTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allCtoDiamondResultHowItWorksLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [ModularBlockWrapperRecordListListNonNullMultiLocaleField!]
  _allCtoDiamondResultNeedItFasterLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allCtoDiamondResultNoteLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allCtoDiamondResultPriceTooltipLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allCtoDiamondResultShapeAndWeightTitleLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allCutDetailsLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allCutDetailsRoundBrilliantLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allDiamondDetailsCopyLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allDiamondResultComparisonGridSeeDetailsLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDiamondResultComparisonGridSelectLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDiamondResultCopyLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allDiamondResultCopyMin2Locales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allDiamondResultFoundTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDiamondResultFoundTitleMin2Locales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDiamondResultMatchCtaLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDiamondResultMatchSeeMoreInventoryCtaLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDiamondResultMatchSelectedCtaLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDiamondResultMatchTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDiamondResultMatchViewAllCtaLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDiamondResultTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDiamondResultTitleSecondLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDiamondSelectorNoteLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDiamondSelectorSubtitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDiamondSelectorTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDiamondVariantImageCaptionLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDiamondsNoteLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allHeaderCopyLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allHeaderSubtextLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allHeaderTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allHowToAnchorLinkAndCopyLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allIdealHeartsLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allImage1CaptionLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allImage2CaptionLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allImage3CaptionLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allModifyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allNearColorlessLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allNoDiamondsCopyLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allNotesAdditionalInfoLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allPriceLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allPricingDetailsLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allPricingLabelLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allSeeDetailsLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allSelectedDiamondIdLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allSelectedLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allSeoLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [SeoFieldMultiLocaleField!]
  _allSeoResultsLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [SeoFieldMultiLocaleField!]
  _allShapeLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allSpeakWithExpertLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allVraiDiamondsInfoLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  blocks(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [ModularBlockWrapperRecord!]!
  bottomContentImage: FileField
  carat(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  caratChartTooltip(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  caratDetails(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  caratSliderTooltip(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [ModularSingleMediaBlockRecord!]!
  caratWeightCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  checkAvailability(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  clarityDetails(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  colorDetails(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  colorNearcolorlessDetails(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  createdAt: DateTime!
  ctaCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  ctoDiamondResultCopy(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  ctoDiamondResultFinalSaleNote(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  ctoDiamondResultFoundTitle(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  ctoDiamondResultHowItWorks(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [ModularBlockWrapperRecord!]!
  ctoDiamondResultNeedItFaster(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  ctoDiamondResultNote(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  ctoDiamondResultPriceTooltip(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  ctoDiamondResultShapeAndWeightTitle(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  cutDetails(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  cutDetailsRoundBrilliant(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  diamondDetailsCopy(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  diamondNotesImages: [FileField!]!
  diamondResultComparisonGridSeeDetails(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  diamondResultComparisonGridSelect(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  diamondResultCopy(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  diamondResultCopyMin2(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  diamondResultFoundTitle(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  diamondResultFoundTitleMin2(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  diamondResultMatchCta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  diamondResultMatchSeeMoreInventoryCta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  diamondResultMatchSelectedCta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  diamondResultMatchTitle(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  diamondResultMatchViewAllCta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  diamondResultTitle(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  diamondResultTitleSecond(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  diamondSelectorNote(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  diamondSelectorSubtitle(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  diamondSelectorTitle(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  diamondVariantImageCaption(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  diamondsNote(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  headerCopy(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  headerSubtext(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  headerTitle(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  howToAnchorLinkAndCopy(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  id: ItemId!
  idealHearts(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  image1Caption(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  image2Caption(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  image3Caption(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  modify(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  nearColorless(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  noDiamondsCopy(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  notesAdditionalInfo(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  price(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  pricingDetails(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  pricingLabel(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  productIconList: ProductIconListRecord
  seeDetails(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  selected(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  selectedDiamondId(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  seo(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): SeoField
  seoResults(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): SeoField
  shape(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  speakWithExpert(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  updatedAt: DateTime!
  vraiDiamondsInfo(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
}

"""Block of type Currency Price (currency_price)"""
type CurrencyPriceRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  currencyCode: String
  id: ItemId!
  priceValue: FloatType
  updatedAt: DateTime!
}

scalar CustomData

input CustomProductModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  _locales: LocalesFilter
  assetStack: GalleryFilter
  productDescription: TextFilter
  productIconList: LinkFilter
  productSubtitle: StringFilter
  productSuggestionQuadBlock: LinksFilter
  productTitle: StringFilter
  seoDescription: TextFilter
  seoTitle: StringFilter
  slug: StringFilter
  trioBlocks: LinkFilter
  OR: [CustomProductModelFilter]
  AND: [CustomProductModelFilter]
}

enum CustomProductModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  productSubtitle_ASC
  productSubtitle_DESC
  productTitle_ASC
  productTitle_DESC
  seoTitle_ASC
  seoTitle_DESC
  slug_ASC
  slug_DESC
}

"""Record of type Custom Product (custom_product)"""
type CustomProductRecord implements RecordInterface {
  _allProductDescriptionLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allProductSubtitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allProductTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allSeoDescriptionLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allSeoTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  assetStack: [FileField!]!
  createdAt: DateTime!
  id: ItemId!
  productDescription(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  productIconList: ProductIconListRecord
  productSubtitle(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  productSuggestionQuadBlock: [ProductSuggestionQuadBlockRecord!]!
  productTitle(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  seoDescription(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  seoTitle(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  slug: String
  trioBlocks: TrioBlockRecord
  updatedAt: DateTime!
}

"""Block of type Cut Label (cut_label)"""
type CutLabelRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy: String
  createdAt: DateTime!
  id: ItemId!
  specName: String
  updatedAt: DateTime!
}

"""Block of type Cutlet Label (cutlet_label)"""
type CutletLabelRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy: String
  createdAt: DateTime!
  id: ItemId!
  specName: String
  updatedAt: DateTime!
}

"""Block of type Darkside Button (darkside_button)"""
type DarksideButtonRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  ctaButtonColorTheme: String
  ctaButtonMobileColorTheme: String
  ctaButtonType: String
  ctaCopy: String
  ctaLinkUrl: String
  id: ItemId!
  openUrlInNewWindow: BooleanType
  updatedAt: DateTime!
}

type DarksideButtonRecordListListNonNullMultiLocaleField {
  locale: SiteLocale
  value: [DarksideButtonRecord!]!
}

"""A ISO 8601 compliant date value"""
scalar Date

"""Specifies how to filter Date fields"""
input DateFilter {
  """
  Filter records with a value that's strictly greater than the one specified
  """
  gt: Date

  """Filter records with a value that's less than the one specified"""
  lt: Date

  """
  Filter records with a value that's greater than or equal to the one specified
  """
  gte: Date

  """
  Filter records with a value that's less or equal than the one specified
  """
  lte: Date

  """
  Filter records with the specified field defined (i.e. with any value) or not
  """
  exists: BooleanType

  """Search for records with an exact match"""
  eq: Date

  """Exclude records with an exact match"""
  neq: Date
}

"""A ISO 8601 compliant datetime value"""
scalar DateTime

"""Specifies how to filter DateTime fields"""
input DateTimeFilter {
  """
  Filter records with a value that's strictly greater than the one specified. Seconds and milliseconds are truncated from the argument.
  """
  gt: DateTime

  """
  Filter records with a value that's less than the one specified. Seconds and milliseconds are truncated from the argument.
  """
  lt: DateTime

  """
  Filter records with a value that's greater than or equal to than the one specified. Seconds and milliseconds are truncated from the argument.
  """
  gte: DateTime

  """
  Filter records with a value that's less or equal than the one specified. Seconds and milliseconds are truncated from the argument.
  """
  lte: DateTime

  """
  Filter records with a value that's within the specified minute range. Seconds and milliseconds are truncated from the argument.
  """
  eq: DateTime

  """
  Filter records with a value that's outside the specified minute range. Seconds and milliseconds are truncated from the argument.
  """
  neq: DateTime

  """
  Filter records with the specified field defined (i.e. with any value) or not
  """
  exists: BooleanType
}

"""Block of type Depth Label (depth_label)"""
type DepthLabelRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy: String
  createdAt: DateTime!
  id: ItemId!
  specName: String
  updatedAt: DateTime!
}

"""Block of type Description Label (description_label)"""
type DescriptionLabelRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy: String
  createdAt: DateTime!
  id: ItemId!
  specName: String
  updatedAt: DateTime!
}

"""Block of type Desktop Image (desktop_image)"""
type DesktopImageRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  image: FileField
  updatedAt: DateTime!
}

"""Block of type Diamond Clarity Label (diamond_clarity_label)"""
type DiamondClarityLabelRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy: String
  createdAt: DateTime!
  id: ItemId!
  specName: String
  updatedAt: DateTime!
}

"""Block of type Diamond Color Label (diamond_color_label)"""
type DiamondColorLabelRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy: String
  createdAt: DateTime!
  id: ItemId!
  specName: String
  updatedAt: DateTime!
}

input DiamondContentBlockModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  _locales: LocalesFilter
  diamondBlockText: TextFilter
  diamondBlockTitle: StringFilter
  diamondBlockVideo: StringFilter
  diamondShapes: LinksFilter
  videoBlock: LinkFilter
  OR: [DiamondContentBlockModelFilter]
  AND: [DiamondContentBlockModelFilter]
}

enum DiamondContentBlockModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  diamondBlockTitle_ASC
  diamondBlockTitle_DESC
  diamondBlockVideo_ASC
  diamondBlockVideo_DESC
}

"""Record of type Diamond Content Block (diamond_content_block)"""
type DiamondContentBlockRecord implements RecordInterface {
  _allDiamondBlockTextLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allDiamondBlockTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDiamondBlockVideoLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  diamondBlockText(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  diamondBlockTitle(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  diamondBlockVideo(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  diamondShapes: [DiamondShapeSpecRecord!]!
  id: ItemId!
  updatedAt: DateTime!
  videoBlock: VideoBlockRecord
}

"""Block of type Diamond Count Label (diamond_count_label)"""
type DiamondCountLabelRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy: String
  createdAt: DateTime!
  id: ItemId!
  specName: String
  updatedAt: DateTime!
}

"""Record of type Diamond Notifier Page (diamond_notifier_page)"""
type DiamondNotifierPageRecord implements RecordInterface {
  _allContentLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [ModularFullWidthBannerBlockRecordListListNonNullMultiLocaleField!]
  _allCtaCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allCtaRouteLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allEmailSignUpColumnLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [CopyWithCtaRecordListListNonNullMultiLocaleField!]
  _allOptInTextLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allSuccessCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  content(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [ModularFullWidthBannerBlockRecord!]!
  createdAt: DateTime!
  ctaCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  ctaRoute(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  emailSignUpColumn(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [CopyWithCtaRecord!]!
  id: ItemId!
  mappers: [HumanNamesMapperRecord!]!
  optInText(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  seo: PageSeoRecord
  successCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  updatedAt: DateTime!
}

"""Record of type Diamond Page (diamond_page)"""
type DiamondPageRecord implements RecordInterface {
  _allBookAppointmentCtaLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allBuilderFlowCtaLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allCaratWeightSelectorLabelLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allCtoResultsHeaderCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allCtoResultsTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDiamondOnlyCtaLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDiamondShapeSelectorLabelLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDiamondVideoCaptionLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allInStockResultHeaderCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allInStockResultTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allPolishingPlanCaptionLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allRoughVideoCaptionLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allSearchDiamondsCtaCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allSeoLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [SeoFieldMultiLocaleField!]
  _allSubtitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  bookAppointmentCta(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  builderFlowCta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  caratWeightSelectorLabel(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  createdAt: DateTime!
  ctoResultsHeaderCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  ctoResultsTitle(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  diamondOnlyCta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  diamondShapeSelectorLabel(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  diamondVideoCaption(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  id: ItemId!
  inStockResultHeaderCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  inStockResultTitle(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  polishingPlanCaption(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  roughVideoCaption(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  searchDiamondsCtaCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  seo(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): SeoField
  subtitle(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  updatedAt: DateTime!
}

union DiamondProductModelContentField = ModularFullWidthBannerBlockRecord | ModularTrio1x1BlockRecord

type DiamondProductModelContentFieldListListNonNullMultiLocaleField {
  locale: SiteLocale
  value: [DiamondProductModelContentField!]!
}

"""Record of type Diamond Product (diamond_product)"""
type DiamondProductRecord implements RecordInterface {
  _allButtonTextDiamondFlowLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allButtonTextModularJewelryFlowLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allButtonTextSettingFlowLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allCaratLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allCertificateLabelLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allCertificateLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allClarityInfoMapAbridgedLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [JsonKeyRecordListListNonNullMultiLocaleField!]
  _allClarityLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allClarityMapAbridgedLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [JsonKeyRecordListListNonNullMultiLocaleField!]
  _allColorInfoMapAbridgedLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [JsonKeyRecordListListNonNullMultiLocaleField!]
  _allColorLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allColorMapAbridgedLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [JsonKeyRecordListListNonNullMultiLocaleField!]
  _allContentLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [DiamondProductModelContentFieldListListNonNullMultiLocaleField!]
  _allCutInfoMapAbridgedLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [JsonKeyRecordListListNonNullMultiLocaleField!]
  _allCutLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allCutMapAbridgedLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [JsonKeyRecordListListNonNullMultiLocaleField!]
  _allDfCertificateDetailLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allFluorescenceAbridgedLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [JsonKeyRecordListListNonNullMultiLocaleField!]
  _allGirdleAbridgedLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [JsonKeyRecordListListNonNullMultiLocaleField!]
  _allHeaderLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allOriginLabelLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allPolishAndSymmetryAbridgedLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [JsonKeyRecordListListNonNullMultiLocaleField!]
  _allProductTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allQuickCheckoutTextLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allSpecsHeadlineLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allThirdPartyCertificateDetailLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  accordionLabels: ProductSpecLabelCollectionRecord
  buttonTextDiamondFlow(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  buttonTextModularJewelryFlow(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  buttonTextSettingFlow(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  carat(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  certificate(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  certificateLabel(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  clarity(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  clarityDiamondImage: FileField
  clarityInfoMapAbridged(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [JsonKeyRecord!]!
  clarityMapAbridged(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [JsonKeyRecord!]!
  color(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  colorDiamondImage: FileField
  colorInfoMapAbridged(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [JsonKeyRecord!]!
  colorMapAbridged(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [JsonKeyRecord!]!
  content(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [DiamondProductModelContentField!]!
  createdAt: DateTime!
  cut(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  cutDiamondImage: FileField
  cutInfoMapAbridged(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [JsonKeyRecord!]!
  cutMapAbridged(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [JsonKeyRecord!]!
  dfCertificateDetail(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  fluorescenceAbridged(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [JsonKeyRecord!]!
  girdleAbridged(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [JsonKeyRecord!]!
  header(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  id: ItemId!
  originLabel(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  polishAndSymmetryAbridged(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [JsonKeyRecord!]!
  productIconList: ProductIconListRecord
  productTitle(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  quickCheckoutText(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  seoFields: PageSeoRecord
  specLabels: ProductSpecLabelCollectionRecord
  specsHeadline(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  thirdPartyCertificateDetail(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  updatedAt: DateTime!
}

input DiamondShapeDescriptionModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  description: TextFilter
  diamondType: StringFilter
  OR: [DiamondShapeDescriptionModelFilter]
  AND: [DiamondShapeDescriptionModelFilter]
}

enum DiamondShapeDescriptionModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  diamondType_ASC
  diamondType_DESC
}

"""Record of type Diamond Shape Description (diamond_shape_description)"""
type DiamondShapeDescriptionRecord implements RecordInterface {
  _allDescriptionLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  description(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  diamondType: String
  id: ItemId!
  updatedAt: DateTime!
}

input DiamondShapeSpecModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  _locales: LocalesFilter
  diamondShape: StringFilter
  diamondShapeImage: StringFilter
  diamondShapeText: TextFilter
  OR: [DiamondShapeSpecModelFilter]
  AND: [DiamondShapeSpecModelFilter]
}

enum DiamondShapeSpecModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  diamondShape_ASC
  diamondShape_DESC
  diamondShapeImage_ASC
  diamondShapeImage_DESC
}

"""Record of type Diamond Shape Spec (diamond_shape_spec)"""
type DiamondShapeSpecRecord implements RecordInterface {
  _allDiamondShapeLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDiamondShapeTextLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  diamondShape(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  diamondShapeImage: String
  diamondShapeText(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  id: ItemId!
  updatedAt: DateTime!
}

"""Block of type Diamond Size Label (diamond_size_label)"""
type DiamondSizeLabelRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy: String
  createdAt: DateTime!
  id: ItemId!
  specName: String
  updatedAt: DateTime!
}

"""Record of type Diamond Table (diamond_table)"""
type DiamondTableRecord implements RecordInterface {
  _allBlockquoteLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [ModularSinglesvgBlockRecordListListNonNullMultiLocaleField!]
  _allBottomContentLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allBottomPromoContentCtaCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allBottomPromoContentLargerCaratLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allBottomPromoContentLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allBottomPromoContentNoShapeLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allCannotFindDiamondSentence1Locales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allCannotFindDiamondSentence2Locales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allCaratLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allCertificateLabelLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allCertificateLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allClarityFilterBelowCopyLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allClarityLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allClarityMapAbridgedLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [JsonKeyRecordListListNonNullMultiLocaleField!]
  _allClearFiltersButtonCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allColorFilterBelowCopyLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allColorLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allColorMapAbridgedLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [JsonKeyRecordListListNonNullMultiLocaleField!]
  _allCutFilterBelowCopyLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allCutInfoMapAbridgedLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [JsonKeyRecordListListNonNullMultiLocaleField!]
  _allCutLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allCutMapAbridgedLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [JsonKeyRecordListListNonNullMultiLocaleField!]
  _allDfCertificateDetailLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDiamondAdvisorIntroSubtitleLinkLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDiamondAdvisorIntroSubtitleTextLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDiamondAdvisorNoResultTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDiamondAdvisorPostSubmissionConjunctionLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDiamondAdvisorPostSubmissionHeaderLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDiamondAdvisorPostSubmissionSecondaryCtaCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDiamondAdvisorPostSubmissionSubtitleLinkLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDiamondAdvisorPostSubmissionSubtitleTextLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDiamondAdvisorQuizFinalButtonCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDiamondAdvisorQuizNextButtonCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDiamondAdvisorQuizStep1SubtitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDiamondAdvisorQuizStep1TitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDiamondAdvisorQuizStep2SubtitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDiamondAdvisorQuizStep2TitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDiamondAdvisorQuizStep3Option1Locales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDiamondAdvisorQuizStep3Option2Locales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDiamondAdvisorQuizStep3Option3Locales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDiamondAdvisorQuizStep3Option4Locales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDiamondAdvisorQuizStep3Option5Locales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDiamondAdvisorQuizStep3SubtitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDiamondAdvisorQuizStep3TitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDiamondAdvisorResultTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDiamondNotifierCtaCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDynamicTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allOriginLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allSidebarLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [SidebarTextBlockRecordListListNonNullMultiLocaleField!]
  _allSidebarTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allSpecsLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [JsonKeyRecordListListNonNullMultiLocaleField!]
  _allThirdPartyCertificateDetailLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  blockquote(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [ModularSinglesvgBlockRecord!]!
  bottomContent(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  bottomPromoContent(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  bottomPromoContentCtaCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  bottomPromoContentCtaLink: String
  bottomPromoContentLargerCarat(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  bottomPromoContentNoShape(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  cannotFindDiamondSentence1(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  cannotFindDiamondSentence2(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  carat(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  certificate(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  certificateLabel(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  clarity(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  clarityFilterBelowCopy(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  clarityMapAbridged(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [JsonKeyRecord!]!
  clearFiltersButtonCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  color(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  colorFilterBelowCopy(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  colorMapAbridged(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [JsonKeyRecord!]!
  createdAt: DateTime!
  cut(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  cutFilterBelowCopy(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  cutInfoMapAbridged(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [JsonKeyRecord!]!
  cutMapAbridged(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [JsonKeyRecord!]!
  dfCertificateDetail(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  diamondAdvisorIntroSubtitleLink(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  diamondAdvisorIntroSubtitleText(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  diamondAdvisorNoResultTitle(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  diamondAdvisorPostSubmissionConjunction(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  diamondAdvisorPostSubmissionHeader(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  diamondAdvisorPostSubmissionSecondaryCtaCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  diamondAdvisorPostSubmissionSecondaryCtaRoute: String
  diamondAdvisorPostSubmissionSubtitleLink(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  diamondAdvisorPostSubmissionSubtitleText(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  diamondAdvisorQuizFinalButtonCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  diamondAdvisorQuizNextButtonCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  diamondAdvisorQuizStep1Subtitle(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  diamondAdvisorQuizStep1Title(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  diamondAdvisorQuizStep2Subtitle(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  diamondAdvisorQuizStep2Title(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  diamondAdvisorQuizStep3Option1(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  diamondAdvisorQuizStep3Option2(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  diamondAdvisorQuizStep3Option3(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  diamondAdvisorQuizStep3Option4(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  diamondAdvisorQuizStep3Option5(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  diamondAdvisorQuizStep3Subtitle(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  diamondAdvisorQuizStep3Title(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  diamondAdvisorResultTitle(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  diamondNotifierCtaCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  diamondNotifierCtaLink: String
  dynamicTitle(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  id: ItemId!
  origin(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  seo: PageSeoRecord
  sidebar(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [SidebarTextBlockRecord!]!
  sidebarTitle(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  specs(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [JsonKeyRecord!]!
  thirdPartyCertificateDetail(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  title(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  updatedAt: DateTime!
}

"""Record of type Email Pop Up (email_popup)"""
type EmailPopupRecord implements RecordInterface {
  _allCopyLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allCopyPricesLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [PricingByCurrencyRecordMultiLocaleField!]
  _allCountrySpecificCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [ModularEmailPopupOverrideRecordListListNonNullMultiLocaleField!]
  _allErrorCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allPlaceholder1Locales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allPlaceholder2Locales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allPrivacyctacopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allPrivacyctalinkLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allSubmitCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allSuccessCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  copyPrices(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): PricingByCurrencyRecord
  countrySpecificCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [ModularEmailPopupOverrideRecord!]!
  createdAt: DateTime!
  errorCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  id: ItemId!
  image: FileField
  placeholder1(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  placeholder2(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  privacyctacopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  privacyctalink(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  submitCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  successCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  supportedCountries: [CountryRecord!]!
  title(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  updatedAt: DateTime!
}

"""Block of type Email Signup Page Copy (email_signup_page_copy)"""
type EmailSignupPageCopyRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  emailInputBeingSent: String
  emailInputEmpty: String
  emailInputNotValid: String
  emailInputPlaceholder: String
  emailInputSuccessfullySent: String
  emailInputUnsuccessfullySent: String
  gdprCtaCopy: String
  gdprCtaRoute: String
  gdprOptInCopy: String
  id: ItemId!
  phoneInputPlaceholder: String
  updatedAt: DateTime!
}

type EmailSignupPageCopyRecordListListNonNullMultiLocaleField {
  locale: SiteLocale
  value: [EmailSignupPageCopyRecord!]!
}

"""Record of type Engagement Ring PDP CTA (engagement_ring_pdp_cta)"""
type EngagementRingPdpCtaRecord implements RecordInterface {
  _allBelowOptionsCopyLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allBuyButtonCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDiamondFlowCtaCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allReviewYourRingCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allSettingFlowCtaCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allSettingFlowCtaPluralCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allUnavailableCtaCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  belowOptionsCopy(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  buyButtonCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  createdAt: DateTime!
  diamondFlowCtaCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  id: ItemId!
  reviewYourRingCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  settingFlowCtaCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  settingFlowCtaPluralCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  title(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  unavailableCtaCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  updatedAt: DateTime!
}

union EngagementRingProductModelBelowBannerBlocksField = ModularCarouselBlockRecord | ModularCarouselHoverBlockRecord | ModularCelebrityCarouselBlockRecord | ModularCelebrityReelBlockRecord | ModularDuoBlockRecord | ModularEmailSignupBlockRecord | ModularFullWidthBannerBlockRecord | ModularGridCarouselBlockRecord | ModularHalfWidthQuadBlockRecord | ModularInstagramReelBlockRecord | ModularMiniBannerBlockRecord | ModularProductSliderBlockRecord | ModularQuadBlockRecord | ModularQuadGridRecord | ModularShowroomBlockRecord | ModularSideBySideBlockRecord | ModularSingleVideoBlockRecord | ModularTallHalfWidthBlockRecord | ModularTextOnlyBlockRecord | ModularTrio9x7BlockRecord | ModularTrioSlide9x7BlockRecord | ModularTrioStaggered9x7BlockRecord | SocialMediaSectionRecord

input EngagementRingProductModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  _locales: LocalesFilter
  bandDepth: StringFilter
  bandWidth: StringFilter
  ctaCopy: LinkFilter
  diamondContentBlock: LinkFilter
  diamondDescription: TextFilter
  diamondVideoBlock: LinkFilter
  hasDiamond: BooleanFilter
  instagramReelBlock: LinkFilter
  isPromoIconEnabled: BooleanFilter
  metalWeight: StringFilter
  pageCopy: LinksFilter
  paveCaratWeight: StringFilter
  productDescription: TextFilter
  productFaqBlock: LinkFilter
  productIconList: LinkFilter
  productLabel: LinkFilter
  products: LinksFilter
  productTitle: StringFilter
  productType: StringFilter
  seoDescription: TextFilter
  seoTitle: StringFilter
  settingHeight: StringFilter
  shouldUseDatoAssets: BooleanFilter
  shouldUseDefaultPrice: BooleanFilter
  shownWithCtwLabel: StringFilter
  slug: StringFilter
  specBlockTitle: StringFilter
  specImage: StringFilter
  specLabels: LinkFilter
  styleGroup: StringFilter
  subCategory: LinksFilter
  tags: JsonFilter
  trioBlocks: LinkFilter
  OR: [EngagementRingProductModelFilter]
  AND: [EngagementRingProductModelFilter]
}

enum EngagementRingProductModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  bandDepth_ASC
  bandDepth_DESC
  bandWidth_ASC
  bandWidth_DESC
  hasDiamond_ASC
  hasDiamond_DESC
  isPromoIconEnabled_ASC
  isPromoIconEnabled_DESC
  metalWeight_ASC
  metalWeight_DESC
  paveCaratWeight_ASC
  paveCaratWeight_DESC
  productTitle_ASC
  productTitle_DESC
  productType_ASC
  productType_DESC
  seoTitle_ASC
  seoTitle_DESC
  settingHeight_ASC
  settingHeight_DESC
  shouldUseDatoAssets_ASC
  shouldUseDatoAssets_DESC
  shouldUseDefaultPrice_ASC
  shouldUseDefaultPrice_DESC
  shownWithCtwLabel_ASC
  shownWithCtwLabel_DESC
  slug_ASC
  slug_DESC
  specBlockTitle_ASC
  specBlockTitle_DESC
  specImage_ASC
  specImage_DESC
  styleGroup_ASC
  styleGroup_DESC
}

union EngagementRingProductModelPageCopyField = EngagementRingPdpCtaRecord | EngravingOptionCopyRecord | RingSizeOptionCopyRecord

"""Record of type 3.0 Engagement Ring Product (engagement_ring_product)"""
type EngagementRingProductRecord implements RecordInterface {
  _allBandDepthLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allBandWidthLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDiamondDescriptionLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allDiamondVideoBlockLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [VideoBlockRecordMultiLocaleField!]
  _allMetalWeightLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allPaveCaratWeightLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allProductDescriptionLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allProductTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allSeoDescriptionLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allSeoTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allSettingHeightLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allShownWithCtwLabelLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allSpecBlockTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  bandDepth(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  bandWidth(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  belowBannerBlocks: [EngagementRingProductModelBelowBannerBlocksField!]!
  createdAt: DateTime!
  ctaCopy: EngagementRingPdpCtaRecord
  diamondContentBlock: DiamondContentBlockRecord
  diamondDescription(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  diamondVideoBlock(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): VideoBlockRecord
  hasDiamond: BooleanType
  id: ItemId!
  instagramReelBlock: InstagramReelBlockRecord
  isPromoIconEnabled: BooleanType
  metalWeight(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  pageCopy: [EngagementRingProductModelPageCopyField!]!
  paveCaratWeight(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  productDescription(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  productFaqBlock: ProductTypeFaqRecord
  productIconList: ProductIconListRecord
  productLabel: ProductLabelRecord
  productTitle(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  productType: String
  products: [OmegaProductRecord!]!
  seoDescription(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  seoTitle(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  settingHeight(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  shouldUseDatoAssets: BooleanType
  shouldUseDefaultPrice: BooleanType
  shownWithCtwLabel(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  slug: String
  specBlockTitle(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  specImage: String
  specLabels: ProductSpecLabelCollectionRecord
  styleGroup: String
  subCategory: [JeweleryProductSubCategoryRecord!]!
  tags: JsonField
  trioBlocks: TrioBlockRecord
  updatedAt: DateTime!
}

union EngagementRingSummaryPageModelPageCopyField = EngravingOptionCopyRecord | RingSizeOptionCopyRecord

"""
Record of type Engagement Ring Summary Page (engagement_ring_summary_page)
"""
type EngagementRingSummaryPageRecord implements RecordInterface {
  _allAddEngravingOptionCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allAddEngravingOptionCtaLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allConfiguredOptionsInDisplayOrderLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [ProductOptionLabelRecordListListNonNullMultiLocaleField!]
  _allRemoveEngravingOptionCtaLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allRingSizeOptionCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allRingSizeOptionCtaLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allUpdateEngravingOptionCtaLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  addEngravingOptionCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  addEngravingOptionCta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  configuredOptionsInDisplayOrder(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [ProductOptionLabelRecord!]!
  createdAt: DateTime!
  id: ItemId!
  pageCopy: [EngagementRingSummaryPageModelPageCopyField!]!
  productIconList: ProductIconListRecord
  removeEngravingOptionCta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  ringSizeOptionCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  ringSizeOptionCta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  updateEngravingOptionCta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  updatedAt: DateTime!
}

"""Record of type Engraving Option Copy (engraving_option_copy)"""
type EngravingOptionCopyRecord implements RecordInterface {
  _allAddEngravingOptionCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allAddEngravingOptionCtaLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allCurrentEngravingCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allModifyEngravingCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allRemoveEngravingOptionCtaLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allUpdateEngravingOptionCtaLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  addEngravingOptionCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  addEngravingOptionCta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  createdAt: DateTime!
  currentEngravingCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  id: ItemId!
  modifyEngravingCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  removeEngravingOptionCta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  title(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  updateEngravingOptionCta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  updatedAt: DateTime!
}

input FaqAccordionContentModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  _locales: LocalesFilter
  content: TextFilter
  title: StringFilter
  OR: [FaqAccordionContentModelFilter]
  AND: [FaqAccordionContentModelFilter]
}

enum FaqAccordionContentModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  title_ASC
  title_DESC
}

"""Record of type Faq Accordion Content (faq_accordion_content)"""
type FaqAccordionContentRecord implements RecordInterface {
  _allContentLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  content(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  createdAt: DateTime!
  id: ItemId!
  title(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  updatedAt: DateTime!
}

enum FaviconType {
  icon
  appleTouchIcon
  msApplication
}

type FileField implements FileFieldInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _updatedAt: DateTime!
  alt(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  author: String
  basename: String!
  blurUpThumb(
    """
    Controls the "punch" value (~contrast) of the blurhash decoding algorithm (defaults to 1.0)
    """
    punch: Float! = 1

    """Maximum image dimension (defaults to 24px)"""
    size: Int! = 24

    """Image quality (defaults to 70%)"""
    quality: Int! = 70

    """Imgix transformations to apply to the image"""
    imgixParams: ImgixParams
  ): String
  blurhash: String
  colors: [ColorField!]!
  copyright: String
  customData(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CustomData!
  exifInfo: CustomData!
  filename: String!
  focalPoint(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): focalPoint
  format: String!
  height: IntType
  id: UploadId!
  md5: String!
  mimeType: String!
  notes: String
  responsiveImage(
    """Imgix transformations to apply to the image"""
    imgixParams: ImgixParams

    """Specify a custom `sizes` attribute for the image"""
    sizes: String

    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): ResponsiveImage
  size: IntType!
  smartTags: [String!]!
  tags: [String!]!
  thumbhash: String
  title(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  url(
    """Imgix transformations to apply to the image"""
    imgixParams: ImgixParams
  ): String!
  video: UploadVideoField
  width: IntType
}

interface FileFieldInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _updatedAt: DateTime!
  alt(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  author: String
  basename: String!
  blurUpThumb(
    """
    Controls the "punch" value (~contrast) of the blurhash decoding algorithm (defaults to 1.0)
    """
    punch: Float! = 1

    """Maximum image dimension (defaults to 24px)"""
    size: Int! = 24

    """Image quality (defaults to 70%)"""
    quality: Int! = 70

    """Imgix transformations to apply to the image"""
    imgixParams: ImgixParams
  ): String
  blurhash: String
  colors: [ColorField!]!
  copyright: String
  customData(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CustomData!
  exifInfo: CustomData!
  filename: String!
  focalPoint(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): focalPoint
  format: String!
  height: IntType
  id: UploadId!
  md5: String!
  mimeType: String!
  notes: String
  responsiveImage(
    """Imgix transformations to apply to the image"""
    imgixParams: ImgixParams

    """Specify a custom `sizes` attribute for the image"""
    sizes: String

    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): ResponsiveImage
  size: IntType!
  smartTags: [String!]!
  tags: [String!]!
  thumbhash: String
  title(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  url(
    """Imgix transformations to apply to the image"""
    imgixParams: ImgixParams
  ): String!
  video: UploadVideoField
  width: IntType
}

type FileFieldMultiLocaleField {
  locale: SiteLocale
  value: FileField
}

"""Specifies how to filter Single-file/image fields"""
input FileFilter {
  """
  Search for records with an exact match. The specified value must be an Upload ID
  """
  eq: UploadId

  """
  Exclude records with an exact match. The specified value must be an Upload ID
  """
  neq: UploadId

  """Filter records that have one of the specified uploads"""
  in: [UploadId]

  """Filter records that do not have one of the specified uploads"""
  notIn: [UploadId]

  """
  Filter records with the specified field defined (i.e. with any value) or not
  """
  exists: BooleanType
}

"""
Represents signed double-precision fractional values as specified by [IEEE 754](http://en.wikipedia.org/wiki/IEEE_floating_point).
"""
scalar FloatType

"""Block of type Fluorescence Label (fluorescence_label)"""
type FluorescenceLabelRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy: String
  createdAt: DateTime!
  id: ItemId!
  specName: String
  updatedAt: DateTime!
}

union FooterNavigationModelCountryPickerField = BasicTextLabelRecord | CountryPickerColumnRecord

"""Record of type Footer Navigation (footer_navigation)"""
type FooterNavigationRecord implements RecordInterface {
  _allColumnsLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [ColumnRecordListListNonNullMultiLocaleField!]
  _allCopyrightLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allEmailSignUpColumnLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [CopyWithCtaRecordListListNonNullMultiLocaleField!]
  _allEmailSignUpCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [EmailSignupPageCopyRecordListListNonNullMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  columns(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [ColumnRecord!]!
  copyright(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  countryPicker: [FooterNavigationModelCountryPickerField!]!
  createdAt: DateTime!
  emailSignUpColumn(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [CopyWithCtaRecord!]!
  emailSignUpCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [EmailSignupPageCopyRecord!]!
  id: ItemId!
  updatedAt: DateTime!
}

input FullWidthBannerBlockModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  _locales: LocalesFilter
  ctaButton: LinkFilter
  ctaCopy: StringFilter
  ctaRoute: StringFilter
  desktopCopy: TextFilter
  desktopImage: FileFilter
  gtmClass: StringFilter
  internalCmsUse: StringFilter
  isTextBlockWide: BooleanFilter
  mobileCopy: TextFilter
  mobileImage: FileFilter
  textBlockAlignment: StringFilter
  textColor: StringFilter
  title: StringFilter
  OR: [FullWidthBannerBlockModelFilter]
  AND: [FullWidthBannerBlockModelFilter]
}

enum FullWidthBannerBlockModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  ctaCopy_ASC
  ctaCopy_DESC
  ctaRoute_ASC
  ctaRoute_DESC
  gtmClass_ASC
  gtmClass_DESC
  internalCmsUse_ASC
  internalCmsUse_DESC
  isTextBlockWide_ASC
  isTextBlockWide_DESC
  textBlockAlignment_ASC
  textBlockAlignment_DESC
  textColor_ASC
  textColor_DESC
  title_ASC
  title_DESC
}

"""Record of type Full Width Banner Block (full_width_banner_block)"""
type FullWidthBannerBlockRecord implements RecordInterface {
  _allCtaCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allCtaRouteLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDesktopCopyLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allMobileCopyLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  ctaButton: String!
  ctaCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  ctaRoute(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  desktopCopy(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  desktopImage: FileField
  gtmClass: String
  id: ItemId!
  internalCmsUse: String
  isTextBlockWide: BooleanType
  mobileCopy(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  mobileImage: FileField
  textBlockAlignment: String
  textColor: String
  title(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  updatedAt: DateTime!
}

"""Specifies how to filter Multiple files/images field"""
input GalleryFilter {
  """
  Search for records with an exact match. The specified values must be Upload IDs
  """
  eq: [UploadId]

  """
  Filter records that have all of the specified uploads. The specified values must be Upload IDs
  """
  allIn: [UploadId]

  """
  Filter records that have one of the specified uploads. The specified values must be Upload IDs
  """
  anyIn: [UploadId]

  """
  Filter records that do not have any of the specified uploads. The specified values must be Upload IDs
  """
  notIn: [UploadId]

  """
  Filter records with the specified field defined (i.e. with any value) or not
  """
  exists: BooleanType
}

"""Record of type Gift With Purchase (gift_with_purchase)"""
type GiftWithPurchaseRecord implements RecordInterface {
  _allPdpBannerSubtitleAfterPriceLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allPdpBannerSubtitleLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allPdpBannerTitleLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allQualifiedCopyLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allUnqualifiedAfterPriceCopyLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allUnqualifiedBeforePriceCopyLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  fallbackGiftProduct: ConfigurationRecord
  giftProduct: ConfigurationRecord
  id: ItemId!
  isFreeGiftEnabled: BooleanType
  minimumSubtotal: IntType
  pdpBannerSubtitle(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  pdpBannerSubtitleAfterPrice(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  pdpBannerTitle(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  qualifiedCopy(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  unqualifiedAfterPriceCopy(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  unqualifiedBeforePriceCopy(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  updatedAt: DateTime!
}

"""Block of type Girdle Label (girdle_label)"""
type GirdleLabelRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy: String
  createdAt: DateTime!
  id: ItemId!
  specName: String
  updatedAt: DateTime!
}

type GlobalSeoField {
  facebookPageUrl: String
  fallbackSeo: SeoField
  siteName: String
  titleSuffix: String
  twitterAccount: String
}

input GridCarouselBlockItemModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  desktopImage: FileFilter
  link: StringFilter
  mobileImage: FileFilter
  supportedCountries: LinksFilter
  title: StringFilter
  OR: [GridCarouselBlockItemModelFilter]
  AND: [GridCarouselBlockItemModelFilter]
}

enum GridCarouselBlockItemModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  link_ASC
  link_DESC
  title_ASC
  title_DESC
}

"""Record of type Grid Carousel Block Item (grid_carousel_block_item)"""
type GridCarouselBlockItemRecord implements RecordInterface {
  _allTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  desktopImage: FileField
  id: ItemId!
  link: String
  mobileImage: FileField
  supportedCountries: [CountryRecord!]!
  title(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  updatedAt: DateTime!
}

input HalfWidthBannerBlockModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  _locales: LocalesFilter
  ctaCopy: StringFilter
  ctaRoute: StringFilter
  desktopCopy: TextFilter
  desktopImage: FileFilter
  internalCmsUse: StringFilter
  isTextBlockWide: BooleanFilter
  mobileCopy: TextFilter
  mobileImage: FileFilter
  textBlockAlignment: StringFilter
  textColor: StringFilter
  title: StringFilter
  OR: [HalfWidthBannerBlockModelFilter]
  AND: [HalfWidthBannerBlockModelFilter]
}

enum HalfWidthBannerBlockModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  ctaCopy_ASC
  ctaCopy_DESC
  ctaRoute_ASC
  ctaRoute_DESC
  internalCmsUse_ASC
  internalCmsUse_DESC
  isTextBlockWide_ASC
  isTextBlockWide_DESC
  textBlockAlignment_ASC
  textBlockAlignment_DESC
  textColor_ASC
  textColor_DESC
  title_ASC
  title_DESC
}

"""Record of type Half Width Banner Block (half_width_banner_block)"""
type HalfWidthBannerBlockRecord implements RecordInterface {
  _allCtaCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allCtaRouteLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDesktopCopyLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allMobileCopyLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  ctaCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  ctaRoute(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  desktopCopy(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  desktopImage: FileField
  id: ItemId!
  internalCmsUse: String
  isTextBlockWide: BooleanType
  mobileCopy(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  mobileImage: FileField
  textBlockAlignment: String
  textColor: String
  title(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  updatedAt: DateTime!
}

"""Record of type Header Navigation Dynamic (header_navigation_dynamic)"""
type HeaderNavigationDynamicRecord implements RecordInterface {
  _allIconsAltTextLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [JsonKeyRecordListListNonNullMultiLocaleField!]
  _allMobileAccordionOrderLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [ModularAccordionRecordListListNonNullMultiLocaleField!]
  _allMobileLocalizationAccordionOrderLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [ModularAccordionRecordListListNonNullMultiLocaleField!]
  _allSectionLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [NavigationRecordListListNonNullMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  iconsAltText(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [JsonKeyRecord!]!
  id: ItemId!
  mobileAccordionOrder(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [ModularAccordionRecord!]!
  mobileLocalizationAccordionOrder(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [ModularAccordionRecord!]!
  section(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [NavigationRecord!]!
  updatedAt: DateTime!
}

"""Record of type Header Navigation (header_navigation)"""
type HeaderNavigationRecord implements RecordInterface {
  _allAboutLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [NavigationColumnRecordListListNonNullMultiLocaleField!]
  _allDesktopNavAboutTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDesktopNavEngagementTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDesktopNavJewelryTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allFineJewelryLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [NavigationColumnRecordListListNonNullMultiLocaleField!]
  _allIconsAltTextLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [JsonKeyRecordListListNonNullMultiLocaleField!]
  _allLoveEngagementLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [NavigationColumnRecordListListNonNullMultiLocaleField!]
  _allMobileAccordionOrderLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [ModularAccordionRecordListListNonNullMultiLocaleField!]
  _allMobileLocalizationAccordionOrderLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [ModularAccordionRecordListListNonNullMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  about(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [NavigationColumnRecord!]!
  createdAt: DateTime!
  desktopNavAboutTitle(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  desktopNavEngagementTitle(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  desktopNavJewelryTitle(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  fineJewelry(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [NavigationColumnRecord!]!
  iconsAltText(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [JsonKeyRecord!]!
  id: ItemId!
  loveEngagement(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [NavigationColumnRecord!]!
  mobileAccordionOrder(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [ModularAccordionRecord!]!
  mobileLocalizationAccordionOrder(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [ModularAccordionRecord!]!
  updatedAt: DateTime!
}

"""Block of type Hero Block (hero_block)"""
type HeroBlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  desktopImage: FileField
  id: ItemId!
  mobileImage: FileField
  subtitle(
    """Process content as markdown"""
    markdown: Boolean
  ): String
  title: String
  updatedAt: DateTime!
}

union HomePageModelContentField = ModularCarouselBlockRecord | ModularCarouselHoverBlockRecord | ModularCelebrityCarouselBlockRecord | ModularCelebrityReelBlockRecord | ModularCollectionHeroBlockRecord | ModularDuoBlockRecord | ModularEmailSignupBlockRecord | ModularFullWidthBannerBlockRecord | ModularGridCarouselBlockRecord | ModularHalfWidthBannerBlockRecord | ModularHalfWidthQuadBlockRecord | ModularHeroBannerBlockRecord | ModularInstagramReelBlockRecord | ModularLeoBlockRecord | ModularListTitleBlockRecord | ModularLogoBannerBlockRecord | ModularMiniBannerBlockRecord | ModularProductSliderBlockRecord | ModularProductSuggestionQuadBlockRecord | ModularQuadBlockRecord | ModularQuoteBlockRecord | ModularRandomBannerBlockRecord | ModularSideBySideBlockRecord | ModularSingleVideoBlockRecord | ModularSinglesvgBlockRecord | ModularSkinnyHeroBannerBlockRecord | ModularSlickCarouselBlockRecord | ModularTallHalfWidthBlockLocationCtaRecord | ModularTallHalfWidthBlockRecord | ModularTextOnlyBlockRecord | ModularTrio1x1BlockRecord | ModularTrio9x7BlockRecord | ModularTrioSlide9x7BlockRecord | ModularTrioStaggered9x7BlockRecord | ModularTriosvgBlockRecord | SocialMediaSectionRecord

type HomePageModelContentFieldListListNonNullMultiLocaleField {
  locale: SiteLocale
  value: [HomePageModelContentField!]!
}

"""Record of type Home page Blocks (home_page)"""
type HomePageRecord implements RecordInterface {
  _allContentLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [HomePageModelContentFieldListListNonNullMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  content(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [HomePageModelContentField!]!
  createdAt: DateTime!
  id: ItemId!
  seo: PageSeoRecord
  updatedAt: DateTime!
}

input HumanNamesMapperModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  title: StringFilter
  OR: [HumanNamesMapperModelFilter]
  AND: [HumanNamesMapperModelFilter]
}

enum HumanNamesMapperModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  title_ASC
  title_DESC
}

"""Record of type Human Names Mapper (human_names_mapper)"""
type HumanNamesMapperRecord implements RecordInterface {
  _allMapLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [JsonKeyRecordListListNonNullMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  map(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [JsonKeyRecord!]!
  title: String
  updatedAt: DateTime!
}

input Image1x1ModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  image: FileFilter
  title: StringFilter
  OR: [Image1x1ModelFilter]
  AND: [Image1x1ModelFilter]
}

enum Image1x1ModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  title_ASC
  title_DESC
}

"""Record of type Image 1x1 (image1x1)"""
type Image1x1Record implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  image: FileField
  title: String
  updatedAt: DateTime!
}

input Image9x7ModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  image: FileFilter
  title: StringFilter
  OR: [Image9x7ModelFilter]
  AND: [Image9x7ModelFilter]
}

enum Image9x7ModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  title_ASC
  title_DESC
}

"""Record of type Image 9x7 (image9x7)"""
type Image9x7Record implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  image: FileField
  title: String
  updatedAt: DateTime!
}

input ImgixParams {
  """
  Aspect Ratio
  
  Specifies an aspect ratio to maintain when resizing and cropping the image
  
  Depends on: `fit=crop`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/size/ar)
  """
  ar: String

  """
  Automatic
  
  Applies automatic enhancements to images.
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/auto)
  """
  auto: [ImgixParamsAuto!]

  """
  Background Removal
  
  Removes background from image.
  
  [Open Imgix reference »](https://docs.imgix.com/apis/rendering/background-removal/bg-remove)
  """
  bgRemove: BooleanType

  """
  Background Color
  
  Colors the background of padded and partially-transparent images.
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/bg)
  """
  bg: String

  """
  Blend Align
  
  Changes the blend alignment relative to the parent image.
  
  Depends on: `blend`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/blending/blend-align)
  """
  blendAlign: [ImgixParamsBlendAlign!]

  """
  Blend Alpha
  
  Changes the alpha of the blend image.
  
  Depends on: `blend`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/blending/blend-alpha)
  """
  blendAlpha: IntType

  """
  Blend Color
  
  Specifies a color to use when applying the blend.
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/blending/blend-color)
  """
  blendColor: String

  """
  Blend Crop
  
  Specifies the type of crop for blend images.
  
  Depends on: `blend`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/blending/blend-crop)
  """
  blendCrop: [ImgixParamsBlendCrop!]

  """
  Blend Fit
  
  Specifies the fit mode for blend images.
  
  Depends on: `blend`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/blending/blend-fit)
  """
  blendFit: ImgixParamsBlendFit

  """
  Blend Height
  
  Adjusts the height of the blend image.
  
  Depends on: `blend`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/blending/blend-h)
  """
  blendH: FloatType

  """
  Blend Mode
  
  Sets the blend mode for a blend image.
  
  Depends on: `blend`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/blending/blend-mode)
  """
  blendMode: ImgixParamsBlendMode

  """
  Blend Padding
  
  Applies padding to the blend image.
  
  Depends on: `blend`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/blending/blend-pad)
  """
  blendPad: IntType

  """
  Blend Size
  
  Adjusts the size of the blend image.
  
  Depends on: `blend`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/blending/blend-size)
  """
  blendSize: ImgixParamsBlendSize

  """
  Blend Width
  
  Adjusts the width of the blend image.
  
  Depends on: `blend`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/blending/blend-w)
  """
  blendW: FloatType

  """
  Blend X Position
  
  Adjusts the x-offset of the blend image relative to its parent.
  
  Depends on: `blend`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/blending/blend-x)
  """
  blendX: IntType

  """
  Blend Y Position
  
  Adjusts the y-offset of the blend image relative to its parent.
  
  Depends on: `blend`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/blending/blend-y)
  """
  blendY: IntType

  """
  Blend
  
  Specifies the location of the blend image.
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/blending/blend)
  """
  blend: String

  """
  Gaussian Blur
  
  Applies a gaussian blur to an image.
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/stylize/blur)
  """
  blur: IntType

  """
  Border Bottom
  
  Sets bottom border of an image.
  
  Depends on: `border`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/border-and-padding/border-bottom)
  """
  borderBottom: IntType

  """
  Border Left
  
  Sets left border of an image.
  
  Depends on: `border`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/border-and-padding/border-left)
  """
  borderLeft: IntType

  """
  Inner Border Radius
  
  Sets the inner radius of the image's border in pixels.
  
  Depends on: `border`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/border-and-padding/border-radius-inner)
  """
  borderRadiusInner: String

  """
  Outer Border Radius
  
  Sets the outer radius of the image's border in pixels.
  
  Depends on: `border`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/border-and-padding/border-radius)
  """
  borderRadius: String

  """
  Border Right
  
  Sets right border of an image.
  
  Depends on: `border`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/border-and-padding/border-right)
  """
  borderRight: IntType

  """
  Border Top
  
  Sets top border of an image.
  
  Depends on: `border`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/border-and-padding/border-top)
  """
  borderTop: IntType

  """
  Border Size & Color
  
  Applies a border to an image.
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/border-and-padding/border)
  """
  border: String

  """
  Brightness
  
  Adjusts the brightness of the source image.
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/adjustment/bri)
  """
  bri: IntType

  """
  Client Hints
  
  Sets one or more Client-Hints headers
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/format/ch)
  """
  ch: [ImgixParamsCh!]

  """
  Chroma Subsampling
  
  Specifies the output chroma subsampling rate.
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/format/chromasub)
  """
  chromasub: IntType

  """
  Color Quantization
  
  Limits the number of unique colors in an image.
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/format/colorquant)
  """
  colorquant: IntType

  """
  Palette Color Count
  
  Specifies how many colors to include in a palette-extraction response.
  
  Depends on: `palette`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/color-palette/colors)
  """
  colors: IntType

  """
  Contrast
  
  Adjusts the contrast of the source image.
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/adjustment/con)
  """
  con: IntType

  """
  Mask Corner Radius
  
  Specifies the radius value for a rounded corner mask.
  
  Depends on: `mask=corners`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/mask/corner-radius)
  """
  cornerRadius: String

  """
  Crop Mode
  
  Specifies how to crop an image.
  
  Depends on: `fit=crop`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/size/crop)
  """
  crop: [ImgixParamsCrop!]

  """
  Color Space
  
  Specifies the color space of the output image.
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/format/cs)
  """
  cs: ImgixParamsCs

  """
  Download
  
  Forces a URL to use send-file in its response.
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/format/dl)
  """
  dl: String

  """
  Dots Per Inch
  
  Sets the DPI value in the EXIF header.
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/format/dpi)
  """
  dpi: IntType

  """
  Device Pixel Ratio
  
  Adjusts the device-pixel ratio of the output image.
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/dpr)
  """
  dpr: FloatType

  """
  Duotone Alpha
  
  Changes the alpha of the duotone effect atop the source image.
  
  Depends on: `duotone`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/stylize/duotone-alpha)
  """
  duotoneAlpha: IntType

  """
  Duotone
  
  Applies a duotone effect to the source image.
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/stylize/duotone)
  """
  duotone: String

  """
  Exposure
  
  Adjusts the exposure of the output image.
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/adjustment/exp)
  """
  exp: IntType

  """
  Url Expiration Timestamp
  
  A Unix timestamp specifying a UTC time. Requests made to this URL after that time will output a 404 status code.
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/expires)
  """
  expires: IntType

  """
  Face Index
  
  Selects a face to crop to.
  
  Depends on: `fit=facearea`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/face-detection/faceindex)
  """
  faceindex: IntType

  """
  Face Padding
  
  Adjusts padding around a selected face.
  
  Depends on: `fit=facearea`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/face-detection/facepad)
  """
  facepad: FloatType

  """
  Json Face Data
  
  Specifies that face data should be included in output when combined with `fm=json`.
  
  Depends on: `fm=json`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/face-detection/faces)
  """
  faces: IntType

  """
  Fill Color
  
  Sets the fill color for images with additional space created by the fit setting
  
  Depends on: `fill=solid`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/fill/fill-color)
  """
  fillColor: String

  """
  Fill Mode
  
  Determines how to fill in additional space created by the fit setting
  
  Depends on: `fit`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/fill/fill)
  """
  fill: ImgixParamsFill

  """
  Resize Fit Mode
  
  Specifies how to map the source image to the output image dimensions.
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/size/fit)
  """
  fit: ImgixParamsFit

  """
  Flip Axis
  
  Flips an image on a specified axis.
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/rotation/flip)
  """
  flip: ImgixParamsFlip

  """
  Output Format
  
  Changes the format of the output image.
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/format/fm)
  """
  fm: ImgixParamsFm

  """
  Focal Point Debug
  
  Displays crosshairs identifying the location of the set focal point
  
  Depends on: `fit=crop`, `crop=focalpoint`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/focalpoint-crop/fp-debug)
  """
  fpDebug: BooleanType

  """
  Focal Point X Position
  
  Sets the relative horizontal value for the focal point of an image
  
  Depends on: `fit=crop`, `crop=focalpoint`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/focalpoint-crop/fp-x)
  """
  fpX: FloatType

  """
  Focal Point Y Position
  
  Sets the relative vertical value for the focal point of an image
  
  Depends on: `fit=crop`, `crop=focalpoint`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/focalpoint-crop/fp-y)
  """
  fpY: FloatType

  """
  Focal Point Zoom
  
  Sets the relative zoom value for the focal point of an image
  
  Depends on: `fit=crop`, `crop=focalpoint`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/focalpoint-crop/fp-z)
  """
  fpZ: FloatType

  """
  Frames Per Second
  
  Specifies the framerate of the generated image.
  """
  fps: IntType

  """
  Frame Selection
  
  Specifies the frame of an animated image to use.
  """
  frame: String

  """
  Gamma
  
  Adjusts the gamma of the source image.
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/adjustment/gam)
  """
  gam: IntType

  """
  Animated Gif Quality
  
  Depends on: `fm=gif`
  """
  gifQ: IntType

  """
  Grid Colors
  
  Sets grid colors for the transparency checkerboard grid.
  
  Depends on: `transparency`
  """
  gridColors: String

  """
  Grid Size
  
  Sets grid size for the transparency checkerboard grid.
  
  Depends on: `transparency`
  """
  gridSize: IntType

  """
  Image Height
  
  Adjusts the height of the output image.
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/size/h)
  """
  h: FloatType

  """
  Highlight
  
  Adjusts the highlights of the source image.
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/adjustment/high)
  """
  high: IntType

  """
  Halftone
  
  Applies a half-tone effect to the source image.
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/stylize/htn)
  """
  htn: IntType

  """
  Hue Shift
  
  Adjusts the hue of the source image.
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/adjustment/hue)
  """
  hue: IntType

  """
  Frame Interval
  
  Displays every Nth frame starting with the first frame.
  """
  interval: IntType

  """
  Invert
  
  Inverts the colors on the source image.
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/adjustment/invert)
  """
  invert: BooleanType

  """
  Iptc Passthrough
  
  Determine if IPTC data should be passed for JPEG images.
  """
  iptc: ImgixParamsIptc

  """
  Animation Loop Count
  
  Specifies the number of times an animated image should repeat. A value of 0 means infinite looping.
  """
  loop: IntType

  """
  Lossless Compression
  
  Specifies that the output image should be a lossless variant.
  
  Depends on: `fm=webp`, `fm=jxr`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/format/lossless)
  """
  lossless: BooleanType

  """
  Watermark Alignment Mode
  
  Changes the watermark alignment relative to the parent image.
  
  Depends on: `mark`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/watermark/mark-align)
  """
  markAlign: [ImgixParamsMarkAlign!]

  """
  Watermark Alpha
  
  Changes the alpha of the watermark image.
  
  Depends on: `mark`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/watermark/mark-alpha)
  """
  markAlpha: IntType

  """
  Watermark Base Url
  
  Changes base URL of the watermark image.
  
  Depends on: `mark`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/watermark/mark-base)
  """
  markBase: String

  """
  Watermark Fit Mode
  
  Specifies the fit mode for watermark images.
  
  Depends on: `mark`, `markw`, `markh`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/watermark/mark-fit)
  """
  markFit: ImgixParamsMarkFit

  """
  Watermark Height
  
  Adjusts the height of the watermark image.
  
  Depends on: `mark`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/watermark/mark-h)
  """
  markH: FloatType

  """
  Watermark Padding
  
  Applies padding to the watermark image.
  
  Depends on: `mark`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/watermark/mark-pad)
  """
  markPad: IntType

  """
  Watermark Rotation
  
  Rotates a watermark or tiled watermarks by a specified number of degrees.
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/watermark/mark-rot)
  """
  markRot: FloatType

  """
  Watermark Scale
  
  Adjusts the scale of the watermark image.
  
  Depends on: `mark`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/watermark/mark-scale)
  """
  markScale: IntType

  """
  Watermark Tile
  
  Adds tiled watermark.
  
  Depends on: `mark`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/watermark/mark-tile)
  """
  markTile: ImgixParamsMarkTile

  """
  Watermark Width
  
  Adjusts the width of the watermark image.
  
  Depends on: `mark`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/watermark/mark-w)
  """
  markW: FloatType

  """
  Watermark X Position
  
  Adjusts the x-offset of the watermark image relative to its parent.
  
  Depends on: `mark`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/watermark/mark-x)
  """
  markX: IntType

  """
  Watermark Y Position
  
  Adjusts the y-offset of the watermark image relative to its parent.
  
  Depends on: `mark`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/watermark/mark-y)
  """
  markY: IntType

  """
  Watermark Image Url
  
  Specifies the location of the watermark image.
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/watermark/mark)
  """
  mark: String

  """
  Mask Background Color
  
  Colors the background of the transparent mask area of images
  
  Depends on: `mask`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/mask/mask-bg)
  """
  maskBg: String

  """
  Mask Type
  
  Defines the type of mask and specifies the URL if that type is selected.
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/mask)
  """
  mask: String

  """
  Maximum Height
  
  Specifies the maximum height of the output image in pixels.
  
  Depends on: `fit=crop`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/size/max-height)
  """
  maxH: IntType

  """
  Maximum Width
  
  Specifies the maximum width of the output image in pixels.
  
  Depends on: `fit=crop`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/size/max-width)
  """
  maxW: IntType

  """
  Minimum Height
  
  Specifies the minimum height of the output image in pixels.
  
  Depends on: `fit=crop`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/size/min-height)
  """
  minH: IntType

  """
  Minimum Width
  
  Specifies the minimum width of the output image in pixels.
  
  Depends on: `fit=crop`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/size/min-width)
  """
  minW: IntType

  """
  Monochrome
  
  Applies a monochrome effect to the source image.
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/stylize/monochrome)
  """
  monochrome: String

  """
  Noise Reduction Bound
  
  Reduces the noise in an image.
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/noise-reduction/nr)
  """
  nr: IntType

  """
  Noise Reduction Sharpen
  
  Provides a threshold by which to sharpen an image.
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/noise-reduction/nrs)
  """
  nrs: IntType

  """
  Orientation
  
  Changes the image orientation.
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/rotation/orient)
  """
  orient: IntType

  """
  Padding Bottom
  
  Sets bottom padding of an image.
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/border-and-padding/pad-bottom)
  """
  padBottom: IntType

  """
  Padding Left
  
  Sets left padding of an image.
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/border-and-padding/pad-left)
  """
  padLeft: IntType

  """
  Padding Right
  
  Sets right padding of an image.
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/border-and-padding/pad-right)
  """
  padRight: IntType

  """
  Padding Top
  
  Sets top padding of an image.
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/border-and-padding/pad-top)
  """
  padTop: IntType

  """
  Padding
  
  Pads an image.
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/border-and-padding/pad)
  """
  pad: IntType

  """
  Pdf Page Number
  
  Selects a page from a PDF for display.
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/pdf/page)
  """
  page: IntType

  """
  Color Palette Extraction
  
  Specifies an output format for palette-extraction.
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/color-palette/palette)
  """
  palette: ImgixParamsPalette

  """
  Pdf Annotation
  
  Enables or disables PDF annotation.
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/pdf/pdf-annotation)
  """
  pdfAnnotation: BooleanType

  """
  Css Prefix
  
  Specifies a CSS prefix for all classes in palette-extraction.
  
  Depends on: `palette=css`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/color-palette/prefix)
  """
  prefix: String

  """
  Pixellate
  
  Applies a pixelation effect to an image.
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/stylize/px)
  """
  px: IntType

  """
  Output Quality
  
  Adjusts the quality of an output image.
  
  Depends on: `fm=jpg`, `fm=pjpg`, `fm=webp`, `fm=jxr`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/format/q)
  """
  q: IntType

  """
  Source Rectangle Region
  
  Crops an image to a specified rectangle.
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/size/rect)
  """
  rect: String

  """
  Reverse
  
  Reverses the frame order on the source animation.
  """
  reverse: BooleanType

  """
  Rotation
  
  Rotates an image by a specified number of degrees.
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/rotation/rot)
  """
  rot: FloatType

  """
  Saturation
  
  Adjusts the saturation of an image.
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/adjustment/sat)
  """
  sat: IntType

  """
  Sepia Tone
  
  Applies a sepia effect to an image.
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/stylize/sepia)
  """
  sepia: IntType

  """
  Shadow
  
  Adjusts the highlights of the source image.
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/adjustment/shad)
  """
  shad: FloatType

  """
  Sharpen
  
  Adjusts the sharpness of the source image.
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/adjustment/sharp)
  """
  sharp: FloatType

  """
  Frame Skip
  
  Skips every Nth frame starting with the first frame.
  """
  skip: IntType

  """
  Transparency
  
  Adds checkerboard behind images which support transparency.
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/fill/transparency)
  """
  transparency: ImgixParamsTransparency

  """
  Trim Color
  
  Specifies a trim color on a trim operation.
  
  Depends on: `trim=color`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/trim/trim-color)
  """
  trimColor: String

  """
  Trim Mean Difference
  
  Specifies the mean difference on a trim operation.
  
  Depends on: `trim=auto`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/trim/trim-md)
  """
  trimMd: FloatType

  """
  Trim Padding
  
  Pads the area of the source image before trimming.
  
  Depends on: `trim`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/trim/trim-pad)
  """
  trimPad: IntType

  """
  Trim Standard Deviation
  
  Specifies the standard deviation on a trim operation.
  
  Depends on: `trim=auto`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/trim/trim-sd)
  """
  trimSd: FloatType

  """
  Trim Tolerance
  
  Specifies the tolerance on a trim operation.
  
  Depends on: `trim=color`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/trim/trim-tol)
  """
  trimTol: FloatType

  """
  Trim Image
  
  Trims the source image.
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/trim/trim)
  """
  trim: ImgixParamsTrim

  """
  Text Align
  
  Sets the vertical and horizontal alignment of rendered text relative to the base image.
  
  Depends on: `txt`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/text/txt-align)
  """
  txtAlign: [ImgixParamsTxtAlign!]

  """
  Text Clipping Mode
  
  Sets the clipping properties of rendered text.
  
  Depends on: `txt`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/text/txt-clip)
  """
  txtClip: [ImgixParamsTxtClip!]

  """
  Text Color
  
  Specifies the color of rendered text.
  
  Depends on: `txt`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/text/txt-color)
  """
  txtColor: String

  """
  Text Fit Mode
  
  Specifies the fit approach for rendered text.
  
  Depends on: `txt`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/text/txt-fit)
  """
  txtFit: ImgixParamsTxtFit

  """
  Text Font
  
  Selects a font for rendered text.
  
  Depends on: `txt`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/text/txt-font)
  """
  txtFont: String

  """
  Text Leading
  
  Sets the leading (line spacing) for rendered text. Only works on the multi-line text endpoint.
  
  Depends on: `txt`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/typesetting/txt-lead)
  """
  txtLead: IntType

  """
  Text Ligatures
  
  Controls the level of ligature substitution
  
  Depends on: `txt`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/text/txt-lig)
  """
  txtLig: IntType

  """
  Text Outline Color
  
  Specifies a text outline color.
  
  Depends on: `txt`, `txtline`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/text/txt-line-color)
  """
  txtLineColor: String

  """
  Text Outline
  
  Outlines the rendered text with a specified color.
  
  Depends on: `txt`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/text/txt-line)
  """
  txtLine: IntType

  """
  Text Padding
  
  Specifies the padding (in device-independent pixels) between a textbox and the edges of the base image.
  
  Depends on: `txt`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/text/txt-pad)
  """
  txtPad: IntType

  """
  Text Shadow
  
  Applies a shadow to rendered text.
  
  Depends on: `txt`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/text/txt-shad)
  """
  txtShad: FloatType

  """
  Text Font Size
  
  Sets the font size of rendered text.
  
  Depends on: `txt`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/text/txt-size)
  """
  txtSize: IntType

  """
  Text Tracking
  
  Sets the tracking (letter spacing) for rendered text. Only works on the multi-line text endpoint.
  
  Depends on: `txt`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/typesetting/txt-track)
  """
  txtTrack: IntType

  """
  Text Width
  
  Sets the width of rendered text.
  
  Depends on: `txt`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/text/txt-width)
  """
  txtWidth: IntType

  """
  Text X Position
  
  Sets the horizontal (x) position of the text in pixels relative to the left edge of the base image.
  
  Depends on: `txt`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/text/txt-x)
  """
  txtX: IntType

  """
  Text Y Position
  
  Sets the vertical (y) position of the text in pixels relative to the top edge of the base image.
  
  Depends on: `txt`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/text/txt-y)
  """
  txtY: IntType

  """
  Text String
  
  Sets the text string to render.
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/text/txt)
  """
  txt: String

  """
  Unsharp Mask
  
  Sharpens the source image using an unsharp mask.
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/adjustment/usm)
  """
  usm: IntType

  """
  Unsharp Mask Radius
  
  Specifies the radius for an unsharp mask operation.
  
  Depends on: `usm`
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/adjustment/usmrad)
  """
  usmrad: FloatType

  """
  Vibrance
  
  Adjusts the vibrance of an image.
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/adjustment/vib)
  """
  vib: IntType

  """
  Image Width
  
  Adjusts the width of the output image.
  
  [Open Imgix reference »](https://docs.imgix.com/apis/url/size/w)
  """
  w: FloatType
}

enum ImgixParamsAuto {
  enhance
  format
  redeye
  compress
}

enum ImgixParamsBlendAlign {
  top
  bottom
  middle
  left
  right
  center
}

enum ImgixParamsBlendCrop {
  top
  bottom
  left
  right
  faces
}

enum ImgixParamsBlendFit {
  clamp
  clip
  crop
  scale
  max
}

enum ImgixParamsBlendMode {
  color
  burn
  dodge
  darken
  difference
  exclusion
  hardlight
  hue
  lighten
  luminosity
  multiply
  overlay
  saturation
  screen
  softlight
  normal
}

enum ImgixParamsBlendSize {
  inherit
}

enum ImgixParamsCh {
  width
  dpr
  saveData
}

enum ImgixParamsCrop {
  top
  bottom
  left
  right
  faces
  entropy
  edges
  focalpoint
}

enum ImgixParamsCs {
  srgb
  adobergb1998
  tinysrgb
  strip
}

enum ImgixParamsFill {
  solid
  blur
}

enum ImgixParamsFit {
  clamp
  clip
  crop
  facearea
  fill
  fillmax
  max
  min
  scale
}

enum ImgixParamsFlip {
  h
  v
  hv
}

enum ImgixParamsFm {
  gif
  jpg
  jp2
  json
  jxr
  pjpg
  mp4
  png
  png8
  png32
  webp
  webm
  blurhash
  avif
}

enum ImgixParamsIptc {
  allow
  block
}

enum ImgixParamsMarkAlign {
  top
  middle
  bottom
  left
  center
  right
}

enum ImgixParamsMarkFit {
  clip
  crop
  fill
  max
  scale
}

enum ImgixParamsMarkTile {
  grid
}

enum ImgixParamsPalette {
  css
  json
}

enum ImgixParamsTransparency {
  grid
}

enum ImgixParamsTrim {
  auto
  color
}

enum ImgixParamsTxtAlign {
  top
  middle
  bottom
  left
  center
  right
}

enum ImgixParamsTxtClip {
  start
  middle
  end
  ellipsis
}

enum ImgixParamsTxtFit {
  max
}

"""Specifies how to filter by usage"""
input InUseFilter {
  """Search uploads that are currently used by some record or not"""
  eq: BooleanType
}

input InstagramReelBlockModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  internalName: StringFilter
  OR: [InstagramReelBlockModelFilter]
  AND: [InstagramReelBlockModelFilter]
}

enum InstagramReelBlockModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  internalName_ASC
  internalName_DESC
}

"""Record of type Instagram Reel Block (instagram_reel_block)"""
type InstagramReelBlockRecord implements RecordInterface {
  _allContentLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [ModularInstagramReelBlockRecordListListNonNullMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  content(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [ModularInstagramReelBlockRecord!]!
  createdAt: DateTime!
  id: ItemId!
  internalName: String
  updatedAt: DateTime!
}

"""
Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
"""
scalar IntType

"""Specifies how to filter Integer fields"""
input IntegerFilter {
  """
  Filter records with a value that's strictly greater than the one specified
  """
  gt: IntType

  """Filter records with a value that's less than the one specified"""
  lt: IntType

  """
  Filter records with a value that's greater than or equal to the one specified
  """
  gte: IntType

  """
  Filter records with a value that's less or equal than the one specified
  """
  lte: IntType

  """
  Filter records with the specified field defined (i.e. with any value) or not
  """
  exists: BooleanType

  """Search for records with an exact match"""
  eq: IntType

  """Exclude records with an exact match"""
  neq: IntType
}

scalar ItemId

"""Specifies how to filter by ID"""
input ItemIdFilter {
  """Search the record with the specified ID"""
  eq: ItemId

  """Exclude the record with the specified ID"""
  neq: ItemId

  """Search records with the specified IDs"""
  in: [ItemId]

  """Search records that do not have the specified IDs"""
  notIn: [ItemId]
}

enum ItemStatus {
  draft
  updated
  published
}

"""Block of type Jacket Length Label (jacket_length_label)"""
type JacketLengthLabelRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy: String
  createdAt: DateTime!
  id: ItemId!
  specName: String
  updatedAt: DateTime!
}

input JeweleryProductSubCategoryModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  image: FileFilter
  slug: StringFilter
  title: StringFilter
  OR: [JeweleryProductSubCategoryModelFilter]
  AND: [JeweleryProductSubCategoryModelFilter]
}

enum JeweleryProductSubCategoryModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  slug_ASC
  slug_DESC
  title_ASC
  title_DESC
}

"""
Record of type Jewelery Product Sub Category (jewelery_product_sub_category)
"""
type JeweleryProductSubCategoryRecord implements RecordInterface {
  _allTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  image: FileField
  slug: String
  title(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  updatedAt: DateTime!
}

union JewelryOmegaProductModelBelowBannerBlocksField = FullWidthBannerBlockRecord | HalfWidthBannerBlockRecord | TrioBlockRecord

union JewelryOmegaProductModelContentField = ModularFullWidthBannerBlockRecord | ModularTrio1x1BlockRecord

type JewelryOmegaProductModelContentFieldListListNonNullMultiLocaleField {
  locale: SiteLocale
  value: [JewelryOmegaProductModelContentField!]!
}

input JewelryOmegaProductModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  belowBannerBlocks: LinksFilter
  category: StringFilter
  ctaCopy: LinkFilter
  hasOnlyOnePrice: BooleanFilter
  plpTitle: StringFilter
  productAccordionSpecsLabel: LinkFilter
  productDescription: TextFilter
  productIconList: LinkFilter
  products: LinksFilter
  productSpecifications: TextFilter
  productTitle: StringFilter
  seoFields: LinkFilter
  shippingAndReturns: LinkFilter
  shouldUseDatoAssets: BooleanFilter
  shouldUseDefaultPrice: BooleanFilter
  slug: StringFilter
  waitlistPageCopy: LinkFilter
  OR: [JewelryOmegaProductModelFilter]
  AND: [JewelryOmegaProductModelFilter]
}

enum JewelryOmegaProductModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  category_ASC
  category_DESC
  hasOnlyOnePrice_ASC
  hasOnlyOnePrice_DESC
  plpTitle_ASC
  plpTitle_DESC
  productTitle_ASC
  productTitle_DESC
  shouldUseDatoAssets_ASC
  shouldUseDatoAssets_DESC
  shouldUseDefaultPrice_ASC
  shouldUseDefaultPrice_DESC
  slug_ASC
  slug_DESC
}

"""Record of type Jewelry Omega Product (jewelry_omega_product)"""
type JewelryOmegaProductRecord implements RecordInterface {
  _allContentLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [JewelryOmegaProductModelContentFieldListListNonNullMultiLocaleField!]
  _allExtraOptionsLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [OptionsHeaderRecordListListNonNullMultiLocaleField!]
  _allPlpTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allProductDescriptionLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allProductSpecificationsLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allProductTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  belowBannerBlocks: [JewelryOmegaProductModelBelowBannerBlocksField!]!
  category: String
  content(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [JewelryOmegaProductModelContentField!]!
  createdAt: DateTime!
  ctaCopy: JewelryPdpCtaRecord
  extraOptions(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [OptionsHeaderRecord!]!
  hasOnlyOnePrice: BooleanType
  id: ItemId!
  plpTitle(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  productAccordionSpecsLabel: ProductSpecLabelCollectionRecord
  productDescription(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  productIconList: ProductIconListRecord
  productSpecifications(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  productTitle(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  products: [ConfiguredProductOptionRecord!]!
  seoFields: PageSeoRecord
  shippingAndReturns: ProductShippingAndReturnRecord
  shouldUseDatoAssets: BooleanType
  shouldUseDefaultPrice: BooleanType
  slug: String
  updatedAt: DateTime!
  waitlistPageCopy: ProductWaitlistRecord
}

input JewelryPdpCtaModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  _locales: LocalesFilter
  addToBagCtaCopy: StringFilter
  diamondPageFlowCtaCopy: StringFilter
  diamondPairFlowCtaCopy: StringFilter
  outOfStockCtaCopy: StringFilter
  OR: [JewelryPdpCtaModelFilter]
  AND: [JewelryPdpCtaModelFilter]
}

enum JewelryPdpCtaModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  addToBagCtaCopy_ASC
  addToBagCtaCopy_DESC
  diamondPageFlowCtaCopy_ASC
  diamondPageFlowCtaCopy_DESC
  diamondPairFlowCtaCopy_ASC
  diamondPairFlowCtaCopy_DESC
  outOfStockCtaCopy_ASC
  outOfStockCtaCopy_DESC
}

"""Record of type Jewelry PDP CTA (jewelry_pdp_cta)"""
type JewelryPdpCtaRecord implements RecordInterface {
  _allAddToBagCtaCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDiamondPageFlowCtaCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDiamondPairFlowCtaCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allOutOfStockCtaCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  addToBagCtaCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  createdAt: DateTime!
  diamondPageFlowCtaCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  diamondPairFlowCtaCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  id: ItemId!
  outOfStockCtaCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  updatedAt: DateTime!
}

union JewelryProductModelBelowBannerBlocksField = ModularAccordionBlockRecord | ModularCarouselBlockRecord | ModularCarouselHoverBlockRecord | ModularCelebrityCarouselBlockRecord | ModularCelebrityReelBlockRecord | ModularDuoBlockRecord | ModularEmailSignupBlockRecord | ModularFullWidthBannerBlockRecord | ModularGridCarouselBlockRecord | ModularHalfWidthQuadBlockRecord | ModularInstagramReelBlockRecord | ModularMiniBannerBlockRecord | ModularProductSliderBlockRecord | ModularQuadBlockRecord | ModularQuadGridRecord | ModularShowroomBlockRecord | ModularSideBySideBlockRecord | ModularSingleVideoBlockRecord | ModularTallHalfWidthBlockRecord | ModularTextOnlyBlockRecord | ModularTrio9x7BlockRecord | ModularTrioSlide9x7BlockRecord | ModularTrioStaggered9x7BlockRecord | SocialMediaSectionRecord

union JewelryProductModelContentField = ModularGridCarouselBlockRecord | ModularTrio1x1BlockRecord

type JewelryProductModelContentFieldListListNonNullMultiLocaleField {
  locale: SiteLocale
  value: [JewelryProductModelContentField!]!
}

input JewelryProductModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  _locales: LocalesFilter
  bottomDescription: TextFilter
  caratWeight: StringFilter
  category: StringFilter
  configurations: LinksFilter
  ctaCopy: LinkFilter
  defaultVariant: StringFilter
  diamondDescription: TextFilter
  hasOnlyOnePrice: BooleanFilter
  isPromoIconEnabled: BooleanFilter
  productAccordionSpecsLabel: LinkFilter
  productDescription: TextFilter
  productIconList: LinkFilter
  productLabel: LinkFilter
  productTitle: StringFilter
  seoFields: LinkFilter
  shippingAndReturns: LinkFilter
  shouldUseDatoAssets: BooleanFilter
  shouldUseDefaultPrice: BooleanFilter
  slug: StringFilter
  specLabels: LinkFilter
  subCategory: LinksFilter
  waitlistPageCopy: LinkFilter
  OR: [JewelryProductModelFilter]
  AND: [JewelryProductModelFilter]
}

enum JewelryProductModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  caratWeight_ASC
  caratWeight_DESC
  category_ASC
  category_DESC
  defaultVariant_ASC
  defaultVariant_DESC
  hasOnlyOnePrice_ASC
  hasOnlyOnePrice_DESC
  isPromoIconEnabled_ASC
  isPromoIconEnabled_DESC
  productTitle_ASC
  productTitle_DESC
  shouldUseDatoAssets_ASC
  shouldUseDatoAssets_DESC
  shouldUseDefaultPrice_ASC
  shouldUseDefaultPrice_DESC
  slug_ASC
  slug_DESC
}

"""Record of type Jewelry Product (jewelry_product)"""
type JewelryProductRecord implements RecordInterface {
  _allAccordionBlocksLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [ModularAccordionBlockRecordListListNonNullMultiLocaleField!]
  _allBottomDescriptionLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allContentLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [JewelryProductModelContentFieldListListNonNullMultiLocaleField!]
  _allDiamondDescriptionLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allExtraOptionsLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [OptionsHeaderRecordListListNonNullMultiLocaleField!]
  _allProductDescriptionLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allProductTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  accordionBlocks(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [ModularAccordionBlockRecord!]!
  belowBannerBlocks: [JewelryProductModelBelowBannerBlocksField!]!
  bottomDescription(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  caratWeight: String
  category: String
  configurations: [ConfigurationRecord!]!
  content(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [JewelryProductModelContentField!]!
  createdAt: DateTime!
  ctaCopy: JewelryPdpCtaRecord
  defaultVariant: String
  diamondDescription(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  extraOptions(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [OptionsHeaderRecord!]!
  hasOnlyOnePrice: BooleanType
  id: ItemId!
  isPromoIconEnabled: BooleanType
  productAccordionSpecsLabel: ProductSpecLabelCollectionRecord
  productDescription(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  productIconList: ProductIconListRecord
  productLabel: ProductLabelRecord
  productTitle(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  seoFields: PageSeoRecord
  shippingAndReturns: ProductShippingAndReturnRecord
  shouldUseDatoAssets: BooleanType
  shouldUseDefaultPrice: BooleanType
  slug: String
  specLabels: ProductSpecLabelCollectionRecord
  subCategory: [JeweleryProductSubCategoryRecord!]!
  updatedAt: DateTime!
  waitlistPageCopy: ProductWaitlistRecord
}

input JewelrySubcategoryModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  data: LinksFilter
  title: StringFilter
  OR: [JewelrySubcategoryModelFilter]
  AND: [JewelrySubcategoryModelFilter]
}

enum JewelrySubcategoryModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  title_ASC
  title_DESC
}

"""Record of type Jewelry Subcategory (jewelry_subcategory)"""
type JewelrySubcategoryRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  data: [JeweleryProductSubCategoryRecord!]!
  id: ItemId!
  title: String
  updatedAt: DateTime!
}

scalar JsonField

"""Specifies how to filter JSON fields"""
input JsonFilter {
  """
  Filter records with the specified field defined (i.e. with any value) or not
  """
  exists: BooleanType
}

"""Block of type JSON key (json_key)"""
type JsonKeyRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  key: String
  updatedAt: DateTime!
  value: String
}

type JsonKeyRecordListListNonNullMultiLocaleField {
  locale: SiteLocale
  value: [JsonKeyRecord!]!
}

"""Specifies how to filter Single-link fields"""
input LinkFilter {
  """
  Search for records with an exact match. The specified value must be a Record ID
  """
  eq: ItemId

  """
  Exclude records with an exact match. The specified value must be a Record ID
  """
  neq: ItemId

  """Filter records linked to one of the specified records"""
  in: [ItemId]

  """Filter records not linked to one of the specified records"""
  notIn: [ItemId]

  """
  Filter records with the specified field defined (i.e. with any value) or not
  """
  exists: BooleanType
}

"""Specifies how to filter Multiple-links fields"""
input LinksFilter {
  """
  Search for records with an exact match. The specified values must be Record IDs
  """
  eq: [ItemId]

  """
  Filter records linked to all of the specified records. The specified values must be Record IDs
  """
  allIn: [ItemId]

  """
  Filter records linked to at least one of the specified records. The specified values must be Record IDs
  """
  anyIn: [ItemId]

  """
  Filter records not linked to any of the specified records. The specified values must be Record IDs
  """
  notIn: [ItemId]

  """
  Filter records with the specified field defined (i.e. with any value) or not
  """
  exists: BooleanType
}

union ListPageModelBannerBlocksField = FullWidthBannerBlockRecord | HalfWidthBannerBlockRecord

union ListPageModelBelowBannerBlocksField = ModularAccordionBlockRecord | ModularBlogListTrioBlockRecord | ModularCarouselBlockRecord | ModularCarouselHoverBlockRecord | ModularCelebrityCarouselBlockRecord | ModularCelebrityReelBlockRecord | ModularCollectionHeroBlockRecord | ModularDuoBlockRecord | ModularEmailSignupBlockRecord | ModularFullWidthBannerBlockRecord | ModularGridCarouselBlockRecord | ModularHalfWidthBannerBlockRecord | ModularHalfWidthBlogSummaryBlockRecord | ModularHalfWidthQuadBlockRecord | ModularHeroBannerBlockRecord | ModularInstagramReelBlockRecord | ModularLeoBlockRecord | ModularListTitleBlockRecord | ModularLogoBannerBlockRecord | ModularMiniBannerBlockRecord | ModularProductSliderBlockRecord | ModularProductSuggestionQuadBlockRecord | ModularQuadBlockRecord | ModularQuadGridRecord | ModularQuadLogoBlockRecord | ModularQuadStatisticsBlockRecord | ModularQuoteBlockRecord | ModularShowroomBlockRecord | ModularSideBySideBlockRecord | ModularSingleVideoBlockRecord | ModularSkinnyHeroBannerBlockRecord | ModularSlickCarouselBlockRecord | ModularTallHalfWidthBlockRecord | ModularTextOnlyBlockRecord | ModularTrio1x1BlockRecord | ModularTrio9x7BlockRecord | ModularTrioSlide9x7BlockRecord | ModularTrioStaggered9x7BlockRecord | ModularTriosvgBlockRecord | SocialMediaSectionRecord

type ListPageModelBelowBannerBlocksFieldListListNonNullMultiLocaleField {
  locale: SiteLocale
  value: [ListPageModelBelowBannerBlocksField!]!
}

union ListPageModelBestSellersInOrderField = ConfigurationRecord | ConfiguredProductOptionRecord | OmegaProductRecord

union ListPageModelCollectionsInOrderField = EngagementRingProductRecord | JewelryProductRecord | WeddingBandProductRecord

union ListPageModelConfigurationsInOrderField = ConfigurationRecord | ConfiguredProductOptionRecord | OmegaProductRecord

input ListPageModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  _locales: LocalesFilter
  bannerBlocks: LinksFilter
  bestSellersInOrder: LinksFilter
  breadcrumb: LinksFilter
  category: StringFilter
  collectionsInOrder: LinksFilter
  colors: StringFilter
  configurationsInOrder: LinksFilter
  creativeBlocks: LinksFilter
  customDiamondType: StringFilter
  defaultSort: StringFilter
  diamondTypes: StringFilter
  hero: LinkFilter
  inAHurry: LinkFilter
  productsInOrder: LinksFilter
  promoCardCollection: LinkFilter
  seo: LinkFilter
  shouldAutoLoad: BooleanFilter
  shouldDisplayPreviouslyViewed: BooleanFilter
  showAllCtaCopy: StringFilter
  showAllCtaLink: StringFilter
  showHeroWithBanner: BooleanFilter
  slug: StringFilter
  slugNew: StringFilter
  subcategoryFilter: LinksFilter
  OR: [ListPageModelFilter]
  AND: [ListPageModelFilter]
}

union ListPageModelFilterAndSortField = PlpFilterRecord | PlpSortRecord

type ListPageModelFilterAndSortFieldListListNonNullMultiLocaleField {
  locale: SiteLocale
  value: [ListPageModelFilterAndSortField!]!
}

enum ListPageModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  category_ASC
  category_DESC
  colors_ASC
  colors_DESC
  customDiamondType_ASC
  customDiamondType_DESC
  defaultSort_ASC
  defaultSort_DESC
  diamondTypes_ASC
  diamondTypes_DESC
  shouldAutoLoad_ASC
  shouldAutoLoad_DESC
  shouldDisplayPreviouslyViewed_ASC
  shouldDisplayPreviouslyViewed_DESC
  showAllCtaCopy_ASC
  showAllCtaCopy_DESC
  showAllCtaLink_ASC
  showAllCtaLink_DESC
  showHeroWithBanner_ASC
  showHeroWithBanner_DESC
  slug_ASC
  slug_DESC
  slugNew_ASC
  slugNew_DESC
}

"""Record of type List Pages (list_page)"""
type ListPageRecord implements RecordInterface {
  _allBelowBannerBlocksLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [ListPageModelBelowBannerBlocksFieldListListNonNullMultiLocaleField!]
  _allFilterAndSortLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [ListPageModelFilterAndSortFieldListListNonNullMultiLocaleField!]
  _allShowAllCtaCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  bannerBlocks: [ListPageModelBannerBlocksField!]!
  belowBannerBlocks(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [ListPageModelBelowBannerBlocksField!]!
  bestSellersInOrder: [ListPageModelBestSellersInOrderField!]!
  breadcrumb: [BreadcrumbRecord!]!
  category: String
  collectionsInOrder: [ListPageModelCollectionsInOrderField!]!
  colors: String
  configurationsInOrder: [ListPageModelConfigurationsInOrderField!]!
  createdAt: DateTime!
  creativeBlocks: [CreativeBlockRecord!]!
  customDiamondType: String
  defaultSort: String
  diamondTypes: String
  filterAndSort(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [ListPageModelFilterAndSortField!]!
  hero: ListpageHeroBannerRecord
  id: ItemId!
  inAHurry: TextOnlyBlockRecord
  productsInOrder: [OmegaProductRecord!]!
  promoCardCollection: PlpPromoCardCollectionRecord
  seo: PageSeoRecord
  shouldAutoLoad: BooleanType
  shouldDisplayPreviouslyViewed: BooleanType
  showAllCtaCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  showAllCtaLink: String
  showHeroWithBanner: BooleanType
  slug: String
  slugNew: String
  subcategoryFilter: [JewelrySubcategoryRecord!]!
  updatedAt: DateTime!
}

input ListpageHeroBannerModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  _locales: LocalesFilter
  copy: StringFilter
  copyPrices: LinkFilter
  ctaButtonType: StringFilter
  ctaCopy: StringFilter
  ctaRoute: StringFilter
  desktopImage: FileFilter
  mobileImage: FileFilter
  textColor: ColorFilter
  title: StringFilter
  OR: [ListpageHeroBannerModelFilter]
  AND: [ListpageHeroBannerModelFilter]
}

enum ListpageHeroBannerModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  copy_ASC
  copy_DESC
  ctaButtonType_ASC
  ctaButtonType_DESC
  ctaCopy_ASC
  ctaCopy_DESC
  ctaRoute_ASC
  ctaRoute_DESC
  title_ASC
  title_DESC
}

"""Record of type List Page Hero Banner (listpage_hero_banner)"""
type ListpageHeroBannerRecord implements RecordInterface {
  _allCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allCtaCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allCtaRouteLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  copyPrices: PricingByCurrencyRecord
  createdAt: DateTime!
  ctaButtonType: String
  ctaCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  ctaRoute(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  desktopImage: FileField
  id: ItemId!
  mobileImage: FileField
  textColor: ColorField
  title(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  updatedAt: DateTime!
}

"""Specifies how to filter by locale"""
input LocalesFilter {
  """Filter records that are localized in all the specified locales"""
  allIn: [SiteLocale!]

  """
  Filter records that are localized in at least one of the specified locales
  """
  anyIn: [SiteLocale!]

  """Filter records that are not localized in any of the specified locales"""
  notIn: [SiteLocale!]
}

"""Block of type Measurements Label (measurements_label)"""
type MeasurementsLabelRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy: String
  createdAt: DateTime!
  id: ItemId!
  specName: String
  updatedAt: DateTime!
}

scalar MetaTagAttributes

"""Block of type Metal Label (metal_label)"""
type MetalLabelRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy: String
  createdAt: DateTime!
  id: ItemId!
  specName: String
  updatedAt: DateTime!
}

"""Block of type Metal Weight Label (metal_weight_label)"""
type MetalWeightLabelRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy: String
  createdAt: DateTime!
  id: ItemId!
  specName: String
  updatedAt: DateTime!
}

"""Block of type Modular Accordion Block (modular_accordion_block)"""
type ModularAccordionBlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  accordionItems: [AccordionItemRecord!]!
  bottomCopy(
    """Process content as markdown"""
    markdown: Boolean
  ): String
  copy(
    """Process content as markdown"""
    markdown: Boolean
  ): String
  createdAt: DateTime!
  ctaButtonType: String
  ctaCopy: String
  ctaRoute: String
  darksideButtons: [DarksideButtonRecord!]!
  firstItemOpen: BooleanType
  id: ItemId!
  image: FileField
  shouldUseFaqSchema: BooleanType
  title: String
  updatedAt: DateTime!
}

type ModularAccordionBlockRecordListListNonNullMultiLocaleField {
  locale: SiteLocale
  value: [ModularAccordionBlockRecord!]!
}

"""Block of type Modular Accordion (modular_accordion)"""
type ModularAccordionRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  isCollapsible: BooleanType
  key: String
  label: String
  updatedAt: DateTime!
}

type ModularAccordionRecordListListNonNullMultiLocaleField {
  locale: SiteLocale
  value: [ModularAccordionRecord!]!
}

union ModularBlockWrapperModelContentBlocksField = ModularQuoteBlockRecord | ModularSingleMediaBlockRecord

type ModularBlockWrapperModelContentField {
  blocks: [ModularBlockWrapperModelContentBlocksField!]!
  links: [String!]!
  value: JsonField!
}

"""Block of type Modular Block Wrapper (modular_block_wrapper)"""
type ModularBlockWrapperRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  additionalClass: String
  content: ModularBlockWrapperModelContentField
  createdAt: DateTime!
  headingAdditionalClass: String
  headingType: String
  id: ItemId!
  title: String
  updatedAt: DateTime!
}

type ModularBlockWrapperRecordListListNonNullMultiLocaleField {
  locale: SiteLocale
  value: [ModularBlockWrapperRecord!]!
}

"""
Block of type Modular Blog List Trio Block (modular_blog_list_trio_block)
"""
type ModularBlogListTrioBlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  additionalClass: String
  blogPostCtaCopy: String
  blogPosts: [BlogPostRecord!]!
  createdAt: DateTime!
  ctaCopy: String
  ctaRoute: String
  id: ItemId!
  title: String
  updatedAt: DateTime!
}

union ModularCarouselBlockModelBlocksField = FullWidthBannerBlockRecord | HalfWidthBannerBlockRecord | QuoteBlockRecord | TextOnlyBlockRecord | TrioBlockRecord

"""Block of type Modular Carousel Block (modular_carousel_block)"""
type ModularCarouselBlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  additionalClass: String
  blocks: [ModularCarouselBlockModelBlocksField!]!
  createdAt: DateTime!
  id: ItemId!
  updatedAt: DateTime!
}

"""
Block of type Modular Carousel Hover Block (modular_carousel_hover_block)
"""
type ModularCarouselHoverBlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  additionalClass: String
  blocks: [CarouselHoverBlockItemRecord!]!
  createdAt: DateTime!
  id: ItemId!
  title: String
  updatedAt: DateTime!
}

"""
Block of type Modular Celebrity Carousel Block (modular_celebrity_carousel_block)
"""
type ModularCelebrityCarouselBlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  additionalClass: String
  blocks: [CelebrityBlockRecord!]!
  createdAt: DateTime!
  id: ItemId!
  showBottomCarouselOnly: BooleanType
  thumbnailCarouselTitle: String
  updatedAt: DateTime!
}

"""
Block of type Modular Celebrity Reel Block (modular_celebrity_reel_block)
"""
type ModularCelebrityReelBlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  blocks: [CelebrityBlockRecord!]!
  createdAt: DateTime!
  ctaCopy: String
  ctaLink: String
  id: ItemId!
  shouldIncludeCelebrityNames: BooleanType
  title: String
  updatedAt: DateTime!
}

"""
Block of type Modular Celebrity w/detail Carousel (modular_celebrity_w_detail_carousel)
"""
type ModularCelebrityWDetailCarouselRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  additionalClass: String
  blocks: [CelebrityBlockRecord!]!
  createdAt: DateTime!
  id: ItemId!
  thumbnailCarouselTitle: String
  updatedAt: DateTime!
}

"""
Block of type Modular Collection Hero Block (modular_collection_hero_block)
"""
type ModularCollectionHeroBlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  additionalClass: String
  backgroundColor: ColorField
  byText: String
  createdAt: DateTime!
  ctaCopy: String
  ctaLinkUrl: String
  ctaType: String
  darksideButtons: [DarksideButtonRecord!]!
  desktopImage: FileField
  id: ItemId!
  mobileImage: FileField
  showByVrai: BooleanType
  subtitle(
    """Process content as markdown"""
    markdown: Boolean
  ): String
  subtitleFont: String
  textColor: ColorField
  title: String
  titleFont: String
  titleStyle: String
  updatedAt: DateTime!
}

"""Block of type Modular Duo Block (modular_duo_block)"""
type ModularDuoBlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  additionalClass: String
  blocks: [SingleMediaBlockRecord!]!
  blurb(
    """Process content as markdown"""
    markdown: Boolean
  ): String
  createdAt: DateTime!
  headingAdditionalClass: String
  headingType: String
  id: ItemId!
  title: String
  updatedAt: DateTime!
}

"""
Block of type Modular Email Popup Override (modular_email_popup_override)
"""
type ModularEmailPopupOverrideRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy(
    """Process content as markdown"""
    markdown: Boolean
  ): String
  countryCode: String
  createdAt: DateTime!
  id: ItemId!
  updatedAt: DateTime!
}

type ModularEmailPopupOverrideRecordListListNonNullMultiLocaleField {
  locale: SiteLocale
  value: [ModularEmailPopupOverrideRecord!]!
}

"""Block of type Modular Email Signup Block (modular_email_signup_block)"""
type ModularEmailSignupBlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  additionalClass: String
  copy(
    """Process content as markdown"""
    markdown: Boolean
  ): String
  createdAt: DateTime!
  ctaCopy: String
  enablePhoneField: BooleanType
  enablePhoneFieldTitle: BooleanType
  enableStackedView: BooleanType
  headingAdditionalClass: String
  headingType: String
  id: ItemId!
  supportedCountries: [CountryRecord!]!
  title: String
  updatedAt: DateTime!
}

"""
Block of type Modular Full Width Banner Block (modular_full_width_banner_block)
"""
type ModularFullWidthBannerBlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  additionalClass: String
  copyPrices: PricingByCurrencyRecord
  createdAt: DateTime!
  ctaButtonType: String
  ctaButtonType2: String
  ctaButtonType3: String
  ctaCopy: String
  ctaCopy2: String
  ctaCopy3: String
  ctaRoute: String
  ctaRoute2: String
  ctaRoute3: String
  darksideButtons: [DarksideButtonRecord!]!
  desktopCopy(
    """Process content as markdown"""
    markdown: Boolean
  ): String
  desktopImage: FileField
  gtmClass: String
  headingAdditionalClass: String
  headingType: String
  id: ItemId!
  isTextBlockWide: BooleanType
  mobileCopy(
    """Process content as markdown"""
    markdown: Boolean
  ): String
  mobileImage: FileField
  openInNewWindow: BooleanType
  plpPosition: IntType
  subTitle: String
  supportedCountries: [CountryRecord!]!
  textBlockAlignment: String
  textColor: String
  title: String
  updatedAt: DateTime!
}

type ModularFullWidthBannerBlockRecordListListNonNullMultiLocaleField {
  locale: SiteLocale
  value: [ModularFullWidthBannerBlockRecord!]!
}

"""
Block of type Modular Grid Carousel Block (modular_grid_carousel_block)
"""
type ModularGridCarouselBlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  additionalClass: String
  blocks: [GridCarouselBlockItemRecord!]!
  createdAt: DateTime!
  headingAdditionalClass: String
  headingType: String
  id: ItemId!
  subtitle: String
  title: String
  updatedAt: DateTime!
}

"""
Block of type Modular Half Width Banner Block (modular_half_width_banner_block)
"""
type ModularHalfWidthBannerBlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  additionalClass: String
  createdAt: DateTime!
  ctaCopy: String
  ctaRoute: String
  darksideButtons: [DarksideButtonRecord!]!
  desktopCopy(
    """Process content as markdown"""
    markdown: Boolean
  ): String
  desktopImage: FileField
  headingAdditionalClass: String
  headingType: String
  id: ItemId!
  isTextBlockWide: BooleanType
  middleLayerImage: FileField
  middleLayerImageMobile: FileField
  mobileCopy(
    """Process content as markdown"""
    markdown: Boolean
  ): String
  mobileImage: FileField
  mobileTitle: String
  supportedCountries: [CountryRecord!]!
  textBlockAlignment: String
  textColor: String
  title: String
  updatedAt: DateTime!
}

"""
Block of type Modular Half Width Blog Summary Block (modular_half_width_blog_summary_block)
"""
type ModularHalfWidthBlogSummaryBlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  additionalClass: String
  blogPost: BlogPostRecord
  createdAt: DateTime!
  ctaCopy: String
  desktopImage: FileField
  id: ItemId!
  mobileImage: FileField
  textBlockAlignment: String
  title: String
  updatedAt: DateTime!
}

"""
Block of type Modular Half Width Quad Block (modular_half_width_quad_block)
"""
type ModularHalfWidthQuadBlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy1: String
  copy2: String
  copy3: String
  copy4: String
  createdAt: DateTime!
  ctaCopy1: String
  ctaCopy2: String
  ctaCopy3: String
  ctaCopy4: String
  ctaRoute: String
  ctaRoute1: String
  ctaRoute2: String
  ctaRoute3: String
  ctaRoute4: String
  desktopImage: FileField
  id: ItemId!
  image1: FileField
  image2: FileField
  image3: FileField
  image4: FileField
  imageAlignment: String
  mobileImage: FileField
  title1: String
  title2: String
  title3: String
  title4: String
  updatedAt: DateTime!
}

"""Block of type Modular Hero Banner Block (modular_hero_banner_block)"""
type ModularHeroBannerBlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  additionalClass: String
  createdAt: DateTime!
  ctaButtonType: String
  ctaButtonType2: String
  ctaCopy: String
  ctaCopy2: String
  ctaRoute: String
  ctaRoute2: String
  darksideButtons: [DarksideButtonRecord!]!
  desktopCopy: String
  desktopImage: FileField
  headingAdditionalClass: String
  headingType: String
  id: ItemId!
  isTextBlockWide: BooleanType
  mobileCopy: String
  mobileImage: FileField
  textBlockAlignment: String
  textColor: String
  title: String
  updatedAt: DateTime!
}

"""
Block of type Modular Horizontal Line Block (modular_horizontal_line_block)
"""
type ModularHorizontalLineBlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  color: ColorField
  createdAt: DateTime!
  id: ItemId!
  updatedAt: DateTime!
}

"""
Block of type Modular Instagram Reel Block (modular_instagram_reel_block)
"""
type ModularInstagramReelBlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  blocks: [SocialMediaContentRecord!]!
  createdAt: DateTime!
  headingAdditionalClass: String
  headingType: String
  id: ItemId!
  subtitle: String
  title: String
  updatedAt: DateTime!
}

type ModularInstagramReelBlockRecordListListNonNullMultiLocaleField {
  locale: SiteLocale
  value: [ModularInstagramReelBlockRecord!]!
}

"""Block of type Modular Leo Block (modular_leo_block)"""
type ModularLeoBlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy: String
  createdAt: DateTime!
  id: ItemId!
  image: FileField
  title: String
  updatedAt: DateTime!
}

"""Block of type Modular List Title Block (modular_list_title_block)"""
type ModularListTitleBlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  additionalClass: String
  createdAt: DateTime!
  id: ItemId!
  linkCopy: String
  linkRoute: String
  showHorizontalLine: BooleanType
  title: String
  updatedAt: DateTime!
}

"""Block of type Modular Logo Banner Block (modular_logo_banner_block)"""
type ModularLogoBannerBlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  additionalClass: String
  createdAt: DateTime!
  desktopImage: FileField
  desktopLogo: FileField
  id: ItemId!
  mobileImage: FileField
  mobileLogo: FileField
  updatedAt: DateTime!
}

"""Block of type Modular Mini Banner Block (modular_mini_banner_block)"""
type ModularMiniBannerBlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  additionalClass: String
  copy: String
  copyTerms: String
  createdAt: DateTime!
  ctaRoute: String
  desktopImage: FileField
  id: ItemId!
  mobileImage: FileField
  supportedCountries: [CountryRecord!]!
  textColor: ColorField
  title: String
  updatedAt: DateTime!
}

"""
Block of type Modular Product Icon List Item (modular_product_icon_list_item)
"""
type ModularProductIconListItemRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  additionalInfo: AdditionalInfoRecord
  copy: String
  createdAt: DateTime!
  ctaCopy: String
  ctaRoute: String
  icon: FileField
  id: ItemId!
  supportedCountries: [CountryRecord!]!
  updatedAt: DateTime!
}

"""Block of type Modular Product Option (modular_product_option)"""
type ModularProductOptionRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  label: String
  option: String
  optionMapper: HumanNamesMapperRecord
  updatedAt: DateTime!
}

type ModularProductOptionRecordListListNonNullMultiLocaleField {
  locale: SiteLocale
  value: [ModularProductOptionRecord!]!
}

"""
Block of type Modular Product Slider Block (modular_product_slider_block)
"""
type ModularProductSliderBlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  productListItems: [ProductListItemRecord!]!
  title: String
  updatedAt: DateTime!
}

union ModularProductSuggestionQuadBlockModelConfiguration1Field = ConfigurationRecord | OmegaProductRecord

union ModularProductSuggestionQuadBlockModelConfiguration2Field = ConfigurationRecord | OmegaProductRecord

union ModularProductSuggestionQuadBlockModelConfiguration3Field = ConfigurationRecord | OmegaProductRecord

union ModularProductSuggestionQuadBlockModelConfiguration4Field = ConfigurationRecord | OmegaProductRecord

union ModularProductSuggestionQuadBlockModelConfigurationsInOrderField = ConfigurationRecord | ConfiguredProductOptionRecord | OmegaProductRecord

"""
Block of type Modular Product Suggestion Quad Block (modular_product_suggestion_quad_block)
"""
type ModularProductSuggestionQuadBlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  aboveCopy: String
  configuration1: ModularProductSuggestionQuadBlockModelConfiguration1Field
  configuration2: ModularProductSuggestionQuadBlockModelConfiguration2Field
  configuration3: ModularProductSuggestionQuadBlockModelConfiguration3Field
  configuration4: ModularProductSuggestionQuadBlockModelConfiguration4Field
  configurationsInOrder: [ModularProductSuggestionQuadBlockModelConfigurationsInOrderField!]!
  createdAt: DateTime!
  halfWidthDesktopImage: FileField
  halfWidthImageAlignment: String
  halfWidthMobileImage: FileField
  id: ItemId!
  isHalfWidth: BooleanType
  productsPerRow: String
  title1: String
  title2: String
  title3: String
  title4: String
  updatedAt: DateTime!
}

type ModularProductSuggestionQuadBlockRecordListListNonNullMultiLocaleField {
  locale: SiteLocale
  value: [ModularProductSuggestionQuadBlockRecord!]!
}

"""Block of type Modular Quad Block (modular_quad_block)"""
type ModularQuadBlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  aboveCopy: String
  belowCopy: String
  copy1: String
  copy2: String
  copy3: String
  copy4: String
  createdAt: DateTime!
  ctaCopy1: String
  ctaCopy2: String
  ctaCopy3: String
  ctaCopy4: String
  ctaRoute1: String
  ctaRoute2: String
  ctaRoute3: String
  ctaRoute4: String
  id: ItemId!
  image1: FileField
  image2: FileField
  image3: FileField
  image4: FileField
  subtitle: String
  title: String
  title1: String
  title2: String
  title3: String
  title4: String
  updatedAt: DateTime!
}

"""Block of type Modular Quad Grid (modular_quad_grid)"""
type ModularQuadGridRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  ctaButtonText: String
  ctaButtonUrl: String
  darksideButtons: [DarksideButtonRecord!]!
  gridItems: [QuadGridItemRecord!]!
  id: ItemId!
  title: String
  updatedAt: DateTime!
}

"""Block of type ModularQuadLogoBlock (modular_quad_logo_block)"""
type ModularQuadLogoBlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  image1: FileField
  image2: FileField
  image3: FileField
  image4: FileField
  title: String
  updatedAt: DateTime!
}

"""
Block of type ModularQuadStatisticsBlock (modular_quad_statistics_block)
"""
type ModularQuadStatisticsBlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy1: String
  copy2: String
  copy3: String
  copy4: String
  createdAt: DateTime!
  id: ItemId!
  image1: FileField
  image2: FileField
  image3: FileField
  image4: FileField
  statsTitle1: String
  statsTitle2: String
  statsTitle3: String
  statsTitle4: String
  title1: String
  title2: String
  updatedAt: DateTime!
}

"""Block of type Modular Quote Block (modular_quote_block)"""
type ModularQuoteBlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  attribution: String
  attributionFont: String
  backgroundColor: ColorField
  createdAt: DateTime!
  id: ItemId!
  quotationMarksImage: FileField
  quote: String
  quoteFont: String
  quoteStyle: String
  textColor: ColorField
  updatedAt: DateTime!
}

"""Block of type Modular Radio Field (modular_radio_field)"""
type ModularRadioFieldRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  label: String
  options: JsonField
  updatedAt: DateTime!
}

"""
Block of type Modular Random Banner Block (modular_random_banner_block)
"""
type ModularRandomBannerBlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  additionalClass: String
  blocks: [ModularFullWidthBannerBlockRecord!]!
  createdAt: DateTime!
  id: ItemId!
  updatedAt: DateTime!
}

"""
Block of type Modular Shipping Product Icon List Item (modular_shipping_product_icon_list_item)
"""
type ModularShippingProductIconListItemRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  cutForYouReturnPolicyDetails(
    """Process content as markdown"""
    markdown: Boolean
  ): String
  cutForYouReturnPolicyIcon: FileField
  cutForYouReturnPolicyTitle: String
  cutForYouShippingBusinessDays: IntType
  cutForYouShippingBusinessDaysCountryMap: JsonField
  cutForYouShippingDetails(
    """Process content as markdown"""
    markdown: Boolean
  ): String
  cutForYouShippingText: String
  icon: FileField
  id: ItemId!
  shippingBusinessDays: IntType
  shippingBusinessDaysCountryMap: JsonField
  shippingText: String
  staticText: String
  updatedAt: DateTime!
  useStaticText: BooleanType
}

"""Block of type Modular Showroom Block (modular_showroom_block)"""
type ModularShowroomBlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  data: ShowroomRecord
  id: ItemId!
  image: FileField
  updatedAt: DateTime!
}

"""Block of type Modular Side by Side Block (modular_side_by_side_block)"""
type ModularSideBySideBlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  additionalClass: String
  copy(
    """Process content as markdown"""
    markdown: Boolean
  ): String
  createdAt: DateTime!
  ctaButtonType: String
  ctaCopy: String
  ctaCopy2: String
  ctaRoute: String
  ctaRoute2: String
  headingAdditionalClass: String
  headingType: String
  id: ItemId!
  image: FileField
  imageInline: FileField
  imageMobile: FileField
  supportedCountries: [CountryRecord!]!
  textBlockAlignment: String
  title: String
  updatedAt: DateTime!
}

"""Block of type Modular Single Media Block (modular_single_media_block)"""
type ModularSingleMediaBlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy(
    """Process content as markdown"""
    markdown: Boolean
  ): String
  createdAt: DateTime!
  headingAdditionalClass: String
  headingType: String
  id: ItemId!
  media: FileField
  supportedCountries: [CountryRecord!]!
  title: String
  updatedAt: DateTime!
}

type ModularSingleMediaBlockRecordListListNonNullMultiLocaleField {
  locale: SiteLocale
  value: [ModularSingleMediaBlockRecord!]!
}

"""Block of type Modular Single Video Block (modular_single_video_block)"""
type ModularSingleVideoBlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  additionalClass: String
  createdAt: DateTime!
  id: ItemId!
  mobileVideo: FileField
  shouldAutoplay: BooleanType
  shouldLoop: BooleanType
  showControls: BooleanType
  title: String
  titleColor: ColorField
  titleFont: String
  titleStyle: String
  updatedAt: DateTime!
  video: FileField
}

"""Block of type Modular Single SVG Block (modular_singlesvg_block)"""
type ModularSinglesvgBlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy: String
  createdAt: DateTime!
  ctaCopy: String
  ctaRoute: String
  id: ItemId!
  image: FileField
  title: String
  updatedAt: DateTime!
}

type ModularSinglesvgBlockRecordListListNonNullMultiLocaleField {
  locale: SiteLocale
  value: [ModularSinglesvgBlockRecord!]!
}

"""
Block of type Modular Skinny Hero Banner Block (modular_skinny_hero_banner_block)
"""
type ModularSkinnyHeroBannerBlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  additionalClass: String
  copy: String
  createdAt: DateTime!
  ctaCopy: String
  ctaRoute: String
  desktopImage: FileField
  id: ItemId!
  mobileImage: FileField
  subTitle: String
  textColor: ColorField
  title: String
  updatedAt: DateTime!
}

"""
Block of type Modular Slick Carousel Block (modular_slick_carousel_block)
"""
type ModularSlickCarouselBlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  additionalClass: String
  blocks: [SlickCarouselBlockRecord!]!
  blocksDesktop: [SlickCarouselBlockRecord!]!
  createdAt: DateTime!
  ctaCopy: String
  ctaLink: String
  darksideButtons: [DarksideButtonRecord!]!
  id: ItemId!
  title: String
  updatedAt: DateTime!
}

"""
Block of type Modular Tall Half Width Block - Location Specific CTA (modular_tall_half_width_block_location_cta)
"""
type ModularTallHalfWidthBlockLocationCtaRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  additionalClass: String
  createdAt: DateTime!
  ctaCopy: String
  ctaCopy2: String
  ctaRoute: String
  ctaRoute2: String
  darksideButtons: [DarksideButtonRecord!]!
  desktopCopy(
    """Process content as markdown"""
    markdown: Boolean
  ): String
  desktopImage: FileField
  headingAdditionalClass: String
  headingType: String
  id: ItemId!
  isTextBlockWide: BooleanType
  mobileCopy(
    """Process content as markdown"""
    markdown: Boolean
  ): String
  mobileImage: FileField
  mobileTitle: String
  supportedCountries: [CountryRecord!]!
  textBlockAlignment: String
  textColor: String
  title: String
  titleImage: FileField
  updatedAt: DateTime!
}

"""
Block of type Modular Tall Half Width Block (modular_tall_half_width_block)
"""
type ModularTallHalfWidthBlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  additionalClass: String
  createdAt: DateTime!
  ctaCopy: String
  ctaCopy2: String
  ctaRoute: String
  ctaRoute2: String
  darksideButtons: [DarksideButtonRecord!]!
  desktopCopy(
    """Process content as markdown"""
    markdown: Boolean
  ): String
  desktopImage: FileField
  headingAdditionalClass: String
  headingType: String
  id: ItemId!
  isTextBlockWide: BooleanType
  mobileCopy(
    """Process content as markdown"""
    markdown: Boolean
  ): String
  mobileImage: FileField
  mobileTitle: String
  supportedCountries: [CountryRecord!]!
  textBlockAlignment: String
  textColor: String
  title: String
  titleImage: FileField
  updatedAt: DateTime!
}

"""Block of type Modular Text Input Field (modular_text_input_field)"""
type ModularTextInputFieldRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  label: String
  placeholderCopy: String
  updatedAt: DateTime!
}

"""Block of type Modular Text Only Block (modular_text_only_block)"""
type ModularTextOnlyBlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  additionalClass: String
  copy(
    """Process content as markdown"""
    markdown: Boolean
  ): String
  createdAt: DateTime!
  ctaButtonType2: String
  ctaCopy: String
  ctaCopy2: String
  ctaRoute: String
  ctaRoute2: String
  ctaType: String
  darksideButtons: [DarksideButtonRecord!]!
  desktopCopy: String
  headingAdditionalClass: String
  headingType: String
  id: ItemId!
  mobileCopy: String
  openInNewWindow: BooleanType
  title: String
  titleFont: String
  titleStyle: String
  updatedAt: DateTime!
}

type ModularTextOnlyBlockRecordListListNonNullMultiLocaleField {
  locale: SiteLocale
  value: [ModularTextOnlyBlockRecord!]!
}

"""Block of type Modular Title Only Block (modular_title_only_block)"""
type ModularTitleOnlyBlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  additionalClass: String
  createdAt: DateTime!
  id: ItemId!
  title: String
  updatedAt: DateTime!
}

"""
Block of type Modular Tri Grid with Order Tracking (modular_tri_grid_with_order_tracking)
"""
type ModularTriGridWithOrderTrackingRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  col1ButtonText: String
  col1ButtonUrl: String
  col1Copy(
    """Process content as markdown"""
    markdown: Boolean
  ): String
  col1Icon: String
  col1Title: String
  col2ButtonText: String
  col2ButtonUrl: String
  col2Copy(
    """Process content as markdown"""
    markdown: Boolean
  ): String
  col2Icon: String
  col2Title: String
  col3ButtonText: String
  col3ButtonUrl: String
  col3Copy(
    """Process content as markdown"""
    markdown: Boolean
  ): String
  col3Icon: String
  col3Title: String
  createdAt: DateTime!
  id: ItemId!
  supportedCountries: [CountryRecord!]!
  updatedAt: DateTime!
}

"""Block of type Modular Trio 1x1 Block  (modular_trio1x1_block)"""
type ModularTrio1x1BlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  aboveCopy: String
  belowCopy: String
  copy1: String
  copy2: String
  copy3: String
  createdAt: DateTime!
  ctaCopy1: String
  ctaCopy2: String
  ctaCopy3: String
  ctaRoute1: String
  ctaRoute2: String
  ctaRoute3: String
  headingAdditionalClass: String
  headingType: String
  id: ItemId!
  image1: FileField
  image2: FileField
  image3: FileField
  title1: String
  title2: String
  title3: String
  updatedAt: DateTime!
}

"""Block of type Modular Trio 9x7 Block (modular_trio9x7_block)"""
type ModularTrio9x7BlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  aboveCopy: String
  belowCopy: String
  copy1: String
  copy2: String
  copy3: String
  createdAt: DateTime!
  ctaCopy1: String
  ctaCopy2: String
  ctaCopy3: String
  ctaRoute1: String
  ctaRoute2: String
  ctaRoute3: String
  headingAdditionalClass: String
  headingType: String
  id: ItemId!
  image1: FileField
  image2: FileField
  image3: FileField
  title1: String
  title2: String
  title3: String
  updatedAt: DateTime!
}

"""
Block of type Modular Trio Slide 9x7 Block (modular_trio_slide9x7_block)
"""
type ModularTrioSlide9x7BlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  aboveCopy: String
  belowCopy: String
  createdAt: DateTime!
  ctaCopy1: String
  ctaCopy2: String
  ctaCopy3: String
  ctaRoute1: String
  ctaRoute2: String
  ctaRoute3: String
  headingAdditionalClass: String
  headingType: String
  id: ItemId!
  image1: FileField
  image2: FileField
  image3: FileField
  title1: String
  title2: String
  title3: String
  updatedAt: DateTime!
}

"""
Block of type Modular Trio Staggered 9x7 Block (modular_trio_staggered9x7_block)
"""
type ModularTrioStaggered9x7BlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  aboveCopy: String
  belowCopy: String
  copy1: String
  copy2: String
  copy3: String
  createdAt: DateTime!
  ctaCopy1: String
  ctaCopy2: String
  ctaCopy3: String
  ctaRoute1: String
  ctaRoute2: String
  ctaRoute3: String
  headingAdditionalClass: String
  headingType: String
  id: ItemId!
  image1: FileField
  image2: FileField
  image3: FileField
  title1: String
  title2: String
  title3: String
  updatedAt: DateTime!
}

"""Block of type Modular Trio SVG Block (modular_triosvg_block)"""
type ModularTriosvgBlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  aboveCopy: String
  backgroundColor: ColorField
  belowCopy: String
  copy1: String
  copy2: String
  copy3: String
  createdAt: DateTime!
  ctaCopy1: String
  ctaCopy2: String
  ctaCopy3: String
  ctaRoute1: String
  ctaRoute2: String
  ctaRoute3: String
  headingAdditionalClass: String
  headingType: String
  id: ItemId!
  image1: FileField
  image2: FileField
  image3: FileField
  title1: String
  title2: String
  title3: String
  updatedAt: DateTime!
}

"""Block of type Money Radio Option (money_radio_option)"""
type MoneyRadioOptionRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  endRange: IntType
  id: ItemId!
  key: String
  startRange: IntType
  updatedAt: DateTime!
}

type MoneyRadioOptionRecordListListNonNullMultiLocaleField {
  locale: SiteLocale
  value: [MoneyRadioOptionRecord!]!
}

enum MuxThumbnailFormatType {
  jpg
  png
  gif
}

"""Block of type Navigation Column (navigation_column)"""
type NavigationColumnRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  colKey: String
  columnTitle: String
  createdAt: DateTime!
  id: ItemId!
  isInitiallyCollapsed: BooleanType
  links: [NavigationLinkRecord!]!
  route: String
  updatedAt: DateTime!
}

type NavigationColumnRecordListListNonNullMultiLocaleField {
  locale: SiteLocale
  value: [NavigationColumnRecord!]!
}

input NavigationLinkModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  _locales: LocalesFilter
  copy: StringFilter
  flags: StringFilter
  isBold: BooleanFilter
  linkKey: StringFilter
  nestedLinks: LinksFilter
  route: StringFilter
  supportedCountries: LinksFilter
  OR: [NavigationLinkModelFilter]
  AND: [NavigationLinkModelFilter]
}

enum NavigationLinkModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  copy_ASC
  copy_DESC
  flags_ASC
  flags_DESC
  isBold_ASC
  isBold_DESC
  linkKey_ASC
  linkKey_DESC
  route_ASC
  route_DESC
}

"""Record of type Navigation Link (navigation_link)"""
type NavigationLinkRecord implements RecordInterface {
  _allCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allRouteLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  createdAt: DateTime!
  flags: String
  id: ItemId!
  isBold: BooleanType
  linkKey: String
  nestedLinks: [NavigationLinkRecord!]!
  route(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  supportedCountries: [CountryRecord!]!
  updatedAt: DateTime!
}

type NavigationLinkRecordListListNonNullMultiLocaleField {
  locale: SiteLocale
  value: [NavigationLinkRecord!]!
}

input NavigationModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  key: StringFilter
  route: StringFilter
  title: StringFilter
  OR: [NavigationModelFilter]
  AND: [NavigationModelFilter]
}

enum NavigationModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  key_ASC
  key_DESC
  route_ASC
  route_DESC
  title_ASC
  title_DESC
}

"""Record of type Navigation (navigation)"""
type NavigationRecord implements RecordInterface {
  _allColumnsLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [NavigationColumnRecordListListNonNullMultiLocaleField!]
  _allTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  columns(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [NavigationColumnRecord!]!
  createdAt: DateTime!
  id: ItemId!
  key: String
  route: String
  title(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  updatedAt: DateTime!
}

type NavigationRecordListListNonNullMultiLocaleField {
  locale: SiteLocale
  value: [NavigationRecord!]!
}

input OmegaAssetStackModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  key: StringFilter
  media: GalleryFilter
  OR: [OmegaAssetStackModelFilter]
  AND: [OmegaAssetStackModelFilter]
}

enum OmegaAssetStackModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  key_ASC
  key_DESC
}

"""Record of type Omega Asset Stack (omega_asset_stack)"""
type OmegaAssetStackRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  key: String
  media: [FileField!]!
  updatedAt: DateTime!
}

union OmegaProductModelBelowBannerBlocksField = ModularAccordionBlockRecord | ModularCarouselBlockRecord | ModularCarouselHoverBlockRecord | ModularCelebrityCarouselBlockRecord | ModularCelebrityReelBlockRecord | ModularDuoBlockRecord | ModularEmailSignupBlockRecord | ModularFullWidthBannerBlockRecord | ModularGridCarouselBlockRecord | ModularHalfWidthQuadBlockRecord | ModularInstagramReelBlockRecord | ModularMiniBannerBlockRecord | ModularProductSliderBlockRecord | ModularProductSuggestionQuadBlockRecord | ModularQuadBlockRecord | ModularQuadGridRecord | ModularShowroomBlockRecord | ModularSideBySideBlockRecord | ModularSingleVideoBlockRecord | ModularTallHalfWidthBlockRecord | ModularTextOnlyBlockRecord | ModularTrio9x7BlockRecord | ModularTrioSlide9x7BlockRecord | ModularTrioStaggered9x7BlockRecord | SocialMediaSectionRecord

type OmegaProductModelBelowBannerBlocksFieldListListNonNullMultiLocaleField {
  locale: SiteLocale
  value: [OmegaProductModelBelowBannerBlocksField!]!
}

union OmegaProductModelCollectionField = EngagementRingProductRecord | WeddingBandProductRecord

input OmegaProductModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  assetStack: GalleryFilter
  bandWidthOverride: StringFilter
  caratWeightOverride: StringFilter
  clarity: StringFilter
  collection: LinkFilter
  color: StringFilter
  countrySpecificPrices: JsonFilter
  cut: StringFilter
  descriptionOverride: TextFilter
  diamondDescriptionOverride: TextFilter
  dimensions: StringFilter
  metalWeightOverride: StringFilter
  origin: StringFilter
  paveCaratWeightOverride: StringFilter
  pdpSubTitle: StringFilter
  plpImage: FileFilter
  plpImageHover: FileFilter
  plpTitle: StringFilter
  productIconList: LinkFilter
  productSuggestionQuadBlock: LinkFilter
  shape: StringFilter
  shopifyProductHandle: StringFilter
  shownWithCtw: StringFilter
  OR: [OmegaProductModelFilter]
  AND: [OmegaProductModelFilter]
}

enum OmegaProductModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  bandWidthOverride_ASC
  bandWidthOverride_DESC
  caratWeightOverride_ASC
  caratWeightOverride_DESC
  clarity_ASC
  clarity_DESC
  color_ASC
  color_DESC
  cut_ASC
  cut_DESC
  dimensions_ASC
  dimensions_DESC
  metalWeightOverride_ASC
  metalWeightOverride_DESC
  origin_ASC
  origin_DESC
  paveCaratWeightOverride_ASC
  paveCaratWeightOverride_DESC
  pdpSubTitle_ASC
  pdpSubTitle_DESC
  plpTitle_ASC
  plpTitle_DESC
  shape_ASC
  shape_DESC
  shopifyProductHandle_ASC
  shopifyProductHandle_DESC
  shownWithCtw_ASC
  shownWithCtw_DESC
}

"""Record of type Product (omega_product)"""
type OmegaProductRecord implements RecordInterface {
  _allBandWidthOverrideLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allBelowBannerBlocksLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [OmegaProductModelBelowBannerBlocksFieldListListNonNullMultiLocaleField!]
  _allClarityLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allColorLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allCutLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDescriptionOverrideLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allDiamondDescriptionOverrideLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allDimensionsLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allMetalWeightOverrideLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allOriginLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allPaveCaratWeightOverrideLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allPdpSubTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allPlpTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allShapeLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allShownWithCtwLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  assetStack: [FileField!]!
  bandWidthOverride(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  belowBannerBlocks(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [OmegaProductModelBelowBannerBlocksField!]!
  caratWeightOverride: String
  clarity(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  collection: OmegaProductModelCollectionField
  color(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  countrySpecificPrices: JsonField
  createdAt: DateTime!
  cut(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  descriptionOverride(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  diamondDescriptionOverride(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  dimensions(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  id: ItemId!
  metalWeightOverride(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  origin(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  paveCaratWeightOverride(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  pdpSubTitle(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  plpImage: FileField
  plpImageHover: FileField
  plpTitle(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  productIconList: ProductIconListRecord
  productSuggestionQuadBlock: ProductSuggestionQuadBlockRecord
  shape(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  shopifyProductHandle: String
  shownWithCtw(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  updatedAt: DateTime!
}

"""Block of type Options Header (options_header)"""
type OptionsHeaderRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  label: String
  name: String
  updatedAt: DateTime!
}

type OptionsHeaderRecordListListNonNullMultiLocaleField {
  locale: SiteLocale
  value: [OptionsHeaderRecord!]!
}

"""Specifies how to filter by image orientation"""
input OrientationFilter {
  """Search uploads with the specified orientation"""
  eq: UploadOrientation

  """Exclude uploads with the specified orientation"""
  neq: UploadOrientation
}

"""Block of type Origin Label (origin_label)"""
type OriginLabelRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy: String
  createdAt: DateTime!
  id: ItemId!
  specName: String
  updatedAt: DateTime!
}

union OurDiamondModelContentField = ModularGridCarouselBlockRecord | ModularHalfWidthBannerBlockRecord | ModularHeroBannerBlockRecord | ModularSingleVideoBlockRecord | ModularSinglesvgBlockRecord | ModularTextOnlyBlockRecord | ModularTrio1x1BlockRecord | ModularTrio9x7BlockRecord | ModularTriosvgBlockRecord

type OurDiamondModelContentFieldListListNonNullMultiLocaleField {
  locale: SiteLocale
  value: [OurDiamondModelContentField!]!
}

input OurDiamondModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  seo: LinkFilter
  OR: [OurDiamondModelFilter]
  AND: [OurDiamondModelFilter]
}

enum OurDiamondModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
}

"""Record of type Our Diamond (our_diamond)"""
type OurDiamondRecord implements RecordInterface {
  _allContentLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [OurDiamondModelContentFieldListListNonNullMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  content(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [OurDiamondModelContentField!]!
  createdAt: DateTime!
  id: ItemId!
  seo: PageSeoRecord
  updatedAt: DateTime!
}

"""Block of type Outer Diameter Label (outer_diameter_label)"""
type OuterDiameterLabelRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy: String
  createdAt: DateTime!
  id: ItemId!
  specName: String
  updatedAt: DateTime!
}

input PageSeoModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  addNoindexNofollow: BooleanFilter
  seoDescription: TextFilter
  seoTitle: StringFilter
  OR: [PageSeoModelFilter]
  AND: [PageSeoModelFilter]
}

enum PageSeoModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  addNoindexNofollow_ASC
  addNoindexNofollow_DESC
  seoTitle_ASC
  seoTitle_DESC
}

"""Record of type Page SEO (page_seo)"""
type PageSeoRecord implements RecordInterface {
  _allSeoDescriptionLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allSeoTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  addNoindexNofollow: BooleanType
  createdAt: DateTime!
  id: ItemId!
  seoDescription(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  seoTitle(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  updatedAt: DateTime!
}

"""Block of type Pave Carat Weight Label (pave_carat_weight_label)"""
type PaveCaratWeightLabelRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy: String
  createdAt: DateTime!
  id: ItemId!
  specName: String
  updatedAt: DateTime!
}

input PayLaterOptionModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  copy: TextFilter
  embedded: StringFilter
  klarna: StringFilter
  klarnaSupportedCountries: LinksFilter
  payPal: StringFilter
  paypalSupportedCountries: LinksFilter
  title: StringFilter
  OR: [PayLaterOptionModelFilter]
  AND: [PayLaterOptionModelFilter]
}

enum PayLaterOptionModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  embedded_ASC
  embedded_DESC
  klarna_ASC
  klarna_DESC
  payPal_ASC
  payPal_DESC
  title_ASC
  title_DESC
}

"""Record of type Pay Later Option (pay_later_option)"""
type PayLaterOptionRecord implements RecordInterface {
  _allCopyLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allEmbeddedLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  createdAt: DateTime!
  embedded(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  id: ItemId!
  klarna: String
  klarnaSupportedCountries: [CountryRecord!]!
  payPal: String
  paypalSupportedCountries: [CountryRecord!]!
  title(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  updatedAt: DateTime!
}

"""Record of type PayLater (pay_later)"""
type PayLaterRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  data: [PayLaterOptionRecord!]!
  id: ItemId!
  updatedAt: DateTime!
}

"""Block of type PLP Content Block (plp_content_block)"""
type PlpContentBlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy(
    """Process content as markdown"""
    markdown: Boolean
  ): String
  createdAt: DateTime!
  ctaCopy: String
  ctaRoute: String
  desktopImage: FileField
  id: ItemId!
  mobileCopy(
    """Process content as markdown"""
    markdown: Boolean
  ): String
  mobileImage: FileField
  title: String
  updatedAt: DateTime!
}

"""Block of type PLP Filter (plp_filter)"""
type PlpFilterRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  filter1: String
  filter2: String
  id: ItemId!
  label: String
  updatedAt: DateTime!
}

input PlpPromoCardCollectionModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  data: LinksFilter
  title: StringFilter
  OR: [PlpPromoCardCollectionModelFilter]
  AND: [PlpPromoCardCollectionModelFilter]
}

enum PlpPromoCardCollectionModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  title_ASC
  title_DESC
}

"""Record of type PLP Promo Card Collection (plp_promo_card_collection)"""
type PlpPromoCardCollectionRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  data: [PlpPromoCardRecord!]!
  id: ItemId!
  title: String
  updatedAt: DateTime!
}

input PlpPromoCardModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  image: FileFilter
  imageMobile: FileFilter
  link: StringFilter
  openInNewTab: BooleanFilter
  plpPosition: IntegerFilter
  plpPositionMobile: IntegerFilter
  textColor: ColorFilter
  title: StringFilter
  OR: [PlpPromoCardModelFilter]
  AND: [PlpPromoCardModelFilter]
}

enum PlpPromoCardModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  link_ASC
  link_DESC
  openInNewTab_ASC
  openInNewTab_DESC
  plpPosition_ASC
  plpPosition_DESC
  plpPositionMobile_ASC
  plpPositionMobile_DESC
  title_ASC
  title_DESC
}

"""Record of type PLP Promo Card (plp_promo_card)"""
type PlpPromoCardRecord implements RecordInterface {
  _allTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  image: FileField
  imageMobile: FileField
  link: String
  openInNewTab: BooleanType
  plpPosition: IntType
  plpPositionMobile: IntType
  textColor: ColorField
  title(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  updatedAt: DateTime!
}

"""Block of type PLP Sort (plp_sort)"""
type PlpSortRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  label: String
  sort1: String
  sort2: String
  sort3: String
  updatedAt: DateTime!
}

"""Block of type Polish Label (polish_label)"""
type PolishLabelRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy: String
  createdAt: DateTime!
  id: ItemId!
  specName: String
  updatedAt: DateTime!
}

"""Specifies how to filter by position (sorted and tree-like collections)"""
input PositionFilter {
  """
  Filter records with a value that's strictly greater than the one specified
  """
  gt: IntType

  """Filter records with a value that's less than the one specified"""
  lt: IntType

  """
  Filter records with a value that's greater than or equal to the one specified
  """
  gte: IntType

  """
  Filter records with a value that's less or equal than the one specified
  """
  lte: IntType

  """Search for records with an exact match"""
  eq: IntType

  """Exclude records with an exact match"""
  neq: IntType
}

"""Block of type Posts Label (posts_label)"""
type PostsLabelRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy: String
  createdAt: DateTime!
  id: ItemId!
  specName: String
  updatedAt: DateTime!
}

input PricingByCurrencyModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  pricingTitle: StringFilter
  OR: [PricingByCurrencyModelFilter]
  AND: [PricingByCurrencyModelFilter]
}

enum PricingByCurrencyModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  pricingTitle_ASC
  pricingTitle_DESC
}

"""Record of type Pricing By Currency (pricing_by_currency)"""
type PricingByCurrencyRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  prices: [CurrencyPriceRecord!]!
  pricingTitle: String
  updatedAt: DateTime!
}

type PricingByCurrencyRecordMultiLocaleField {
  locale: SiteLocale
  value: PricingByCurrencyRecord
}

input ProductIconListModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  _locales: LocalesFilter
  productType: StringFilter
  OR: [ProductIconListModelFilter]
  AND: [ProductIconListModelFilter]
}

union ProductIconListModelItemsField = ModularProductIconListItemRecord | ModularShippingProductIconListItemRecord

type ProductIconListModelItemsFieldListListNonNullMultiLocaleField {
  locale: SiteLocale
  value: [ProductIconListModelItemsField!]!
}

enum ProductIconListModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  productType_ASC
  productType_DESC
}

"""Record of type Product Icon List  (product_icon_list)"""
type ProductIconListRecord implements RecordInterface {
  _allItemsLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [ProductIconListModelItemsFieldListListNonNullMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  items(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [ProductIconListModelItemsField!]!
  productType: String
  updatedAt: DateTime!
}

input ProductLabelModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  title: StringFilter
  OR: [ProductLabelModelFilter]
  AND: [ProductLabelModelFilter]
}

enum ProductLabelModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  title_ASC
  title_DESC
}

"""Record of type Product Label (product_label)"""
type ProductLabelRecord implements RecordInterface {
  _allTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  title(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  updatedAt: DateTime!
}

union ProductListItemModelConfigurationField = ConfigurationRecord | OmegaProductRecord

input ProductListItemModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  configuration: LinkFilter
  link: StringFilter
  title: StringFilter
  OR: [ProductListItemModelFilter]
  AND: [ProductListItemModelFilter]
}

enum ProductListItemModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  link_ASC
  link_DESC
  title_ASC
  title_DESC
}

"""Record of type Product List Item (product_list_item)"""
type ProductListItemRecord implements RecordInterface {
  _allTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  configuration: ProductListItemModelConfigurationField
  createdAt: DateTime!
  id: ItemId!
  link: String
  title(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  updatedAt: DateTime!
}

"""Block of type Product Option Label (product_option_label)"""
type ProductOptionLabelRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  ctaCopy: String
  id: ItemId!
  key: String
  label: String
  updatedAt: DateTime!
}

type ProductOptionLabelRecordListListNonNullMultiLocaleField {
  locale: SiteLocale
  value: [ProductOptionLabelRecord!]!
}

input ProductShippingAndReturnModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  _locales: LocalesFilter
  copy: TextFilter
  shippingType: StringFilter
  OR: [ProductShippingAndReturnModelFilter]
  AND: [ProductShippingAndReturnModelFilter]
}

enum ProductShippingAndReturnModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  shippingType_ASC
  shippingType_DESC
}

"""
Record of type Product Shipping And Returns (product_shipping_and_return)
"""
type ProductShippingAndReturnRecord implements RecordInterface {
  _allCopyLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  createdAt: DateTime!
  id: ItemId!
  shippingType: String
  updatedAt: DateTime!
}

input ProductSpecLabelCollectionModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  _locales: LocalesFilter
  productType: StringFilter
  OR: [ProductSpecLabelCollectionModelFilter]
  AND: [ProductSpecLabelCollectionModelFilter]
}

union ProductSpecLabelCollectionModelLabelsField = BandDepthLabelRecord | BandHeightLabelRecord | BandWidthLabelRecord | CaratLabelRecord | CertificateLabelRecord | ChainLengthLabelRecord | ChainWidthLabelRecord | CharmLabelRecord | ClarityLabelRecord | ClosureLabelRecord | ColorLabelRecord | CordWidthLabelRecord | CutLabelRecord | CutletLabelRecord | DepthLabelRecord | DescriptionLabelRecord | DiamondClarityLabelRecord | DiamondColorLabelRecord | DiamondCountLabelRecord | DiamondSizeLabelRecord | FluorescenceLabelRecord | GirdleLabelRecord | JacketLengthLabelRecord | MeasurementsLabelRecord | MetalLabelRecord | MetalWeightLabelRecord | OriginLabelRecord | OuterDiameterLabelRecord | PaveCaratWeightLabelRecord | PolishLabelRecord | PostsLabelRecord | RingFaceLabelRecord | RingSizeLabelRecord | SettingHeightLabelRecord | SettingLabelRecord | ShapeLabelRecord | ShippingAndReturnsLabelRecord | ShownWithCenterStoneLabelRecord | SpecificationsLabelRecord | SymmetryLabelRecord | TableLabelRecord

type ProductSpecLabelCollectionModelLabelsFieldListListNonNullMultiLocaleField {
  locale: SiteLocale
  value: [ProductSpecLabelCollectionModelLabelsField!]!
}

enum ProductSpecLabelCollectionModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  productType_ASC
  productType_DESC
}

"""
Record of type Product Spec Label Collection (product_spec_label_collection)
"""
type ProductSpecLabelCollectionRecord implements RecordInterface {
  _allLabelsLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [ProductSpecLabelCollectionModelLabelsFieldListListNonNullMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  labels(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [ProductSpecLabelCollectionModelLabelsField!]!
  productType: String
  updatedAt: DateTime!
}

input ProductSuggestionQuadBlockModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  _locales: LocalesFilter
  name: StringFilter
  OR: [ProductSuggestionQuadBlockModelFilter]
  AND: [ProductSuggestionQuadBlockModelFilter]
}

enum ProductSuggestionQuadBlockModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  name_ASC
  name_DESC
}

"""
Record of type Product Suggestion Quad Block (product_suggestion_quad_block)
"""
type ProductSuggestionQuadBlockRecord implements RecordInterface {
  _allContentLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [ModularProductSuggestionQuadBlockRecordListListNonNullMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  content(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [ModularProductSuggestionQuadBlockRecord!]!
  createdAt: DateTime!
  id: ItemId!
  name: String
  updatedAt: DateTime!
}

input ProductTypeFaqModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  _locales: LocalesFilter
  faqEntries: LinksFilter
  faqTitle: StringFilter
  imagePath: StringFilter
  productType: StringFilter
  OR: [ProductTypeFaqModelFilter]
  AND: [ProductTypeFaqModelFilter]
}

enum ProductTypeFaqModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  faqTitle_ASC
  faqTitle_DESC
  imagePath_ASC
  imagePath_DESC
  productType_ASC
  productType_DESC
}

"""Record of type Product Type Faq (product_type_faq)"""
type ProductTypeFaqRecord implements RecordInterface {
  _allFaqTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  faqEntries: [FaqAccordionContentRecord!]!
  faqTitle(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  id: ItemId!
  imagePath: String
  productType: String
  updatedAt: DateTime!
}

input ProductWaitlistModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  _locales: LocalesFilter
  waitlistCopy: StringFilter
  waitlistCtaCopy: StringFilter
  OR: [ProductWaitlistModelFilter]
  AND: [ProductWaitlistModelFilter]
}

enum ProductWaitlistModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  waitlistCopy_ASC
  waitlistCopy_DESC
  waitlistCtaCopy_ASC
  waitlistCtaCopy_DESC
}

"""Record of type Product Waitlist (product_waitlist)"""
type ProductWaitlistRecord implements RecordInterface {
  _allWaitlistCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allWaitlistCtaCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  updatedAt: DateTime!
  waitlistCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  waitlistCtaCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
}

"""Specifies how to filter by publication datetime"""
input PublishedAtFilter {
  """
  Filter records with a value that's strictly greater than the one specified. Seconds and milliseconds are truncated from the argument.
  """
  gt: DateTime

  """
  Filter records with a value that's less than the one specified. Seconds and milliseconds are truncated from the argument.
  """
  lt: DateTime

  """
  Filter records with a value that's greater than or equal to than the one specified. Seconds and milliseconds are truncated from the argument.
  """
  gte: DateTime

  """
  Filter records with a value that's less or equal than the one specified. Seconds and milliseconds are truncated from the argument.
  """
  lte: DateTime

  """
  Filter records with a value that's within the specified minute range. Seconds and milliseconds are truncated from the argument.
  """
  eq: DateTime

  """
  Filter records with a value that's outside the specified minute range. Seconds and milliseconds are truncated from the argument.
  """
  neq: DateTime

  """
  Filter records with the specified field defined (i.e. with any value) or not
  """
  exists: BooleanType
}

input QuadGridItemModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  itemCaption: TextFilter
  itemImage: FileFilter
  itemTitle: StringFilter
  itemUrl: StringFilter
  OR: [QuadGridItemModelFilter]
  AND: [QuadGridItemModelFilter]
}

enum QuadGridItemModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  itemTitle_ASC
  itemTitle_DESC
  itemUrl_ASC
  itemUrl_DESC
}

"""Record of type Quad Grid Item (quad_grid_item)"""
type QuadGridItemRecord implements RecordInterface {
  _allItemCaptionLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allItemTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allItemUrlLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  itemCaption(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  itemImage: FileField
  itemTitle(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  itemUrl(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  updatedAt: DateTime!
}

"""The query root for this schema"""
type Query {
  """Returns meta information regarding a record collection"""
  _allAccordionItemsMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: AccordionItemModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allAdditionalInfosMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: AdditionalInfoModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allAnnouncementBarInfosMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: AnnouncementBarInfoModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allBlogCategoriesMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: BlogCategoryModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allBlogPostsMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: BlogPostModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allBlogSubcategoriesMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: BlogSubcategoryModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allBreadcrumbsMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: BreadcrumbModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allCarouselHoverBlockItemsMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: CarouselHoverBlockItemModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allCelebrityBlocksMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: CelebrityBlockModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allCelebrityJewelriesMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: CelebrityJewelryModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allConfigurationsMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: ConfigurationModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allConfiguredProductOptionsMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: ConfiguredProductOptionModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allCountriesMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: CountryModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allCreativeBlocksMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: CreativeBlockModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allCustomProductsMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: CustomProductModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allDiamondContentBlocksMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: DiamondContentBlockModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allDiamondShapeDescriptionsMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: DiamondShapeDescriptionModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allDiamondShapeSpecsMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: DiamondShapeSpecModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allEngagementRingProductsMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: EngagementRingProductModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allFaqAccordionContentsMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: FaqAccordionContentModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allFullWidthBannerBlocksMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: FullWidthBannerBlockModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allGridCarouselBlockItemsMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: GridCarouselBlockItemModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allHalfWidthBannerBlocksMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: HalfWidthBannerBlockModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allHumanNamesMappersMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: HumanNamesMapperModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allImage1x1sMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: Image1x1ModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allImage9x7sMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: Image9x7ModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allInstagramReelBlocksMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: InstagramReelBlockModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allJeweleryProductSubCategoriesMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: JeweleryProductSubCategoryModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allJewelryOmegaProductsMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: JewelryOmegaProductModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allJewelryPdpCtasMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: JewelryPdpCtaModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allJewelryProductsMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: JewelryProductModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allJewelrySubcategoriesMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: JewelrySubcategoryModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allListPagesMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: ListPageModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allListpageHeroBannersMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: ListpageHeroBannerModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allNavigationLinksMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: NavigationLinkModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allNavigationsMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: NavigationModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allOmegaAssetStacksMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: OmegaAssetStackModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allOmegaProductsMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: OmegaProductModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allOurDiamondsMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: OurDiamondModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allPageSeosMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: PageSeoModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allPayLaterOptionsMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: PayLaterOptionModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allPlpPromoCardCollectionsMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: PlpPromoCardCollectionModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allPlpPromoCardsMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: PlpPromoCardModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allPricingByCurrenciesMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: PricingByCurrencyModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allProductIconListsMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: ProductIconListModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allProductLabelsMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: ProductLabelModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allProductListItemsMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: ProductListItemModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allProductShippingAndReturnsMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: ProductShippingAndReturnModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allProductSpecLabelCollectionsMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: ProductSpecLabelCollectionModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allProductSuggestionQuadBlocksMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: ProductSuggestionQuadBlockModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allProductTypeFaqsMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: ProductTypeFaqModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allProductWaitlistsMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: ProductWaitlistModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allQuadGridItemsMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: QuadGridItemModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allQuoteBlocksMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: QuoteBlockModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allShowroomLinksMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: ShowroomLinkModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allShowroomsMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: ShowroomModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allSingleMediaBlocksMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: SingleMediaBlockModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allSlickCarouselBlocksMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: SlickCarouselBlockModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allSocialMediaContentsMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: SocialMediaContentModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allStandardPagesMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: StandardPageModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allSvgAssetsMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: SvgAssetModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allTextOnlyBlocksMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: TextOnlyBlockModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allTrioBlocksMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: TrioBlockModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding an assets collection"""
  _allUploadsMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: UploadFilter
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allVatsMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: VatModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allVideoBlocksMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: VideoBlockModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allWeddingBandProductsMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: WeddingBandProductModelFilter

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CollectionMetadata!

  """Returns the single instance record"""
  _site(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): Site!

  """Returns a specific record"""
  accordionItem(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: AccordionItemModelFilter
    orderBy: [AccordionItemModelOrderBy] = [_updatedAt_DESC]
  ): AccordionItemRecord

  """Returns the single instance record"""
  accountReminderForm(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): AccountReminderFormRecord

  """Returns the single instance record"""
  accountRemindersList(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): AccountRemindersListRecord

  """Returns the single instance record"""
  accountSubscriptionForm(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): AccountSubscriptionFormRecord

  """Returns the single instance record"""
  accountSubscriptionsList(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): AccountSubscriptionsListRecord

  """Returns a specific record"""
  additionalInfo(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: AdditionalInfoModelFilter
    orderBy: [AdditionalInfoModelOrderBy] = [_updatedAt_DESC]
  ): AdditionalInfoRecord

  """Returns a collection of records"""
  allAccordionItems(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: AccordionItemModelFilter
    orderBy: [AccordionItemModelOrderBy] = [_updatedAt_DESC]
  ): [AccordionItemRecord!]!

  """Returns a collection of records"""
  allAdditionalInfos(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: AdditionalInfoModelFilter
    orderBy: [AdditionalInfoModelOrderBy] = [_updatedAt_DESC]
  ): [AdditionalInfoRecord!]!

  """Returns a collection of records"""
  allAnnouncementBarInfos(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: AnnouncementBarInfoModelFilter
    orderBy: [AnnouncementBarInfoModelOrderBy] = [_updatedAt_DESC]
  ): [AnnouncementBarInfoRecord!]!

  """Returns a collection of records"""
  allBlogCategories(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: BlogCategoryModelFilter
    orderBy: [BlogCategoryModelOrderBy] = [_updatedAt_DESC]
  ): [BlogCategoryRecord!]!

  """Returns a collection of records"""
  allBlogPosts(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: BlogPostModelFilter
    orderBy: [BlogPostModelOrderBy] = [_updatedAt_DESC]
  ): [BlogPostRecord!]!

  """Returns a collection of records"""
  allBlogSubcategories(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: BlogSubcategoryModelFilter
    orderBy: [BlogSubcategoryModelOrderBy] = [_updatedAt_DESC]
  ): [BlogSubcategoryRecord!]!

  """Returns a collection of records"""
  allBreadcrumbs(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: BreadcrumbModelFilter
    orderBy: [BreadcrumbModelOrderBy] = [_updatedAt_DESC]
  ): [BreadcrumbRecord!]!

  """Returns a collection of records"""
  allCarouselHoverBlockItems(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: CarouselHoverBlockItemModelFilter
    orderBy: [CarouselHoverBlockItemModelOrderBy] = [_updatedAt_DESC]
  ): [CarouselHoverBlockItemRecord!]!

  """Returns a collection of records"""
  allCelebrityBlocks(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: CelebrityBlockModelFilter
    orderBy: [CelebrityBlockModelOrderBy] = [_updatedAt_DESC]
  ): [CelebrityBlockRecord!]!

  """Returns a collection of records"""
  allCelebrityJewelries(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: CelebrityJewelryModelFilter
    orderBy: [CelebrityJewelryModelOrderBy] = [_updatedAt_DESC]
  ): [CelebrityJewelryRecord!]!

  """Returns a collection of records"""
  allConfigurations(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: ConfigurationModelFilter
    orderBy: [ConfigurationModelOrderBy] = [_updatedAt_DESC]
  ): [ConfigurationRecord!]!

  """Returns a collection of records"""
  allConfiguredProductOptions(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: ConfiguredProductOptionModelFilter
    orderBy: [ConfiguredProductOptionModelOrderBy] = [_updatedAt_DESC]
  ): [ConfiguredProductOptionRecord!]!

  """Returns a collection of records"""
  allCountries(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: CountryModelFilter
    orderBy: [CountryModelOrderBy] = [_updatedAt_DESC]
  ): [CountryRecord!]!

  """Returns a collection of records"""
  allCreativeBlocks(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: CreativeBlockModelFilter
    orderBy: [CreativeBlockModelOrderBy] = [_updatedAt_DESC]
  ): [CreativeBlockRecord!]!

  """Returns a collection of records"""
  allCustomProducts(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: CustomProductModelFilter
    orderBy: [CustomProductModelOrderBy] = [_updatedAt_DESC]
  ): [CustomProductRecord!]!

  """Returns a collection of records"""
  allDiamondContentBlocks(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: DiamondContentBlockModelFilter
    orderBy: [DiamondContentBlockModelOrderBy] = [_updatedAt_DESC]
  ): [DiamondContentBlockRecord!]!

  """Returns a collection of records"""
  allDiamondShapeDescriptions(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: DiamondShapeDescriptionModelFilter
    orderBy: [DiamondShapeDescriptionModelOrderBy] = [_updatedAt_DESC]
  ): [DiamondShapeDescriptionRecord!]!

  """Returns a collection of records"""
  allDiamondShapeSpecs(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: DiamondShapeSpecModelFilter
    orderBy: [DiamondShapeSpecModelOrderBy] = [_updatedAt_DESC]
  ): [DiamondShapeSpecRecord!]!

  """Returns a collection of records"""
  allEngagementRingProducts(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: EngagementRingProductModelFilter
    orderBy: [EngagementRingProductModelOrderBy] = [_updatedAt_DESC]
  ): [EngagementRingProductRecord!]!

  """Returns a collection of records"""
  allFaqAccordionContents(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: FaqAccordionContentModelFilter
    orderBy: [FaqAccordionContentModelOrderBy] = [_updatedAt_DESC]
  ): [FaqAccordionContentRecord!]!

  """Returns a collection of records"""
  allFullWidthBannerBlocks(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: FullWidthBannerBlockModelFilter
    orderBy: [FullWidthBannerBlockModelOrderBy] = [_updatedAt_DESC]
  ): [FullWidthBannerBlockRecord!]!

  """Returns a collection of records"""
  allGridCarouselBlockItems(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: GridCarouselBlockItemModelFilter
    orderBy: [GridCarouselBlockItemModelOrderBy] = [_updatedAt_DESC]
  ): [GridCarouselBlockItemRecord!]!

  """Returns a collection of records"""
  allHalfWidthBannerBlocks(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: HalfWidthBannerBlockModelFilter
    orderBy: [HalfWidthBannerBlockModelOrderBy] = [_updatedAt_DESC]
  ): [HalfWidthBannerBlockRecord!]!

  """Returns a collection of records"""
  allHumanNamesMappers(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: HumanNamesMapperModelFilter
    orderBy: [HumanNamesMapperModelOrderBy] = [_updatedAt_DESC]
  ): [HumanNamesMapperRecord!]!

  """Returns a collection of records"""
  allImage1x1s(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: Image1x1ModelFilter
    orderBy: [Image1x1ModelOrderBy] = [_updatedAt_DESC]
  ): [Image1x1Record!]!

  """Returns a collection of records"""
  allImage9x7s(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: Image9x7ModelFilter
    orderBy: [Image9x7ModelOrderBy] = [_updatedAt_DESC]
  ): [Image9x7Record!]!

  """Returns a collection of records"""
  allInstagramReelBlocks(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: InstagramReelBlockModelFilter
    orderBy: [InstagramReelBlockModelOrderBy] = [_updatedAt_DESC]
  ): [InstagramReelBlockRecord!]!

  """Returns a collection of records"""
  allJeweleryProductSubCategories(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: JeweleryProductSubCategoryModelFilter
    orderBy: [JeweleryProductSubCategoryModelOrderBy] = [_updatedAt_DESC]
  ): [JeweleryProductSubCategoryRecord!]!

  """Returns a collection of records"""
  allJewelryOmegaProducts(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: JewelryOmegaProductModelFilter
    orderBy: [JewelryOmegaProductModelOrderBy] = [_updatedAt_DESC]
  ): [JewelryOmegaProductRecord!]!

  """Returns a collection of records"""
  allJewelryPdpCtas(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: JewelryPdpCtaModelFilter
    orderBy: [JewelryPdpCtaModelOrderBy] = [_updatedAt_DESC]
  ): [JewelryPdpCtaRecord!]!

  """Returns a collection of records"""
  allJewelryProducts(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: JewelryProductModelFilter
    orderBy: [JewelryProductModelOrderBy] = [_updatedAt_DESC]
  ): [JewelryProductRecord!]!

  """Returns a collection of records"""
  allJewelrySubcategories(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: JewelrySubcategoryModelFilter
    orderBy: [JewelrySubcategoryModelOrderBy] = [_updatedAt_DESC]
  ): [JewelrySubcategoryRecord!]!

  """Returns a collection of records"""
  allListPages(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: ListPageModelFilter
    orderBy: [ListPageModelOrderBy] = [_updatedAt_DESC]
  ): [ListPageRecord!]!

  """Returns a collection of records"""
  allListpageHeroBanners(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: ListpageHeroBannerModelFilter
    orderBy: [ListpageHeroBannerModelOrderBy] = [_updatedAt_DESC]
  ): [ListpageHeroBannerRecord!]!

  """Returns a collection of records"""
  allNavigationLinks(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: NavigationLinkModelFilter
    orderBy: [NavigationLinkModelOrderBy] = [_updatedAt_DESC]
  ): [NavigationLinkRecord!]!

  """Returns a collection of records"""
  allNavigations(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: NavigationModelFilter
    orderBy: [NavigationModelOrderBy] = [_updatedAt_DESC]
  ): [NavigationRecord!]!

  """Returns a collection of records"""
  allOmegaAssetStacks(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: OmegaAssetStackModelFilter
    orderBy: [OmegaAssetStackModelOrderBy] = [_updatedAt_DESC]
  ): [OmegaAssetStackRecord!]!

  """Returns a collection of records"""
  allOmegaProducts(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: OmegaProductModelFilter
    orderBy: [OmegaProductModelOrderBy] = [_updatedAt_DESC]
  ): [OmegaProductRecord!]!

  """Returns a collection of records"""
  allOurDiamonds(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: OurDiamondModelFilter
    orderBy: [OurDiamondModelOrderBy] = [_updatedAt_DESC]
  ): [OurDiamondRecord!]!

  """Returns a collection of records"""
  allPageSeos(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: PageSeoModelFilter
    orderBy: [PageSeoModelOrderBy] = [_updatedAt_DESC]
  ): [PageSeoRecord!]!

  """Returns a collection of records"""
  allPayLaterOptions(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: PayLaterOptionModelFilter
    orderBy: [PayLaterOptionModelOrderBy] = [_updatedAt_DESC]
  ): [PayLaterOptionRecord!]!

  """Returns a collection of records"""
  allPlpPromoCardCollections(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: PlpPromoCardCollectionModelFilter
    orderBy: [PlpPromoCardCollectionModelOrderBy] = [_updatedAt_DESC]
  ): [PlpPromoCardCollectionRecord!]!

  """Returns a collection of records"""
  allPlpPromoCards(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: PlpPromoCardModelFilter
    orderBy: [PlpPromoCardModelOrderBy] = [_updatedAt_DESC]
  ): [PlpPromoCardRecord!]!

  """Returns a collection of records"""
  allPricingByCurrencies(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: PricingByCurrencyModelFilter
    orderBy: [PricingByCurrencyModelOrderBy] = [_updatedAt_DESC]
  ): [PricingByCurrencyRecord!]!

  """Returns a collection of records"""
  allProductIconLists(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: ProductIconListModelFilter
    orderBy: [ProductIconListModelOrderBy] = [_updatedAt_DESC]
  ): [ProductIconListRecord!]!

  """Returns a collection of records"""
  allProductLabels(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: ProductLabelModelFilter
    orderBy: [ProductLabelModelOrderBy] = [_updatedAt_DESC]
  ): [ProductLabelRecord!]!

  """Returns a collection of records"""
  allProductListItems(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: ProductListItemModelFilter
    orderBy: [ProductListItemModelOrderBy] = [_updatedAt_DESC]
  ): [ProductListItemRecord!]!

  """Returns a collection of records"""
  allProductShippingAndReturns(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: ProductShippingAndReturnModelFilter
    orderBy: [ProductShippingAndReturnModelOrderBy] = [_updatedAt_DESC]
  ): [ProductShippingAndReturnRecord!]!

  """Returns a collection of records"""
  allProductSpecLabelCollections(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: ProductSpecLabelCollectionModelFilter
    orderBy: [ProductSpecLabelCollectionModelOrderBy] = [_updatedAt_DESC]
  ): [ProductSpecLabelCollectionRecord!]!

  """Returns a collection of records"""
  allProductSuggestionQuadBlocks(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: ProductSuggestionQuadBlockModelFilter
    orderBy: [ProductSuggestionQuadBlockModelOrderBy] = [_updatedAt_DESC]
  ): [ProductSuggestionQuadBlockRecord!]!

  """Returns a collection of records"""
  allProductTypeFaqs(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: ProductTypeFaqModelFilter
    orderBy: [ProductTypeFaqModelOrderBy] = [_updatedAt_DESC]
  ): [ProductTypeFaqRecord!]!

  """Returns a collection of records"""
  allProductWaitlists(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: ProductWaitlistModelFilter
    orderBy: [ProductWaitlistModelOrderBy] = [_updatedAt_DESC]
  ): [ProductWaitlistRecord!]!

  """Returns a collection of records"""
  allQuadGridItems(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: QuadGridItemModelFilter
    orderBy: [QuadGridItemModelOrderBy] = [_updatedAt_DESC]
  ): [QuadGridItemRecord!]!

  """Returns a collection of records"""
  allQuoteBlocks(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: QuoteBlockModelFilter
    orderBy: [QuoteBlockModelOrderBy] = [_updatedAt_DESC]
  ): [QuoteBlockRecord!]!

  """Returns a collection of records"""
  allShowroomLinks(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: ShowroomLinkModelFilter
    orderBy: [ShowroomLinkModelOrderBy] = [_updatedAt_DESC]
  ): [ShowroomLinkRecord!]!

  """Returns a collection of records"""
  allShowrooms(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: ShowroomModelFilter
    orderBy: [ShowroomModelOrderBy] = [_updatedAt_DESC]
  ): [ShowroomRecord!]!

  """Returns a collection of records"""
  allSingleMediaBlocks(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: SingleMediaBlockModelFilter
    orderBy: [SingleMediaBlockModelOrderBy] = [_updatedAt_DESC]
  ): [SingleMediaBlockRecord!]!

  """Returns a collection of records"""
  allSlickCarouselBlocks(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: SlickCarouselBlockModelFilter
    orderBy: [SlickCarouselBlockModelOrderBy] = [_updatedAt_DESC]
  ): [SlickCarouselBlockRecord!]!

  """Returns a collection of records"""
  allSocialMediaContents(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: SocialMediaContentModelFilter
    orderBy: [SocialMediaContentModelOrderBy] = [_updatedAt_DESC]
  ): [SocialMediaContentRecord!]!

  """Returns a collection of records"""
  allStandardPages(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: StandardPageModelFilter
    orderBy: [StandardPageModelOrderBy] = [position_ASC]
  ): [StandardPageRecord!]!

  """Returns a collection of records"""
  allSvgAssets(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: SvgAssetModelFilter
    orderBy: [SvgAssetModelOrderBy] = [_updatedAt_DESC]
  ): [SvgAssetRecord!]!

  """Returns a collection of records"""
  allTextOnlyBlocks(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: TextOnlyBlockModelFilter
    orderBy: [TextOnlyBlockModelOrderBy] = [_updatedAt_DESC]
  ): [TextOnlyBlockRecord!]!

  """Returns a collection of records"""
  allTrioBlocks(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: TrioBlockModelFilter
    orderBy: [TrioBlockModelOrderBy] = [_updatedAt_DESC]
  ): [TrioBlockRecord!]!

  """Returns a collection of assets"""
  allUploads(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: UploadFilter
    orderBy: [UploadOrderBy] = [_createdAt_DESC]
  ): [FileField!]!

  """Returns a collection of records"""
  allVats(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: VatModelFilter
    orderBy: [VatModelOrderBy] = [_updatedAt_DESC]
  ): [VatRecord!]!

  """Returns a collection of records"""
  allVideoBlocks(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: VideoBlockModelFilter
    orderBy: [VideoBlockModelOrderBy] = [_updatedAt_DESC]
  ): [VideoBlockRecord!]!

  """Returns a collection of records"""
  allWeddingBandProducts(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: WeddingBandProductModelFilter
    orderBy: [WeddingBandProductModelOrderBy] = [_updatedAt_DESC]
  ): [WeddingBandProductRecord!]!

  """Returns the single instance record"""
  announcementBar(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): AnnouncementBarRecord

  """Returns a specific record"""
  announcementBarInfo(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: AnnouncementBarInfoModelFilter
    orderBy: [AnnouncementBarInfoModelOrderBy] = [_updatedAt_DESC]
  ): AnnouncementBarInfoRecord

  """Returns the single instance record"""
  annualGiftForm(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): AnnualGiftFormRecord

  """Returns the single instance record"""
  annualGifting(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): AnnualGiftingRecord

  """Returns a specific record"""
  blogCategory(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: BlogCategoryModelFilter
    orderBy: [BlogCategoryModelOrderBy] = [_updatedAt_DESC]
  ): BlogCategoryRecord

  """Returns the single instance record"""
  blogConfiguration(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): BlogConfigurationRecord

  """Returns the single instance record"""
  blogHeader(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): BlogHeaderRecord

  """Returns a specific record"""
  blogPost(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: BlogPostModelFilter
    orderBy: [BlogPostModelOrderBy] = [_updatedAt_DESC]
  ): BlogPostRecord

  """Returns a specific record"""
  blogSubcategory(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: BlogSubcategoryModelFilter
    orderBy: [BlogSubcategoryModelOrderBy] = [_updatedAt_DESC]
  ): BlogSubcategoryRecord

  """Returns a specific record"""
  breadcrumb(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: BreadcrumbModelFilter
    orderBy: [BreadcrumbModelOrderBy] = [_updatedAt_DESC]
  ): BreadcrumbRecord

  """Returns a specific record"""
  carouselHoverBlockItem(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: CarouselHoverBlockItemModelFilter
    orderBy: [CarouselHoverBlockItemModelOrderBy] = [_updatedAt_DESC]
  ): CarouselHoverBlockItemRecord

  """Returns the single instance record"""
  cart(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CartRecord

  """Returns a specific record"""
  celebrityBlock(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: CelebrityBlockModelFilter
    orderBy: [CelebrityBlockModelOrderBy] = [_updatedAt_DESC]
  ): CelebrityBlockRecord

  """Returns a specific record"""
  celebrityJewelry(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: CelebrityJewelryModelFilter
    orderBy: [CelebrityJewelryModelOrderBy] = [_updatedAt_DESC]
  ): CelebrityJewelryRecord

  """Returns a specific record"""
  configuration(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: ConfigurationModelFilter
    orderBy: [ConfigurationModelOrderBy] = [_updatedAt_DESC]
  ): ConfigurationRecord

  """Returns a specific record"""
  configuredProductOption(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: ConfiguredProductOptionModelFilter
    orderBy: [ConfiguredProductOptionModelOrderBy] = [_updatedAt_DESC]
  ): ConfiguredProductOptionRecord

  """Returns the single instance record"""
  cookieBanner(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CookieBannerRecord

  """Returns a specific record"""
  country(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: CountryModelFilter
    orderBy: [CountryModelOrderBy] = [_updatedAt_DESC]
  ): CountryRecord

  """Returns a specific record"""
  creativeBlock(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: CreativeBlockModelFilter
    orderBy: [CreativeBlockModelOrderBy] = [_updatedAt_DESC]
  ): CreativeBlockRecord

  """Returns the single instance record"""
  ctoDiamondTable(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CtoDiamondTableRecord

  """Returns a specific record"""
  customProduct(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: CustomProductModelFilter
    orderBy: [CustomProductModelOrderBy] = [_updatedAt_DESC]
  ): CustomProductRecord

  """Returns a specific record"""
  diamondContentBlock(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: DiamondContentBlockModelFilter
    orderBy: [DiamondContentBlockModelOrderBy] = [_updatedAt_DESC]
  ): DiamondContentBlockRecord

  """Returns the single instance record"""
  diamondNotifierPage(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): DiamondNotifierPageRecord

  """Returns the single instance record"""
  diamondPage(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): DiamondPageRecord

  """Returns the single instance record"""
  diamondProduct(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): DiamondProductRecord

  """Returns a specific record"""
  diamondShapeDescription(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: DiamondShapeDescriptionModelFilter
    orderBy: [DiamondShapeDescriptionModelOrderBy] = [_updatedAt_DESC]
  ): DiamondShapeDescriptionRecord

  """Returns a specific record"""
  diamondShapeSpec(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: DiamondShapeSpecModelFilter
    orderBy: [DiamondShapeSpecModelOrderBy] = [_updatedAt_DESC]
  ): DiamondShapeSpecRecord

  """Returns the single instance record"""
  diamondTable(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): DiamondTableRecord

  """Returns the single instance record"""
  emailPopup(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): EmailPopupRecord

  """Returns the single instance record"""
  engagementRingPdpCta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): EngagementRingPdpCtaRecord

  """Returns a specific record"""
  engagementRingProduct(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: EngagementRingProductModelFilter
    orderBy: [EngagementRingProductModelOrderBy] = [_updatedAt_DESC]
  ): EngagementRingProductRecord

  """Returns the single instance record"""
  engagementRingSummaryPage(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): EngagementRingSummaryPageRecord

  """Returns the single instance record"""
  engravingOptionCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): EngravingOptionCopyRecord

  """Returns a specific record"""
  faqAccordionContent(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: FaqAccordionContentModelFilter
    orderBy: [FaqAccordionContentModelOrderBy] = [_updatedAt_DESC]
  ): FaqAccordionContentRecord

  """Returns the single instance record"""
  footerNavigation(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): FooterNavigationRecord

  """Returns a specific record"""
  fullWidthBannerBlock(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: FullWidthBannerBlockModelFilter
    orderBy: [FullWidthBannerBlockModelOrderBy] = [_updatedAt_DESC]
  ): FullWidthBannerBlockRecord

  """Returns the single instance record"""
  giftWithPurchase(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): GiftWithPurchaseRecord

  """Returns a specific record"""
  gridCarouselBlockItem(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: GridCarouselBlockItemModelFilter
    orderBy: [GridCarouselBlockItemModelOrderBy] = [_updatedAt_DESC]
  ): GridCarouselBlockItemRecord

  """Returns a specific record"""
  halfWidthBannerBlock(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: HalfWidthBannerBlockModelFilter
    orderBy: [HalfWidthBannerBlockModelOrderBy] = [_updatedAt_DESC]
  ): HalfWidthBannerBlockRecord

  """Returns the single instance record"""
  headerNavigation(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): HeaderNavigationRecord

  """Returns the single instance record"""
  headerNavigationDynamic(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): HeaderNavigationDynamicRecord

  """Returns the single instance record"""
  homePage(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): HomePageRecord

  """Returns a specific record"""
  humanNamesMapper(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: HumanNamesMapperModelFilter
    orderBy: [HumanNamesMapperModelOrderBy] = [_updatedAt_DESC]
  ): HumanNamesMapperRecord

  """Returns a specific record"""
  image1x1(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: Image1x1ModelFilter
    orderBy: [Image1x1ModelOrderBy] = [_updatedAt_DESC]
  ): Image1x1Record

  """Returns a specific record"""
  image9x7(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: Image9x7ModelFilter
    orderBy: [Image9x7ModelOrderBy] = [_updatedAt_DESC]
  ): Image9x7Record

  """Returns a specific record"""
  instagramReelBlock(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: InstagramReelBlockModelFilter
    orderBy: [InstagramReelBlockModelOrderBy] = [_updatedAt_DESC]
  ): InstagramReelBlockRecord

  """Returns a specific record"""
  jeweleryProductSubCategory(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: JeweleryProductSubCategoryModelFilter
    orderBy: [JeweleryProductSubCategoryModelOrderBy] = [_updatedAt_DESC]
  ): JeweleryProductSubCategoryRecord

  """Returns a specific record"""
  jewelryOmegaProduct(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: JewelryOmegaProductModelFilter
    orderBy: [JewelryOmegaProductModelOrderBy] = [_updatedAt_DESC]
  ): JewelryOmegaProductRecord

  """Returns a specific record"""
  jewelryPdpCta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: JewelryPdpCtaModelFilter
    orderBy: [JewelryPdpCtaModelOrderBy] = [_updatedAt_DESC]
  ): JewelryPdpCtaRecord

  """Returns a specific record"""
  jewelryProduct(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: JewelryProductModelFilter
    orderBy: [JewelryProductModelOrderBy] = [_updatedAt_DESC]
  ): JewelryProductRecord

  """Returns a specific record"""
  jewelrySubcategory(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: JewelrySubcategoryModelFilter
    orderBy: [JewelrySubcategoryModelOrderBy] = [_updatedAt_DESC]
  ): JewelrySubcategoryRecord

  """Returns a specific record"""
  listPage(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: ListPageModelFilter
    orderBy: [ListPageModelOrderBy] = [_updatedAt_DESC]
  ): ListPageRecord

  """Returns a specific record"""
  listpageHeroBanner(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: ListpageHeroBannerModelFilter
    orderBy: [ListpageHeroBannerModelOrderBy] = [_updatedAt_DESC]
  ): ListpageHeroBannerRecord

  """Returns a specific record"""
  navigation(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: NavigationModelFilter
    orderBy: [NavigationModelOrderBy] = [_updatedAt_DESC]
  ): NavigationRecord

  """Returns a specific record"""
  navigationLink(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: NavigationLinkModelFilter
    orderBy: [NavigationLinkModelOrderBy] = [_updatedAt_DESC]
  ): NavigationLinkRecord

  """Returns a specific record"""
  omegaAssetStack(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: OmegaAssetStackModelFilter
    orderBy: [OmegaAssetStackModelOrderBy] = [_updatedAt_DESC]
  ): OmegaAssetStackRecord

  """Returns a specific record"""
  omegaProduct(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: OmegaProductModelFilter
    orderBy: [OmegaProductModelOrderBy] = [_updatedAt_DESC]
  ): OmegaProductRecord

  """Returns a specific record"""
  ourDiamond(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: OurDiamondModelFilter
    orderBy: [OurDiamondModelOrderBy] = [_updatedAt_DESC]
  ): OurDiamondRecord

  """Returns a specific record"""
  pageSeo(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: PageSeoModelFilter
    orderBy: [PageSeoModelOrderBy] = [_updatedAt_DESC]
  ): PageSeoRecord

  """Returns the single instance record"""
  payLater(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): PayLaterRecord

  """Returns a specific record"""
  payLaterOption(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: PayLaterOptionModelFilter
    orderBy: [PayLaterOptionModelOrderBy] = [_updatedAt_DESC]
  ): PayLaterOptionRecord

  """Returns a specific record"""
  plpPromoCard(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: PlpPromoCardModelFilter
    orderBy: [PlpPromoCardModelOrderBy] = [_updatedAt_DESC]
  ): PlpPromoCardRecord

  """Returns a specific record"""
  plpPromoCardCollection(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: PlpPromoCardCollectionModelFilter
    orderBy: [PlpPromoCardCollectionModelOrderBy] = [_updatedAt_DESC]
  ): PlpPromoCardCollectionRecord

  """Returns a specific record"""
  pricingByCurrency(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: PricingByCurrencyModelFilter
    orderBy: [PricingByCurrencyModelOrderBy] = [_updatedAt_DESC]
  ): PricingByCurrencyRecord

  """Returns a specific record"""
  productIconList(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: ProductIconListModelFilter
    orderBy: [ProductIconListModelOrderBy] = [_updatedAt_DESC]
  ): ProductIconListRecord

  """Returns a specific record"""
  productLabel(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: ProductLabelModelFilter
    orderBy: [ProductLabelModelOrderBy] = [_updatedAt_DESC]
  ): ProductLabelRecord

  """Returns a specific record"""
  productListItem(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: ProductListItemModelFilter
    orderBy: [ProductListItemModelOrderBy] = [_updatedAt_DESC]
  ): ProductListItemRecord

  """Returns a specific record"""
  productShippingAndReturn(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: ProductShippingAndReturnModelFilter
    orderBy: [ProductShippingAndReturnModelOrderBy] = [_updatedAt_DESC]
  ): ProductShippingAndReturnRecord

  """Returns a specific record"""
  productSpecLabelCollection(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: ProductSpecLabelCollectionModelFilter
    orderBy: [ProductSpecLabelCollectionModelOrderBy] = [_updatedAt_DESC]
  ): ProductSpecLabelCollectionRecord

  """Returns a specific record"""
  productSuggestionQuadBlock(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: ProductSuggestionQuadBlockModelFilter
    orderBy: [ProductSuggestionQuadBlockModelOrderBy] = [_updatedAt_DESC]
  ): ProductSuggestionQuadBlockRecord

  """Returns a specific record"""
  productTypeFaq(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: ProductTypeFaqModelFilter
    orderBy: [ProductTypeFaqModelOrderBy] = [_updatedAt_DESC]
  ): ProductTypeFaqRecord

  """Returns a specific record"""
  productWaitlist(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: ProductWaitlistModelFilter
    orderBy: [ProductWaitlistModelOrderBy] = [_updatedAt_DESC]
  ): ProductWaitlistRecord

  """Returns a specific record"""
  quadGridItem(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: QuadGridItemModelFilter
    orderBy: [QuadGridItemModelOrderBy] = [_updatedAt_DESC]
  ): QuadGridItemRecord

  """Returns a specific record"""
  quoteBlock(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: QuoteBlockModelFilter
    orderBy: [QuoteBlockModelOrderBy] = [_updatedAt_DESC]
  ): QuoteBlockRecord

  """Returns the single instance record"""
  ringSizeOptionCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): RingSizeOptionCopyRecord

  """Returns the single instance record"""
  shipsInTime(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): ShipsInTimeRecord

  """Returns a specific record"""
  showroom(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: ShowroomModelFilter
    orderBy: [ShowroomModelOrderBy] = [_updatedAt_DESC]
  ): ShowroomRecord

  """Returns a specific record"""
  showroomLink(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: ShowroomLinkModelFilter
    orderBy: [ShowroomLinkModelOrderBy] = [_updatedAt_DESC]
  ): ShowroomLinkRecord

  """Returns the single instance record"""
  showroomNav(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): ShowroomNavRecord

  """Returns a specific record"""
  singleMediaBlock(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: SingleMediaBlockModelFilter
    orderBy: [SingleMediaBlockModelOrderBy] = [_updatedAt_DESC]
  ): SingleMediaBlockRecord

  """Returns a specific record"""
  slickCarouselBlock(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: SlickCarouselBlockModelFilter
    orderBy: [SlickCarouselBlockModelOrderBy] = [_updatedAt_DESC]
  ): SlickCarouselBlockRecord

  """Returns a specific record"""
  socialMediaContent(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: SocialMediaContentModelFilter
    orderBy: [SocialMediaContentModelOrderBy] = [_updatedAt_DESC]
  ): SocialMediaContentRecord

  """Returns a specific record"""
  standardPage(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: StandardPageModelFilter
    orderBy: [StandardPageModelOrderBy] = [position_ASC]
  ): StandardPageRecord

  """Returns a specific record"""
  svgAsset(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: SvgAssetModelFilter
    orderBy: [SvgAssetModelOrderBy] = [_updatedAt_DESC]
  ): SvgAssetRecord

  """Returns a specific record"""
  textOnlyBlock(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: TextOnlyBlockModelFilter
    orderBy: [TextOnlyBlockModelOrderBy] = [_updatedAt_DESC]
  ): TextOnlyBlockRecord

  """Returns a specific record"""
  trioBlock(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: TrioBlockModelFilter
    orderBy: [TrioBlockModelOrderBy] = [_updatedAt_DESC]
  ): TrioBlockRecord

  """Returns a specific asset"""
  upload(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: UploadFilter
    orderBy: [UploadOrderBy] = [_createdAt_DESC]
  ): FileField

  """Returns a specific record"""
  vat(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: VatModelFilter
    orderBy: [VatModelOrderBy] = [_updatedAt_DESC]
  ): VatRecord

  """Returns a specific record"""
  videoBlock(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: VideoBlockModelFilter
    orderBy: [VideoBlockModelOrderBy] = [_updatedAt_DESC]
  ): VideoBlockRecord

  """Returns a specific record"""
  weddingBandProduct(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: WeddingBandProductModelFilter
    orderBy: [WeddingBandProductModelOrderBy] = [_updatedAt_DESC]
  ): WeddingBandProductRecord

  """Returns the single instance record"""
  wishlist(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): WishlistRecord
}

input QuoteBlockModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  _locales: LocalesFilter
  attribution: StringFilter
  attributionFont: StringFilter
  backgroundColor: ColorFilter
  quotationMarksImage: FileFilter
  quote: StringFilter
  quoteFont: StringFilter
  quoteStyle: StringFilter
  textColor: ColorFilter
  OR: [QuoteBlockModelFilter]
  AND: [QuoteBlockModelFilter]
}

enum QuoteBlockModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  attribution_ASC
  attribution_DESC
  attributionFont_ASC
  attributionFont_DESC
  quote_ASC
  quote_DESC
  quoteFont_ASC
  quoteFont_DESC
  quoteStyle_ASC
  quoteStyle_DESC
}

"""Record of type Quote Block (quote_block)"""
type QuoteBlockRecord implements RecordInterface {
  _allAttributionLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allQuoteLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  attribution(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  attributionFont: String
  backgroundColor: ColorField
  createdAt: DateTime!
  id: ItemId!
  quotationMarksImage: FileField
  quote(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  quoteFont: String
  quoteStyle: String
  textColor: ColorField
  updatedAt: DateTime!
}

interface RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  id: ItemId!
}

"""Specifies how to filter by upload type"""
input ResolutionFilter {
  """Search uploads with the specified resolution"""
  eq: ResolutionType

  """Exclude uploads with the specified resolution"""
  neq: ResolutionType

  """Search uploads with the specified resolutions"""
  in: [ResolutionType]

  """Search uploads without the specified resolutions"""
  notIn: [ResolutionType]
}

enum ResolutionType {
  icon
  small
  medium
  large
}

type ResponsiveImage {
  alt: String
  aspectRatio: FloatType!
  base64: String
  bgColor: String
  height: IntType!
  sizes: String!
  src: String!
  srcSet: String!
  title: String
  webpSrcSet: String!
  width: IntType!
}

"""Block of type Ring Face Label (ring_face_label)"""
type RingFaceLabelRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy: String
  createdAt: DateTime!
  id: ItemId!
  specName: String
  updatedAt: DateTime!
}

"""Block of type Ring Size Label (ring_size_label)"""
type RingSizeLabelRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy: String
  createdAt: DateTime!
  id: ItemId!
  specName: String
  updatedAt: DateTime!
}

"""Record of type Ring Size Option Copy (ring_size_option_copy)"""
type RingSizeOptionCopyRecord implements RecordInterface {
  _allRingSizeOptionCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allRingSizeOptionCtaLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  ringSizeOptionCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  ringSizeOptionCta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  title(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  updatedAt: DateTime!
}

type SeoField {
  description: String
  image: FileField
  title: String
  twitterCard: String
}

type SeoFieldMultiLocaleField {
  locale: SiteLocale
  value: SeoField
}

"""Block of type Setting Height Label (setting_height_label)"""
type SettingHeightLabelRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy: String
  createdAt: DateTime!
  id: ItemId!
  specName: String
  updatedAt: DateTime!
}

"""Block of type Setting Label (setting_label)"""
type SettingLabelRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy: String
  createdAt: DateTime!
  id: ItemId!
  specName: String
  updatedAt: DateTime!
}

"""Block of type Shape Label (shape_label)"""
type ShapeLabelRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy: String
  createdAt: DateTime!
  id: ItemId!
  specName: String
  updatedAt: DateTime!
}

"""Block of type Shipping and Returns Label (shipping_and_returns_label)"""
type ShippingAndReturnsLabelRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy: String
  createdAt: DateTime!
  id: ItemId!
  specName: String
  updatedAt: DateTime!
}

"""Record of type Ships In Time (ships_in_time)"""
type ShipsInTimeRecord implements RecordInterface {
  _allBulkShippingTextLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allPlpBannerTextLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allPlpFilterButtonTextLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allPlpMobileBannerTextLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allShippingTextLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allStaticTextLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  assembledToOrderList: [AssembledToOrderProductRecord!]!
  backgroundColor: ColorField
  bulkShippingBusinessDays: IntType
  bulkShippingText(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  countrySpecificEndDate: [CountrySpecificDateSelectorRecord!]!
  createdAt: DateTime!
  endDate: DateTime
  icon: FileField
  id: ItemId!
  isEnabled: BooleanType
  mtoIcon: FileField
  mtoShippingBusinessDays: IntType
  plpBannerText(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  plpFilterButtonText(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  plpIcon: FileField
  plpMobileBannerText(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  shippingText(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  startDate: DateTime
  staticText(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  supportedCountries: [CountryRecord!]!
  textColor: ColorField
  title(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  updatedAt: DateTime!
  useStaticText: BooleanType
}

"""
Block of type Shown With Center Stone Label (shown_with_center_stone_label)
"""
type ShownWithCenterStoneLabelRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy: String
  createdAt: DateTime!
  id: ItemId!
  specName: String
  updatedAt: DateTime!
}

input ShowroomLinkModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  _locales: LocalesFilter
  copy: StringFilter
  country: StringFilter
  flags: StringFilter
  isBold: BooleanFilter
  linkKey: StringFilter
  nestedLinks: LinksFilter
  route: StringFilter
  supportedCountries: LinksFilter
  OR: [ShowroomLinkModelFilter]
  AND: [ShowroomLinkModelFilter]
}

enum ShowroomLinkModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  copy_ASC
  copy_DESC
  country_ASC
  country_DESC
  flags_ASC
  flags_DESC
  isBold_ASC
  isBold_DESC
  linkKey_ASC
  linkKey_DESC
  route_ASC
  route_DESC
}

"""Record of type Showroom Link (showroom_link)"""
type ShowroomLinkRecord implements RecordInterface {
  _allCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allCountryLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allRouteLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  country(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  createdAt: DateTime!
  flags: String
  id: ItemId!
  isBold: BooleanType
  linkKey: String
  nestedLinks: [NavigationLinkRecord!]!
  route(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  supportedCountries: [CountryRecord!]!
  updatedAt: DateTime!
}

input ShowroomModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  address: TextFilter
  appointmentCtaCopy: StringFilter
  appointmentCtaLink: StringFilter
  appointmentMarkdown: TextFilter
  contactLabel: StringFilter
  detailCtaCopy: StringFilter
  detailCtaLink: StringFilter
  directionsCtaCopy: StringFilter
  directionsCtaLink: StringFilter
  directionsImage: FileFilter
  email: StringFilter
  emailCtaStyle: StringFilter
  emailLabel: StringFilter
  emailText: StringFilter
  headingAdditionalClass: StringFilter
  headingType: StringFilter
  hoursOfOperation: TextFilter
  hoursOfOperationLabel: StringFilter
  image: FileFilter
  images: GalleryFilter
  locationLabel: StringFilter
  phone: StringFilter
  phoneLabel: StringFilter
  seoDescription: StringFilter
  seoTitle: StringFilter
  services: TextFilter
  servicesLabel: StringFilter
  slug: StringFilter
  title: StringFilter
  OR: [ShowroomModelFilter]
  AND: [ShowroomModelFilter]
}

enum ShowroomModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  appointmentCtaCopy_ASC
  appointmentCtaCopy_DESC
  appointmentCtaLink_ASC
  appointmentCtaLink_DESC
  contactLabel_ASC
  contactLabel_DESC
  detailCtaCopy_ASC
  detailCtaCopy_DESC
  detailCtaLink_ASC
  detailCtaLink_DESC
  directionsCtaCopy_ASC
  directionsCtaCopy_DESC
  directionsCtaLink_ASC
  directionsCtaLink_DESC
  email_ASC
  email_DESC
  emailCtaStyle_ASC
  emailCtaStyle_DESC
  emailLabel_ASC
  emailLabel_DESC
  emailText_ASC
  emailText_DESC
  headingAdditionalClass_ASC
  headingAdditionalClass_DESC
  headingType_ASC
  headingType_DESC
  hoursOfOperationLabel_ASC
  hoursOfOperationLabel_DESC
  locationLabel_ASC
  locationLabel_DESC
  phone_ASC
  phone_DESC
  phoneLabel_ASC
  phoneLabel_DESC
  seoDescription_ASC
  seoDescription_DESC
  seoTitle_ASC
  seoTitle_DESC
  servicesLabel_ASC
  servicesLabel_DESC
  slug_ASC
  slug_DESC
  title_ASC
  title_DESC
}

"""Record of type Showroom Nav (showroom_nav)"""
type ShowroomNavRecord implements RecordInterface {
  _allTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  links: [ShowroomLinkRecord!]!
  title(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  updatedAt: DateTime!
}

"""Record of type Showroom (showroom)"""
type ShowroomRecord implements RecordInterface {
  _allAddressLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allAppointmentCtaCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allAppointmentMarkdownLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allContactLabelLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDetailCtaCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDirectionsCtaCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allEmailLabelLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allEmailLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allEmailTextLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allHoursOfOperationLabelLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allHoursOfOperationLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allLocationLabelLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allPhoneLabelLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allPhoneLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allSeoDescriptionLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allSeoTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allServicesLabelLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allServicesLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allSlugLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  address(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  appointmentCtaCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  appointmentCtaLink: String
  appointmentMarkdown(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  contactLabel(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  createdAt: DateTime!
  detailCtaCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  detailCtaLink: String
  directionsCtaCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  directionsCtaLink: String
  directionsImage: FileField
  email(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  emailCtaStyle: String
  emailLabel(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  emailText(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  headingAdditionalClass: String
  headingType: String
  hoursOfOperation(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  hoursOfOperationLabel(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  id: ItemId!
  image: FileField
  images: [FileField!]!
  locationLabel(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  phone(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  phoneLabel(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  seoDescription(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  seoTitle(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  services(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  servicesLabel(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  slug(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  title(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  updatedAt: DateTime!
}

"""Block of type sidebar_text_block (sidebar_text_block)"""
type SidebarTextBlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  description: String
  id: ItemId!
  title: String
  updatedAt: DateTime!
}

type SidebarTextBlockRecordListListNonNullMultiLocaleField {
  locale: SiteLocale
  value: [SidebarTextBlockRecord!]!
}

input SingleMediaBlockModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  _locales: LocalesFilter
  copy: StringFilter
  ctaCopy: StringFilter
  ctaRoute: StringFilter
  image: FileFilter
  media: LinkFilter
  title: StringFilter
  OR: [SingleMediaBlockModelFilter]
  AND: [SingleMediaBlockModelFilter]
}

union SingleMediaBlockModelMediaField = Image1x1Record | Image9x7Record | SvgAssetRecord

enum SingleMediaBlockModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  copy_ASC
  copy_DESC
  ctaCopy_ASC
  ctaCopy_DESC
  ctaRoute_ASC
  ctaRoute_DESC
  title_ASC
  title_DESC
}

"""Record of type Single Media Block (single_media_block)"""
type SingleMediaBlockRecord implements RecordInterface {
  _allCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allCtaCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allCtaRouteLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  createdAt: DateTime!
  ctaCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  ctaRoute(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  id: ItemId!
  image: FileField
  media: SingleMediaBlockModelMediaField
  title(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  updatedAt: DateTime!
}

type Site {
  favicon: FileField
  faviconMetaTags(
    """The variants to build"""
    variants: [FaviconType] = [icon]
  ): [Tag!]!
  globalSeo(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): GlobalSeoField
  locales: [SiteLocale!]!
}

enum SiteLocale {
  en_US
  de
  fr
  es
}

input SlickCarouselBlockModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  _locales: LocalesFilter
  image: FileFilter
  itemName: StringFilter
  url: StringFilter
  OR: [SlickCarouselBlockModelFilter]
  AND: [SlickCarouselBlockModelFilter]
}

enum SlickCarouselBlockModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  itemName_ASC
  itemName_DESC
  url_ASC
  url_DESC
}

"""Record of type Slick Carousel Block (slick_carousel_block)"""
type SlickCarouselBlockRecord implements RecordInterface {
  _allItemNameLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allUrlLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  image: FileField
  itemName(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  updatedAt: DateTime!
  url(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
}

input SocialMediaContentModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  credit: StringFilter
  image: FileFilter
  internalName: StringFilter
  postLink: StringFilter
  productLink: StringFilter
  shouldLinkToVraiInstagram: BooleanFilter
  OR: [SocialMediaContentModelFilter]
  AND: [SocialMediaContentModelFilter]
}

enum SocialMediaContentModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  credit_ASC
  credit_DESC
  internalName_ASC
  internalName_DESC
  postLink_ASC
  postLink_DESC
  productLink_ASC
  productLink_DESC
  shouldLinkToVraiInstagram_ASC
  shouldLinkToVraiInstagram_DESC
}

"""Record of type Social Media Content (social_media_content)"""
type SocialMediaContentRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  credit: String
  id: ItemId!
  image: FileField
  internalName: String
  postLink: String
  productLink: String
  shouldLinkToVraiInstagram: BooleanType
  updatedAt: DateTime!
}

"""Block of type Social Media Section (social_media_section)"""
type SocialMediaSectionRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  caption(
    """Process content as markdown"""
    markdown: Boolean
  ): String
  createdAt: DateTime!
  id: ItemId!
  title: String
  updatedAt: DateTime!
}

"""Block of type Specifications Label (specifications_label)"""
type SpecificationsLabelRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy: String
  createdAt: DateTime!
  id: ItemId!
  specName: String
  updatedAt: DateTime!
}

union StandardPageModelContent1Field = ModularAccordionBlockRecord | ModularBlogListTrioBlockRecord | ModularCarouselBlockRecord | ModularCarouselHoverBlockRecord | ModularCelebrityCarouselBlockRecord | ModularCelebrityReelBlockRecord | ModularCollectionHeroBlockRecord | ModularDuoBlockRecord | ModularEmailSignupBlockRecord | ModularFullWidthBannerBlockRecord | ModularGridCarouselBlockRecord | ModularHalfWidthBannerBlockRecord | ModularHalfWidthBlogSummaryBlockRecord | ModularHalfWidthQuadBlockRecord | ModularHeroBannerBlockRecord | ModularInstagramReelBlockRecord | ModularLeoBlockRecord | ModularListTitleBlockRecord | ModularLogoBannerBlockRecord | ModularMiniBannerBlockRecord | ModularProductSliderBlockRecord | ModularProductSuggestionQuadBlockRecord | ModularQuadBlockRecord | ModularQuadGridRecord | ModularQuadLogoBlockRecord | ModularQuadStatisticsBlockRecord | ModularQuoteBlockRecord | ModularRadioFieldRecord | ModularRandomBannerBlockRecord | ModularShowroomBlockRecord | ModularSideBySideBlockRecord | ModularSingleVideoBlockRecord | ModularSkinnyHeroBannerBlockRecord | ModularSlickCarouselBlockRecord | ModularTallHalfWidthBlockLocationCtaRecord | ModularTallHalfWidthBlockRecord | ModularTextInputFieldRecord | ModularTextOnlyBlockRecord | ModularTitleOnlyBlockRecord | ModularTriGridWithOrderTrackingRecord | ModularTrio1x1BlockRecord | ModularTrio9x7BlockRecord | ModularTrioSlide9x7BlockRecord | ModularTrioStaggered9x7BlockRecord | ModularTriosvgBlockRecord | SocialMediaSectionRecord

type StandardPageModelContent1FieldListListNonNullMultiLocaleField {
  locale: SiteLocale
  value: [StandardPageModelContent1Field!]!
}

union StandardPageModelContent2Field = ModularAccordionBlockRecord | ModularBlogListTrioBlockRecord | ModularCarouselBlockRecord | ModularCarouselHoverBlockRecord | ModularCelebrityCarouselBlockRecord | ModularCelebrityReelBlockRecord | ModularCollectionHeroBlockRecord | ModularDuoBlockRecord | ModularEmailSignupBlockRecord | ModularFullWidthBannerBlockRecord | ModularGridCarouselBlockRecord | ModularHalfWidthBannerBlockRecord | ModularHalfWidthBlogSummaryBlockRecord | ModularHalfWidthQuadBlockRecord | ModularHeroBannerBlockRecord | ModularInstagramReelBlockRecord | ModularLeoBlockRecord | ModularListTitleBlockRecord | ModularLogoBannerBlockRecord | ModularMiniBannerBlockRecord | ModularProductSliderBlockRecord | ModularProductSuggestionQuadBlockRecord | ModularQuadBlockRecord | ModularQuadGridRecord | ModularQuoteBlockRecord | ModularRadioFieldRecord | ModularRandomBannerBlockRecord | ModularShowroomBlockRecord | ModularSideBySideBlockRecord | ModularSingleVideoBlockRecord | ModularSkinnyHeroBannerBlockRecord | ModularSlickCarouselBlockRecord | ModularTallHalfWidthBlockLocationCtaRecord | ModularTallHalfWidthBlockRecord | ModularTextInputFieldRecord | ModularTextOnlyBlockRecord | ModularTitleOnlyBlockRecord | ModularTriGridWithOrderTrackingRecord | ModularTrio1x1BlockRecord | ModularTrio9x7BlockRecord | ModularTrioSlide9x7BlockRecord | ModularTrioStaggered9x7BlockRecord | ModularTriosvgBlockRecord | SocialMediaSectionRecord

type StandardPageModelContent2FieldListListNonNullMultiLocaleField {
  locale: SiteLocale
  value: [StandardPageModelContent2Field!]!
}

input StandardPageModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  position: PositionFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  breadcrumb: LinksFilter
  seo: LinkFilter
  slug: StringFilter
  OR: [StandardPageModelFilter]
  AND: [StandardPageModelFilter]
}

enum StandardPageModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  position_ASC
  position_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  slug_ASC
  slug_DESC
}

"""Record of type Standard Page (standard_page)"""
type StandardPageRecord implements RecordInterface {
  _allContent1Locales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StandardPageModelContent1FieldListListNonNullMultiLocaleField!]
  _allContent2Locales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StandardPageModelContent2FieldListListNonNullMultiLocaleField!]
  _allMapLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [JsonKeyRecordListListNonNullMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  breadcrumb: [BreadcrumbRecord!]!
  content1(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StandardPageModelContent1Field!]!
  content2(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StandardPageModelContent2Field!]!
  createdAt: DateTime!
  id: ItemId!
  map(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [JsonKeyRecord!]!
  position: IntType
  seo: PageSeoRecord
  slug: String
  updatedAt: DateTime!
}

"""Specifies how to filter by status"""
input StatusFilter {
  """Search the record with the specified status"""
  eq: ItemStatus

  """Exclude the record with the specified status"""
  neq: ItemStatus

  """Search records with the specified statuses"""
  in: [ItemStatus]

  """Search records without the specified statuses"""
  notIn: [ItemStatus]
}

"""Specifies how to filter Single-line string fields"""
input StringFilter {
  """Filter records based on a regular expression"""
  matches: StringMatchesFilter

  """Exclude records based on a regular expression"""
  notMatches: StringMatchesFilter

  """
  Filter records with the specified field set as blank (null or empty string)
  """
  isBlank: BooleanType

  """
  Filter records with the specified field present (neither null, nor empty string)
  """
  isPresent: BooleanType

  """Search for records with an exact match"""
  eq: String

  """Exclude records with an exact match"""
  neq: String

  """Filter records that equal one of the specified values"""
  in: [String]

  """Filter records that do not equal one of the specified values"""
  notIn: [String]

  """
  Filter records with the specified field defined (i.e. with any value) or not [DEPRECATED]
  """
  exists: BooleanType
}

input StringMatchesFilter {
  pattern: String!
  caseSensitive: BooleanType = false
  regexp: BooleanType = true
}

type StringMultiLocaleField {
  locale: SiteLocale
  value: String
}

input SvgAssetModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  svg: FileFilter
  title: StringFilter
  OR: [SvgAssetModelFilter]
  AND: [SvgAssetModelFilter]
}

enum SvgAssetModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  title_ASC
  title_DESC
}

"""Record of type SVG Asset (svg_asset)"""
type SvgAssetRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  svg: FileField
  title: String
  updatedAt: DateTime!
}

"""Block of type Symmetry Label (symmetry_label)"""
type SymmetryLabelRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy: String
  createdAt: DateTime!
  id: ItemId!
  specName: String
  updatedAt: DateTime!
}

"""Block of type Table Label (table_label)"""
type TableLabelRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy: String
  createdAt: DateTime!
  id: ItemId!
  specName: String
  updatedAt: DateTime!
}

type Tag {
  attributes: MetaTagAttributes
  content: String
  tag: String!
}

"""Block of type teste (teste)"""
type TesteRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  updatedAt: DateTime!
}

"""Specifies how to filter text fields"""
input TextFilter {
  """Filter records based on a regular expression"""
  matches: StringMatchesFilter

  """Exclude records based on a regular expression"""
  notMatches: StringMatchesFilter

  """
  Filter records with the specified field set as blank (null or empty string)
  """
  isBlank: BooleanType

  """
  Filter records with the specified field present (neither null, nor empty string)
  """
  isPresent: BooleanType

  """
  Filter records with the specified field defined (i.e. with any value) or not [DEPRECATED]
  """
  exists: BooleanType
}

input TextOnlyBlockModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  _locales: LocalesFilter
  ctaCopy: StringFilter
  ctaRoute: StringFilter
  desktopCopy: StringFilter
  mobileCopy: StringFilter
  title: StringFilter
  OR: [TextOnlyBlockModelFilter]
  AND: [TextOnlyBlockModelFilter]
}

enum TextOnlyBlockModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  ctaCopy_ASC
  ctaCopy_DESC
  ctaRoute_ASC
  ctaRoute_DESC
  desktopCopy_ASC
  desktopCopy_DESC
  mobileCopy_ASC
  mobileCopy_DESC
  title_ASC
  title_DESC
}

"""Record of type Text Only Block (text_only_block)"""
type TextOnlyBlockRecord implements RecordInterface {
  _allCtaCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allCtaRouteLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDesktopCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allMobileCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  ctaCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  ctaRoute(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  desktopCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  id: ItemId!
  mobileCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  title(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  updatedAt: DateTime!
}

"""Block of type Total Carat Weight Label (total_carat_weight_label)"""
type TotalCaratWeightLabelRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy: String
  createdAt: DateTime!
  id: ItemId!
  specName: String
  updatedAt: DateTime!
}

input TrioBlockModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  _locales: LocalesFilter
  aboveCopy: StringFilter
  belowCopy: StringFilter
  blocks: LinksFilter
  headingAdditionalClass: StringFilter
  headingType: StringFilter
  title: StringFilter
  OR: [TrioBlockModelFilter]
  AND: [TrioBlockModelFilter]
}

enum TrioBlockModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  aboveCopy_ASC
  aboveCopy_DESC
  belowCopy_ASC
  belowCopy_DESC
  headingAdditionalClass_ASC
  headingAdditionalClass_DESC
  headingType_ASC
  headingType_DESC
  title_ASC
  title_DESC
}

"""Record of type Trio Block (trio_block)"""
type TrioBlockRecord implements RecordInterface {
  _allAboveCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allBelowCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  aboveCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  belowCopy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  blocks: [SingleMediaBlockRecord!]!
  createdAt: DateTime!
  headingAdditionalClass: String
  headingType: String
  id: ItemId!
  title(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  updatedAt: DateTime!
}

"""Specifies how to filter by upload type"""
input TypeFilter {
  """Search uploads with the specified type"""
  eq: UploadType

  """Exclude uploads with the specified type"""
  neq: UploadType

  """Search uploads with the specified types"""
  in: [UploadType]

  """Search uploads without the specified types"""
  notIn: [UploadType]
}

"""Specifies how to filter by update datetime"""
input UpdatedAtFilter {
  """
  Filter records with a value that's strictly greater than the one specified. Seconds and milliseconds are truncated from the argument.
  """
  gt: DateTime

  """
  Filter records with a value that's less than the one specified. Seconds and milliseconds are truncated from the argument.
  """
  lt: DateTime

  """
  Filter records with a value that's greater than or equal to than the one specified. Seconds and milliseconds are truncated from the argument.
  """
  gte: DateTime

  """
  Filter records with a value that's less or equal than the one specified. Seconds and milliseconds are truncated from the argument.
  """
  lte: DateTime

  """
  Filter records with a value that's within the specified minute range. Seconds and milliseconds are truncated from the argument.
  """
  eq: DateTime

  """
  Filter records with a value that's outside the specified minute range. Seconds and milliseconds are truncated from the argument.
  """
  neq: DateTime

  """
  Filter records with the specified field defined (i.e. with any value) or not
  """
  exists: BooleanType
}

"""Specifies how to filter by default alt"""
input UploadAltFilter {
  """Filter uploads based on a regular expression"""
  matches: StringMatchesFilter

  """Exclude uploads based on a regular expression"""
  notMatches: StringMatchesFilter

  """Search the uploads with the specified alt"""
  eq: String

  """Exclude the uploads with the specified alt"""
  neq: String

  """Search uploads with the specified values as default alt"""
  in: [String]

  """Search uploads that do not have the specified values as default alt"""
  notIn: [String]

  """
  Filter uploads with the specified field defined (i.e. with any value) or not
  """
  exists: BooleanType
}

"""Specifies how to filter by auhtor"""
input UploadAuthorFilter {
  """Filter uploads based on a regular expression"""
  matches: StringMatchesFilter

  """Exclude uploads based on a regular expression"""
  notMatches: StringMatchesFilter

  """
  Filter uploads with the specified field defined (i.e. with any value) or not
  """
  exists: BooleanType
}

"""Specifies how to filter by basename"""
input UploadBasenameFilter {
  """Filter uploads based on a regular expression"""
  matches: StringMatchesFilter

  """Exclude uploads based on a regular expression"""
  notMatches: StringMatchesFilter
}

"""Specifies how to filter by colors"""
input UploadColorsFilter {
  """Filter uploads that have the specified colors"""
  contains: ColorBucketType

  """Filter uploads that have all of the specified colors"""
  allIn: [ColorBucketType]

  """Filter uploads that have at least one of the specified colors"""
  anyIn: [ColorBucketType]

  """Filter uploads that do not have any of the specified colors"""
  notIn: [ColorBucketType]

  """Search for uploads with an exact match"""
  eq: [ColorBucketType]
}

"""Specifies how to filter by copyright"""
input UploadCopyrightFilter {
  """Filter uploads based on a regular expression"""
  matches: StringMatchesFilter

  """Exclude uploads based on a regular expression"""
  notMatches: StringMatchesFilter

  """
  Filter records with the specified field defined (i.e. with any value) or not
  """
  exists: BooleanType
}

"""Specifies how to filter by creation datetime"""
input UploadCreatedAtFilter {
  """Search for uploads with an exact match"""
  eq: DateTime

  """Exclude uploads with an exact match"""
  neq: DateTime

  """Filter uploads with a value that's less than the one specified"""
  lt: DateTime

  """
  Filter uploads with a value that's less or equal than the one specified
  """
  lte: DateTime

  """
  Filter uploads with a value that's strictly greater than the one specified
  """
  gt: DateTime

  """
  Filter uploads with a value that's greater than or equal to the one specified
  """
  gte: DateTime
}

"""Specifies how to filter by filename"""
input UploadFilenameFilter {
  """Filter uploads based on a regular expression"""
  matches: StringMatchesFilter

  """Exclude uploads based on a regular expression"""
  notMatches: StringMatchesFilter
}

input UploadFilter {
  type: TypeFilter
  inUse: InUseFilter
  resolution: ResolutionFilter
  size: UploadSizeFilter
  tags: UploadTagsFilter
  smartTags: UploadTagsFilter
  colors: UploadColorsFilter
  orientation: OrientationFilter
  id: UploadIdFilter
  mimeType: UploadMimeTypeFilter
  format: UploadFormatFilter
  height: UploadHeightFilter
  width: UploadWidthFilter
  alt: UploadAltFilter
  title: UploadTitleFilter
  notes: UploadNotesFilter
  md5: UploadMd5Filter
  author: UploadAuthorFilter
  copyright: UploadCopyrightFilter
  basename: UploadBasenameFilter
  filename: UploadFilenameFilter
  _createdAt: UploadCreatedAtFilter
  _updatedAt: UploadUpdatedAtFilter
  OR: [UploadFilter]
  AND: [UploadFilter]
}

"""Specifies how to filter by format"""
input UploadFormatFilter {
  """Search the asset with the specified format"""
  eq: String

  """Exclude the asset with the specified format"""
  neq: String

  """Search assets with the specified formats"""
  in: [String]

  """Search assets that do not have the specified formats"""
  notIn: [String]
}

"""Specifies how to filter by height"""
input UploadHeightFilter {
  """Search all assets larger than the specified height"""
  gt: IntType

  """Search all assets smaller than the specified height"""
  lt: IntType

  """Search all assets larger or equal to the specified height"""
  gte: IntType

  """Search all assets larger or equal to the specified height"""
  lte: IntType

  """Search assets with the specified height"""
  eq: IntType

  """Search assets that do not have the specified height"""
  neq: IntType
}

scalar UploadId

"""Specifies how to filter by ID"""
input UploadIdFilter {
  """Search the asset with the specified ID"""
  eq: UploadId

  """Exclude the asset with the specified ID"""
  neq: UploadId

  """Search assets with the specified IDs"""
  in: [UploadId]

  """Search assets that do not have the specified IDs"""
  notIn: [UploadId]
}

"""Specifies how to filter by MD5"""
input UploadMd5Filter {
  """Search the asset with the specified MD5"""
  eq: String

  """Exclude the asset with the specified MD5"""
  neq: String

  """Search assets with the specified MD5s"""
  in: [String]

  """Search assets that do not have the specified MD5s"""
  notIn: [String]
}

"""Specifies how to filter by mime type"""
input UploadMimeTypeFilter {
  """Filter uploads based on a regular expression"""
  matches: StringMatchesFilter

  """Exclude uploads based on a regular expression"""
  notMatches: StringMatchesFilter

  """Search the asset with the specified mime type"""
  eq: String

  """Exclude the asset with the specified mime type"""
  neq: String

  """Search assets with the specified mime types"""
  in: [String]

  """Search assets that do not have the specified mime types"""
  notIn: [String]
}

"""Specifies how to filter by notes"""
input UploadNotesFilter {
  """Filter uploads based on a regular expression"""
  matches: StringMatchesFilter

  """Exclude uploads based on a regular expression"""
  notMatches: StringMatchesFilter

  """
  Filter records with the specified field defined (i.e. with any value) or not
  """
  exists: BooleanType
}

enum UploadOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  size_ASC
  size_DESC
  resolution_ASC
  resolution_DESC
  filename_ASC
  filename_DESC
  basename_ASC
  basename_DESC
  mimeType_ASC
  mimeType_DESC
  format_ASC
  format_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  id_ASC
  id_DESC
}

enum UploadOrientation {
  landscape
  portrait
  square
}

"""Specifies how to filter by size"""
input UploadSizeFilter {
  """Search all assets larger than the specified size (in bytes)"""
  gt: IntType

  """Search all assets smaller than the specified size (in bytes)"""
  lt: IntType

  """Search all assets larger or equal to the specified size (in bytes)"""
  gte: IntType

  """Search all assets larger or equal to the specified size (in bytes)"""
  lte: IntType

  """Search assets with the specified size (in bytes)"""
  eq: IntType

  """Search assets that do not have the specified size (in bytes)"""
  neq: IntType
}

"""Specifies how to filter by tags"""
input UploadTagsFilter {
  """Filter uploads linked to the specified tag"""
  contains: String

  """Filter uploads linked to all of the specified tags"""
  allIn: [String!]

  """Filter uploads linked to at least one of the specified tags"""
  anyIn: [String!]

  """Filter uploads not linked to any of the specified tags"""
  notIn: [String!]

  """Search for uploads with an exact match"""
  eq: [String!]
}

"""Specifies how to filter by default title"""
input UploadTitleFilter {
  """Filter uploads based on a regular expression"""
  matches: StringMatchesFilter

  """Exclude uploads based on a regular expression"""
  notMatches: StringMatchesFilter

  """Search the asset with the specified title"""
  eq: String

  """Exclude the asset with the specified title"""
  neq: String

  """Search assets with the specified as default title"""
  in: [String]

  """Search assets that do not have the specified as default title"""
  notIn: [String]

  """
  Filter assets with the specified field defined (i.e. with any value) or not
  """
  exists: BooleanType
}

enum UploadType {
  image
  audio
  video
  richtext
  presentation
  spreadsheet
  pdfdocument
  archive
}

"""Specifies how to filter by update datetime"""
input UploadUpdatedAtFilter {
  """Search for uploads with an exact match"""
  eq: DateTime

  """Exclude uploads with an exact match"""
  neq: DateTime

  """Filter uploads with a value that's less than the one specified"""
  lt: DateTime

  """
  Filter uploads with a value that's less or equal than the one specified
  """
  lte: DateTime

  """
  Filter uploads with a value that's strictly greater than the one specified
  """
  gt: DateTime

  """
  Filter uploads with a value that's greater than or equal to the one specified
  """
  gte: DateTime
}

type UploadVideoField {
  duration: Int
  framerate: Int
  mp4Url(
    """Pick highest resolution available up to the specified argument"""
    res: VideoMp4Res

    """Pick the exact resolution quality specified in the argument"""
    exactRes: VideoMp4Res
  ): String
  muxAssetId: String!
  muxPlaybackId: String!
  streamingUrl: String!
  thumbnailUrl(
    """
    The file extension of the requested image format. Either png, jpg or gif
    """
    format: MuxThumbnailFormatType = jpg
  ): String!
}

"""Specifies how to filter by width"""
input UploadWidthFilter {
  """Search all assets larger than the specified width"""
  gt: IntType

  """Search all assets smaller than the specified width"""
  lt: IntType

  """Search all assets larger or equal to the specified width"""
  gte: IntType

  """Search all assets larger or equal to the specified width"""
  lte: IntType

  """Search assets with the specified width"""
  eq: IntType

  """Search assets that do not have the specified width"""
  neq: IntType
}

input VatModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  OR: [VatModelFilter]
  AND: [VatModelFilter]
}

enum VatModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
}

"""Record of type VAT (vat)"""
type VatRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  rates: [JsonKeyRecord!]!
  updatedAt: DateTime!
}

input VideoBlockModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  _locales: LocalesFilter
  copy: StringFilter
  thumbnail: FileFilter
  title: StringFilter
  video: FileFilter
  videoSources: GalleryFilter
  OR: [VideoBlockModelFilter]
  AND: [VideoBlockModelFilter]
}

enum VideoBlockModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  copy_ASC
  copy_DESC
  title_ASC
  title_DESC
}

"""Record of type Video Block (video_block)"""
type VideoBlockRecord implements RecordInterface {
  _allCopyLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allVideoLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [FileFieldMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  copy(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  createdAt: DateTime!
  id: ItemId!
  thumbnail: FileField
  title(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  updatedAt: DateTime!
  video(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): FileField
  videoSources: [FileField!]!
}

type VideoBlockRecordMultiLocaleField {
  locale: SiteLocale
  value: VideoBlockRecord
}

enum VideoMp4Res {
  low
  medium
  high
}

"""Block of type Waitlist Page Copy (waitlist_page_copy)"""
type WaitlistPageCopyRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  ctaCopy: String
  id: ItemId!
  outOfStockCopy: String
  updatedAt: DateTime!
}

union WeddingBandProductModelBelowBannerBlocksField = ModularCarouselBlockRecord | ModularCarouselHoverBlockRecord | ModularCelebrityCarouselBlockRecord | ModularCelebrityReelBlockRecord | ModularDuoBlockRecord | ModularEmailSignupBlockRecord | ModularFullWidthBannerBlockRecord | ModularGridCarouselBlockRecord | ModularHalfWidthQuadBlockRecord | ModularInstagramReelBlockRecord | ModularMiniBannerBlockRecord | ModularProductSliderBlockRecord | ModularQuadBlockRecord | ModularQuadGridRecord | ModularShowroomBlockRecord | ModularSideBySideBlockRecord | ModularSingleVideoBlockRecord | ModularTallHalfWidthBlockRecord | ModularTextOnlyBlockRecord | ModularTrio9x7BlockRecord | ModularTrioSlide9x7BlockRecord | ModularTrioStaggered9x7BlockRecord | SocialMediaSectionRecord

input WeddingBandProductModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  _locales: LocalesFilter
  bandDepth: StringFilter
  bandWidth: StringFilter
  caratWeight: StringFilter
  diamondContentBlock: LinkFilter
  diamondDescription: TextFilter
  diamondVideoBlock: LinkFilter
  hasDiamond: BooleanFilter
  isPromoIconEnabled: BooleanFilter
  metalWeight: StringFilter
  pageCopy: LinksFilter
  paveCaratWeight: StringFilter
  productDescription: TextFilter
  productFaqBlock: LinkFilter
  productIconList: LinkFilter
  productLabel: LinkFilter
  products: LinksFilter
  productTitle: StringFilter
  productType: StringFilter
  seoDescription: TextFilter
  seoTitle: StringFilter
  shouldUseDefaultPrice: BooleanFilter
  shownWithCtwLabel: StringFilter
  slug: StringFilter
  specBlockTitle: StringFilter
  specImage: StringFilter
  specLabels: LinkFilter
  subCategory: LinksFilter
  trioBlocks: LinkFilter
  OR: [WeddingBandProductModelFilter]
  AND: [WeddingBandProductModelFilter]
}

enum WeddingBandProductModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  bandDepth_ASC
  bandDepth_DESC
  bandWidth_ASC
  bandWidth_DESC
  caratWeight_ASC
  caratWeight_DESC
  hasDiamond_ASC
  hasDiamond_DESC
  isPromoIconEnabled_ASC
  isPromoIconEnabled_DESC
  metalWeight_ASC
  metalWeight_DESC
  paveCaratWeight_ASC
  paveCaratWeight_DESC
  productTitle_ASC
  productTitle_DESC
  productType_ASC
  productType_DESC
  seoTitle_ASC
  seoTitle_DESC
  shouldUseDefaultPrice_ASC
  shouldUseDefaultPrice_DESC
  shownWithCtwLabel_ASC
  shownWithCtwLabel_DESC
  slug_ASC
  slug_DESC
  specBlockTitle_ASC
  specBlockTitle_DESC
  specImage_ASC
  specImage_DESC
}

union WeddingBandProductModelPageCopyField = EngagementRingPdpCtaRecord | EngravingOptionCopyRecord | RingSizeOptionCopyRecord

"""Record of type 3.0 Wedding Band Product (wedding_band_product)"""
type WeddingBandProductRecord implements RecordInterface {
  _allBandDepthLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allBandWidthLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDiamondDescriptionLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allMetalWeightLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allOptionListLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [ModularProductOptionRecordListListNonNullMultiLocaleField!]
  _allPaveCaratWeightLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allProductDescriptionLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allProductTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allSeoDescriptionLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allSeoTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allSpecBlockTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  bandDepth(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  bandWidth(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  belowBannerBlocks: [WeddingBandProductModelBelowBannerBlocksField!]!
  caratWeight: String
  createdAt: DateTime!
  diamondContentBlock: DiamondContentBlockRecord
  diamondDescription(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  diamondVideoBlock: VideoBlockRecord
  hasDiamond: BooleanType
  id: ItemId!
  isPromoIconEnabled: BooleanType
  metalWeight(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  optionList(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [ModularProductOptionRecord!]!
  pageCopy: [WeddingBandProductModelPageCopyField!]!
  paveCaratWeight(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  productDescription(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  productFaqBlock: ProductTypeFaqRecord
  productIconList: ProductIconListRecord
  productLabel: ProductLabelRecord
  productTitle(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  productType: String
  products: [OmegaProductRecord!]!
  seoDescription(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  seoTitle(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  shouldUseDefaultPrice: BooleanType
  shownWithCtwLabel: String
  slug: String
  specBlockTitle(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  specImage: String
  specLabels: ProductSpecLabelCollectionRecord
  subCategory: [JeweleryProductSubCategoryRecord!]!
  trioBlocks: TrioBlockRecord
  updatedAt: DateTime!
}

"""Record of type WishList (wishlist)"""
type WishlistRecord implements RecordInterface {
  _allButtonRemoveLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allButtonShareLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allButtonShopLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allButtonViewLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allModalSubtitleLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allModalSubtitleLoggedInLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allModalTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allNoResultLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allPageSeoDescriptionLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allPageSeoTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allPageSubtitleLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allPageSubtitleLoggedInLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allPageTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allShareWishlistModalSubtitleLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allShareWishlistModalTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allSharedWishlistPageSeoDescriptionLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allSharedWishlistPageSeoTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allSharedWishlistPageSubtitleLocales(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [StringMultiLocaleField!]
  _allSharedWishlistPageTitleLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allTabAllLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allTabEngagementLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allTabJewelryLocales(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """SEO meta tags"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  buttonRemove(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  buttonShare(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  buttonShop(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  buttonView(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  createdAt: DateTime!
  id: ItemId!
  modalSubtitle(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  modalSubtitleLoggedIn(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  modalTitle(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  noResult(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  pageSeoDescription(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  pageSeoTitle(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  pageSubtitle(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  pageSubtitleLoggedIn(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  pageTitle(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  shareWishlistModalSubtitle(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  shareWishlistModalTitle(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  sharedWishlistPageSeoDescription(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  sharedWishlistPageSeoTitle(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  sharedWishlistPageSubtitle(
    """Process content as markdown"""
    markdown: Boolean

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): String
  sharedWishlistPageTitle(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  tabAll(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  tabEngagement(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  tabJewelry(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  updatedAt: DateTime!
}

type focalPoint {
  x: FloatType!
  y: FloatType!
}