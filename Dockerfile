FROM --platform=$BUILDPLATFORM node:18-slim as builder

# Build application and add additional files
WORKDIR /vrai-server

# Only add basic files without the application itself to avoid rebuilding
# layers when files (package.json etc.) have not changed
COPY ./package.json package.json
COPY ./yarn.lock yarn.lock

RUN apt update && apt install -y \
    git \
    g++ \
    make \
    openssl \
    python3 \
    && rm -rf /var/lib/apt/lists/*
RUN yarn install --frozen-lockfile

COPY ./nx.json nx.json
COPY ./jest.preset.js jest.preset.js
COPY ./jest.config.ts jest.config.ts
COPY ./tsconfig.base.json tsconfig.base.json
COPY ./libs/server libs/server
COPY ./libs/shared libs/shared

COPY ./apps apps

RUN yarn build:server

# Prepare the dist image with additional node_modules
WORKDIR /vrai-server/dist/apps/server

# package.json was generated by the build process, however the original
# yarn.lock needs to be used to ensure the same versions
COPY ./yarn.lock /vrai-server/dist/apps/server/yarn.lock
RUN yarn

# Overwrite the generated package.json with the original one to ensure having
# all the scripts
COPY package.json /vrai-server/dist/apps/server

# Image to run, copy everything needed from builder
FROM node:18-slim
RUN apt update && apt install -y \
    openssl \
    && rm -rf /var/lib/apt/lists/*

COPY --from=builder /vrai-server/dist/apps /vrai-server/apps
WORKDIR /vrai-server/apps/server
EXPOSE 3333
ENV NODE_ENV production
CMD ["yarn", "start:server"]
